(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
* @vue/shared v3.5.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function R9(i){const e=Object.create(null);for(const t of i.split(","))e[t]=1;return t=>t in e}const Y2={},ei=[],w3=()=>{},vh=()=>!1,Ca=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&(i.charCodeAt(2)>122||i.charCodeAt(2)<97),P9=i=>i.startsWith("onUpdate:"),et=Object.assign,L9=(i,e)=>{const t=i.indexOf(e);t>-1&&i.splice(t,1)},xh=Object.prototype.hasOwnProperty,N2=(i,e)=>xh.call(i,e),h2=Array.isArray,ti=i=>Ra(i)==="[object Map]",Wu=i=>Ra(i)==="[object Set]",m2=i=>typeof i=="function",ye=i=>typeof i=="string",N0=i=>typeof i=="symbol",te=i=>i!==null&&typeof i=="object",Xu=i=>(te(i)||m2(i))&&m2(i.then)&&m2(i.catch),qu=Object.prototype.toString,Ra=i=>qu.call(i),yh=i=>Ra(i).slice(8,-1),$u=i=>Ra(i)==="[object Object]",D9=i=>ye(i)&&i!=="NaN"&&i[0]!=="-"&&""+parseInt(i,10)===i,er=R9(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Pa=i=>{const e=Object.create(null);return t=>e[t]||(e[t]=i(t))},Mh=/-(\w)/g,R0=Pa(i=>i.replace(Mh,(e,t)=>t?t.toUpperCase():"")),Sh=/\B([A-Z])/g,An=Pa(i=>i.replace(Sh,"-$1").toLowerCase()),Yu=Pa(i=>i.charAt(0).toUpperCase()+i.slice(1)),ja=Pa(i=>i?`on${Yu(i)}`:""),M0=(i,e)=>!Object.is(i,e),Ka=(i,...e)=>{for(let t=0;t<i.length;t++)i[t](...e)},r4=(i,e,t,n=!1)=>{Object.defineProperty(i,e,{configurable:!0,enumerable:!1,writable:n,value:t})},bh=i=>{const e=parseFloat(i);return isNaN(e)?i:e};let Dl;const La=()=>Dl||(Dl=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function I9(i){if(h2(i)){const e={};for(let t=0;t<i.length;t++){const n=i[t],r=ye(n)?Ah(n):I9(n);if(r)for(const s in r)e[s]=r[s]}return e}else if(ye(i)||te(i))return i}const Eh=/;(?![^(]*\))/g,Th=/:([^]+)/,wh=/\/\*[^]*?\*\//g;function Ah(i){const e={};return i.replace(wh,"").split(Eh).forEach(t=>{if(t){const n=t.split(Th);n.length>1&&(e[n[0].trim()]=n[1].trim())}}),e}function Da(i){let e="";if(ye(i))e=i;else if(h2(i))for(let t=0;t<i.length;t++){const n=Da(i[t]);n&&(e+=n+" ")}else if(te(i))for(const t in i)i[t]&&(e+=t+" ");return e.trim()}const Ch="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Rh=R9(Ch);function ju(i){return!!i||i===""}const Ku=i=>!!(i&&i.__v_isRef===!0),S0=i=>ye(i)?i:i==null?"":h2(i)||te(i)&&(i.toString===qu||!m2(i.toString))?Ku(i)?S0(i.value):JSON.stringify(i,Zu,2):String(i),Zu=(i,e)=>Ku(e)?Zu(i,e.value):ti(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[n,r],s)=>(t[Za(n,s)+" =>"]=r,t),{})}:Wu(e)?{[`Set(${e.size})`]:[...e.values()].map(t=>Za(t))}:N0(e)?Za(e):te(e)&&!h2(e)&&!$u(e)?String(e):e,Za=(i,e="")=>{var t;return N0(i)?`Symbol(${(t=i.description)!=null?t:e})`:i};/**
* @vue/reactivity v3.5.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let gt;class Ph{constructor(e=!1){this.detached=e,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=gt,!e&&gt&&(this.index=(gt.scopes||(gt.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].pause();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].resume();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].resume()}}run(e){if(this._active){const t=gt;try{return gt=this,e()}finally{gt=t}}}on(){++this._on===1&&(this.prevScope=gt,gt=this)}off(){this._on>0&&--this._on===0&&(gt=this.prevScope,this.prevScope=void 0)}stop(e){if(this._active){this._active=!1;let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(this.effects.length=0,t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.cleanups.length=0,this.scopes){for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0}}}function Lh(){return gt}let Z2;const Ja=new WeakSet;class Ju{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,gt&&gt.active&&gt.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Ja.has(this)&&(Ja.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||e6(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Il(this),t6(this);const e=Z2,t=u3;Z2=this,u3=!0;try{return this.fn()}finally{n6(this),Z2=e,u3=t,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)F9(e);this.deps=this.depsTail=void 0,Il(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Ja.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){s4(this)&&this.run()}get dirty(){return s4(this)}}let Qu=0,tr,nr;function e6(i,e=!1){if(i.flags|=8,e){i.next=nr,nr=i;return}i.next=tr,tr=i}function U9(){Qu++}function O9(){if(--Qu>0)return;if(nr){let e=nr;for(nr=void 0;e;){const t=e.next;e.next=void 0,e.flags&=-9,e=t}}let i;for(;tr;){let e=tr;for(tr=void 0;e;){const t=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(n){i||(i=n)}e=t}}if(i)throw i}function t6(i){for(let e=i.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function n6(i){let e,t=i.depsTail,n=t;for(;n;){const r=n.prevDep;n.version===-1?(n===t&&(t=r),F9(n),Dh(n)):e=n,n.dep.activeLink=n.prevActiveLink,n.prevActiveLink=void 0,n=r}i.deps=e,i.depsTail=t}function s4(i){for(let e=i.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(i6(e.dep.computed)||e.dep.version!==e.version))return!0;return!!i._dirty}function i6(i){if(i.flags&4&&!(i.flags&16)||(i.flags&=-17,i.globalVersion===xr)||(i.globalVersion=xr,!i.isSSR&&i.flags&128&&(!i.deps&&!i._dirty||!s4(i))))return;i.flags|=2;const e=i.dep,t=Z2,n=u3;Z2=i,u3=!0;try{t6(i);const r=i.fn(i._value);(e.version===0||M0(r,i._value))&&(i.flags|=128,i._value=r,e.version++)}catch(r){throw e.version++,r}finally{Z2=t,u3=n,n6(i),i.flags&=-3}}function F9(i,e=!1){const{dep:t,prevSub:n,nextSub:r}=i;if(n&&(n.nextSub=r,i.prevSub=void 0),r&&(r.prevSub=n,i.nextSub=void 0),t.subs===i&&(t.subs=n,!n&&t.computed)){t.computed.flags&=-5;for(let s=t.computed.deps;s;s=s.nextDep)F9(s,!0)}!e&&!--t.sc&&t.map&&t.map.delete(t.key)}function Dh(i){const{prevDep:e,nextDep:t}=i;e&&(e.nextDep=t,i.prevDep=void 0),t&&(t.prevDep=e,i.nextDep=void 0)}let u3=!0;const r6=[];function Z3(){r6.push(u3),u3=!1}function J3(){const i=r6.pop();u3=i===void 0?!0:i}function Il(i){const{cleanup:e}=i;if(i.cleanup=void 0,e){const t=Z2;Z2=void 0;try{e()}finally{Z2=t}}}let xr=0;class Ih{constructor(e,t){this.sub=e,this.dep=t,this.version=t.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class N9{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(e){if(!Z2||!u3||Z2===this.computed)return;let t=this.activeLink;if(t===void 0||t.sub!==Z2)t=this.activeLink=new Ih(Z2,this),Z2.deps?(t.prevDep=Z2.depsTail,Z2.depsTail.nextDep=t,Z2.depsTail=t):Z2.deps=Z2.depsTail=t,s6(t);else if(t.version===-1&&(t.version=this.version,t.nextDep)){const n=t.nextDep;n.prevDep=t.prevDep,t.prevDep&&(t.prevDep.nextDep=n),t.prevDep=Z2.depsTail,t.nextDep=void 0,Z2.depsTail.nextDep=t,Z2.depsTail=t,Z2.deps===t&&(Z2.deps=n)}return t}trigger(e){this.version++,xr++,this.notify(e)}notify(e){U9();try{for(let t=this.subs;t;t=t.prevSub)t.sub.notify()&&t.sub.dep.notify()}finally{O9()}}}function s6(i){if(i.dep.sc++,i.sub.flags&4){const e=i.dep.computed;if(e&&!i.dep.subs){e.flags|=20;for(let n=e.deps;n;n=n.nextDep)s6(n)}const t=i.dep.subs;t!==i&&(i.prevSub=t,t&&(t.nextSub=i)),i.dep.subs=i}}const na=new WeakMap,fn=Symbol(""),a4=Symbol(""),yr=Symbol("");function je(i,e,t){if(u3&&Z2){let n=na.get(i);n||na.set(i,n=new Map);let r=n.get(t);r||(n.set(t,r=new N9),r.map=n,r.key=t),r.track()}}function H3(i,e,t,n,r,s){const a=na.get(i);if(!a){xr++;return}const o=l=>{l&&l.trigger()};if(U9(),e==="clear")a.forEach(o);else{const l=h2(i),c=l&&D9(t);if(l&&t==="length"){const u=Number(n);a.forEach((f,h)=>{(h==="length"||h===yr||!N0(h)&&h>=u)&&o(f)})}else switch((t!==void 0||a.has(void 0))&&o(a.get(t)),c&&o(a.get(yr)),e){case"add":l?c&&o(a.get("length")):(o(a.get(fn)),ti(i)&&o(a.get(a4)));break;case"delete":l||(o(a.get(fn)),ti(i)&&o(a.get(a4)));break;case"set":ti(i)&&o(a.get(fn));break}}O9()}function Uh(i,e){const t=na.get(i);return t&&t.get(e)}function Rn(i){const e=O2(i);return e===i?e:(je(e,"iterate",yr),Jt(i)?e:e.map(Ne))}function Ia(i){return je(i=O2(i),"iterate",yr),i}const Oh={__proto__:null,[Symbol.iterator](){return Qa(this,Symbol.iterator,Ne)},concat(...i){return Rn(this).concat(...i.map(e=>h2(e)?Rn(e):e))},entries(){return Qa(this,"entries",i=>(i[1]=Ne(i[1]),i))},every(i,e){return L3(this,"every",i,e,void 0,arguments)},filter(i,e){return L3(this,"filter",i,e,t=>t.map(Ne),arguments)},find(i,e){return L3(this,"find",i,e,Ne,arguments)},findIndex(i,e){return L3(this,"findIndex",i,e,void 0,arguments)},findLast(i,e){return L3(this,"findLast",i,e,Ne,arguments)},findLastIndex(i,e){return L3(this,"findLastIndex",i,e,void 0,arguments)},forEach(i,e){return L3(this,"forEach",i,e,void 0,arguments)},includes(...i){return eo(this,"includes",i)},indexOf(...i){return eo(this,"indexOf",i)},join(i){return Rn(this).join(i)},lastIndexOf(...i){return eo(this,"lastIndexOf",i)},map(i,e){return L3(this,"map",i,e,void 0,arguments)},pop(){return Ui(this,"pop")},push(...i){return Ui(this,"push",i)},reduce(i,...e){return Ul(this,"reduce",i,e)},reduceRight(i,...e){return Ul(this,"reduceRight",i,e)},shift(){return Ui(this,"shift")},some(i,e){return L3(this,"some",i,e,void 0,arguments)},splice(...i){return Ui(this,"splice",i)},toReversed(){return Rn(this).toReversed()},toSorted(i){return Rn(this).toSorted(i)},toSpliced(...i){return Rn(this).toSpliced(...i)},unshift(...i){return Ui(this,"unshift",i)},values(){return Qa(this,"values",Ne)}};function Qa(i,e,t){const n=Ia(i),r=n[e]();return n!==i&&!Jt(i)&&(r._next=r.next,r.next=()=>{const s=r._next();return s.value&&(s.value=t(s.value)),s}),r}const Fh=Array.prototype;function L3(i,e,t,n,r,s){const a=Ia(i),o=a!==i&&!Jt(i),l=a[e];if(l!==Fh[e]){const f=l.apply(i,s);return o?Ne(f):f}let c=t;a!==i&&(o?c=function(f,h){return t.call(this,Ne(f),h,i)}:t.length>2&&(c=function(f,h){return t.call(this,f,h,i)}));const u=l.call(a,c,n);return o&&r?r(u):u}function Ul(i,e,t,n){const r=Ia(i);let s=t;return r!==i&&(Jt(i)?t.length>3&&(s=function(a,o,l){return t.call(this,a,o,l,i)}):s=function(a,o,l){return t.call(this,a,Ne(o),l,i)}),r[e](s,...n)}function eo(i,e,t){const n=O2(i);je(n,"iterate",yr);const r=n[e](...t);return(r===-1||r===!1)&&H9(t[0])?(t[0]=O2(t[0]),n[e](...t)):r}function Ui(i,e,t=[]){Z3(),U9();const n=O2(i)[e].apply(i,t);return O9(),J3(),n}const Nh=R9("__proto__,__v_isRef,__isVue"),a6=new Set(Object.getOwnPropertyNames(Symbol).filter(i=>i!=="arguments"&&i!=="caller").map(i=>Symbol[i]).filter(N0));function kh(i){N0(i)||(i=String(i));const e=O2(this);return je(e,"has",i),e.hasOwnProperty(i)}class o6{constructor(e=!1,t=!1){this._isReadonly=e,this._isShallow=t}get(e,t,n){if(t==="__v_skip")return e.__v_skip;const r=this._isReadonly,s=this._isShallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw")return n===(r?s?Yh:f6:s?u6:c6).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(n)?e:void 0;const a=h2(e);if(!r){let l;if(a&&(l=Oh[t]))return l;if(t==="hasOwnProperty")return kh}const o=Reflect.get(e,t,He(e)?e:n);return(N0(t)?a6.has(t):Nh(t))||(r||je(e,"get",t),s)?o:He(o)?a&&D9(t)?o:o.value:te(o)?r?h6(o):B9(o):o}}class l6 extends o6{constructor(e=!1){super(!1,e)}set(e,t,n,r){let s=e[t];if(!this._isShallow){const l=P0(s);if(!Jt(n)&&!P0(n)&&(s=O2(s),n=O2(n)),!h2(e)&&He(s)&&!He(n))return l?!1:(s.value=n,!0)}const a=h2(e)&&D9(t)?Number(t)<e.length:N2(e,t),o=Reflect.set(e,t,n,He(e)?e:r);return e===O2(r)&&(a?M0(n,s)&&H3(e,"set",t,n):H3(e,"add",t,n)),o}deleteProperty(e,t){const n=N2(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&n&&H3(e,"delete",t,void 0),r}has(e,t){const n=Reflect.has(e,t);return(!N0(t)||!a6.has(t))&&je(e,"has",t),n}ownKeys(e){return je(e,"iterate",h2(e)?"length":fn),Reflect.ownKeys(e)}}class Bh extends o6{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const zh=new l6,Hh=new Bh,Vh=new l6(!0);const o4=i=>i,jr=i=>Reflect.getPrototypeOf(i);function Gh(i,e,t){return function(...n){const r=this.__v_raw,s=O2(r),a=ti(s),o=i==="entries"||i===Symbol.iterator&&a,l=i==="keys"&&a,c=r[i](...n),u=t?o4:e?ia:Ne;return!e&&je(s,"iterate",l?a4:fn),{next(){const{value:f,done:h}=c.next();return h?{value:f,done:h}:{value:o?[u(f[0]),u(f[1])]:u(f),done:h}},[Symbol.iterator](){return this}}}}function Kr(i){return function(...e){return i==="delete"?!1:i==="clear"?void 0:this}}function Wh(i,e){const t={get(r){const s=this.__v_raw,a=O2(s),o=O2(r);i||(M0(r,o)&&je(a,"get",r),je(a,"get",o));const{has:l}=jr(a),c=e?o4:i?ia:Ne;if(l.call(a,r))return c(s.get(r));if(l.call(a,o))return c(s.get(o));s!==a&&s.get(r)},get size(){const r=this.__v_raw;return!i&&je(O2(r),"iterate",fn),Reflect.get(r,"size",r)},has(r){const s=this.__v_raw,a=O2(s),o=O2(r);return i||(M0(r,o)&&je(a,"has",r),je(a,"has",o)),r===o?s.has(r):s.has(r)||s.has(o)},forEach(r,s){const a=this,o=a.__v_raw,l=O2(o),c=e?o4:i?ia:Ne;return!i&&je(l,"iterate",fn),o.forEach((u,f)=>r.call(s,c(u),c(f),a))}};return et(t,i?{add:Kr("add"),set:Kr("set"),delete:Kr("delete"),clear:Kr("clear")}:{add(r){!e&&!Jt(r)&&!P0(r)&&(r=O2(r));const s=O2(this);return jr(s).has.call(s,r)||(s.add(r),H3(s,"add",r,r)),this},set(r,s){!e&&!Jt(s)&&!P0(s)&&(s=O2(s));const a=O2(this),{has:o,get:l}=jr(a);let c=o.call(a,r);c||(r=O2(r),c=o.call(a,r));const u=l.call(a,r);return a.set(r,s),c?M0(s,u)&&H3(a,"set",r,s):H3(a,"add",r,s),this},delete(r){const s=O2(this),{has:a,get:o}=jr(s);let l=a.call(s,r);l||(r=O2(r),l=a.call(s,r)),o&&o.call(s,r);const c=s.delete(r);return l&&H3(s,"delete",r,void 0),c},clear(){const r=O2(this),s=r.size!==0,a=r.clear();return s&&H3(r,"clear",void 0,void 0),a}}),["keys","values","entries",Symbol.iterator].forEach(r=>{t[r]=Gh(r,i,e)}),t}function k9(i,e){const t=Wh(i,e);return(n,r,s)=>r==="__v_isReactive"?!i:r==="__v_isReadonly"?i:r==="__v_raw"?n:Reflect.get(N2(t,r)&&r in n?t:n,r,s)}const Xh={get:k9(!1,!1)},qh={get:k9(!1,!0)},$h={get:k9(!0,!1)};const c6=new WeakMap,u6=new WeakMap,f6=new WeakMap,Yh=new WeakMap;function jh(i){switch(i){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Kh(i){return i.__v_skip||!Object.isExtensible(i)?0:jh(yh(i))}function B9(i){return P0(i)?i:z9(i,!1,zh,Xh,c6)}function Zh(i){return z9(i,!1,Vh,qh,u6)}function h6(i){return z9(i,!0,Hh,$h,f6)}function z9(i,e,t,n,r){if(!te(i)||i.__v_raw&&!(e&&i.__v_isReactive))return i;const s=Kh(i);if(s===0)return i;const a=r.get(i);if(a)return a;const o=new Proxy(i,s===2?n:t);return r.set(i,o),o}function ni(i){return P0(i)?ni(i.__v_raw):!!(i&&i.__v_isReactive)}function P0(i){return!!(i&&i.__v_isReadonly)}function Jt(i){return!!(i&&i.__v_isShallow)}function H9(i){return i?!!i.__v_raw:!1}function O2(i){const e=i&&i.__v_raw;return e?O2(e):i}function Jh(i){return!N2(i,"__v_skip")&&Object.isExtensible(i)&&r4(i,"__v_skip",!0),i}const Ne=i=>te(i)?B9(i):i,ia=i=>te(i)?h6(i):i;function He(i){return i?i.__v_isRef===!0:!1}function Be(i){return Qh(i,!1)}function Qh(i,e){return He(i)?i:new ed(i,e)}class ed{constructor(e,t){this.dep=new N9,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=t?e:O2(e),this._value=t?e:Ne(e),this.__v_isShallow=t}get value(){return this.dep.track(),this._value}set value(e){const t=this._rawValue,n=this.__v_isShallow||Jt(e)||P0(e);e=n?e:O2(e),M0(e,t)&&(this._rawValue=e,this._value=n?e:Ne(e),this.dep.trigger())}}function ra(i){return He(i)?i.value:i}const td={get:(i,e,t)=>e==="__v_raw"?i:ra(Reflect.get(i,e,t)),set:(i,e,t,n)=>{const r=i[e];return He(r)&&!He(t)?(r.value=t,!0):Reflect.set(i,e,t,n)}};function d6(i){return ni(i)?i:new Proxy(i,td)}function nd(i){const e=h2(i)?new Array(i.length):{};for(const t in i)e[t]=rd(i,t);return e}class id{constructor(e,t,n){this._object=e,this._key=t,this._defaultValue=n,this.__v_isRef=!0,this._value=void 0}get value(){const e=this._object[this._key];return this._value=e===void 0?this._defaultValue:e}set value(e){this._object[this._key]=e}get dep(){return Uh(O2(this._object),this._key)}}function rd(i,e,t){const n=i[e];return He(n)?n:new id(i,e,t)}class sd{constructor(e,t,n){this.fn=e,this.setter=t,this._value=void 0,this.dep=new N9(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=xr-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!t,this.isSSR=n}notify(){if(this.flags|=16,!(this.flags&8)&&Z2!==this)return e6(this,!0),!0}get value(){const e=this.dep.track();return i6(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function ad(i,e,t=!1){let n,r;return m2(i)?n=i:(n=i.get,r=i.set),new sd(n,r,t)}const Zr={},sa=new WeakMap;let K0;function od(i,e=!1,t=K0){if(t){let n=sa.get(t);n||sa.set(t,n=[]),n.push(i)}}function ld(i,e,t=Y2){const{immediate:n,deep:r,once:s,scheduler:a,augmentJob:o,call:l}=t,c=y=>r?y:Jt(y)||r===!1||r===0?V3(y,1):V3(y);let u,f,h,d,g=!1,_=!1;if(He(i)?(f=()=>i.value,g=Jt(i)):ni(i)?(f=()=>c(i),g=!0):h2(i)?(_=!0,g=i.some(y=>ni(y)||Jt(y)),f=()=>i.map(y=>{if(He(y))return y.value;if(ni(y))return c(y);if(m2(y))return l?l(y,2):y()})):m2(i)?e?f=l?()=>l(i,2):i:f=()=>{if(h){Z3();try{h()}finally{J3()}}const y=K0;K0=u;try{return l?l(i,3,[d]):i(d)}finally{K0=y}}:f=w3,e&&r){const y=f,C=r===!0?1/0:r;f=()=>V3(y(),C)}const m=Lh(),p=()=>{u.stop(),m&&m.active&&L9(m.effects,u)};if(s&&e){const y=e;e=(...C)=>{y(...C),p()}}let b=_?new Array(i.length).fill(Zr):Zr;const w=y=>{if(!(!(u.flags&1)||!u.dirty&&!y))if(e){const C=u.run();if(r||g||(_?C.some((A,L)=>M0(A,b[L])):M0(C,b))){h&&h();const A=K0;K0=u;try{const L=[C,b===Zr?void 0:_&&b[0]===Zr?[]:b,d];b=C,l?l(e,3,L):e(...L)}finally{K0=A}}}else u.run()};return o&&o(w),u=new Ju(f),u.scheduler=a?()=>a(w,!1):w,d=y=>od(y,!1,u),h=u.onStop=()=>{const y=sa.get(u);if(y){if(l)l(y,4);else for(const C of y)C();sa.delete(u)}},e?n?w(!0):b=u.run():a?a(w.bind(null,!0),!0):u.run(),p.pause=u.pause.bind(u),p.resume=u.resume.bind(u),p.stop=p,p}function V3(i,e=1/0,t){if(e<=0||!te(i)||i.__v_skip||(t=t||new Set,t.has(i)))return i;if(t.add(i),e--,He(i))V3(i.value,e,t);else if(h2(i))for(let n=0;n<i.length;n++)V3(i[n],e,t);else if(Wu(i)||ti(i))i.forEach(n=>{V3(n,e,t)});else if($u(i)){for(const n in i)V3(i[n],e,t);for(const n of Object.getOwnPropertySymbols(i))Object.prototype.propertyIsEnumerable.call(i,n)&&V3(i[n],e,t)}return i}/**
* @vue/runtime-core v3.5.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Br(i,e,t,n){try{return n?i(...n):i()}catch(r){Ua(r,e,t)}}function C3(i,e,t,n){if(m2(i)){const r=Br(i,e,t,n);return r&&Xu(r)&&r.catch(s=>{Ua(s,e,t)}),r}if(h2(i)){const r=[];for(let s=0;s<i.length;s++)r.push(C3(i[s],e,t,n));return r}}function Ua(i,e,t,n=!0){const r=e?e.vnode:null,{errorHandler:s,throwUnhandledErrorInProduction:a}=e&&e.appContext.config||Y2;if(e){let o=e.parent;const l=e.proxy,c=`https://vuejs.org/error-reference/#runtime-${t}`;for(;o;){const u=o.ec;if(u){for(let f=0;f<u.length;f++)if(u[f](i,l,c)===!1)return}o=o.parent}if(s){Z3(),Br(s,null,10,[i,l,c]),J3();return}}cd(i,t,r,n,a)}function cd(i,e,t,n=!0,r=!1){if(r)throw i;console.error(i)}const lt=[];let m3=-1;const ii=[];let d0=null,$n=0;const p6=Promise.resolve();let aa=null;function Oa(i){const e=aa||p6;return i?e.then(this?i.bind(this):i):e}function ud(i){let e=m3+1,t=lt.length;for(;e<t;){const n=e+t>>>1,r=lt[n],s=Mr(r);s<i||s===i&&r.flags&2?e=n+1:t=n}return e}function V9(i){if(!(i.flags&1)){const e=Mr(i),t=lt[lt.length-1];!t||!(i.flags&2)&&e>=Mr(t)?lt.push(i):lt.splice(ud(e),0,i),i.flags|=1,m6()}}function m6(){aa||(aa=p6.then(g6))}function fd(i){h2(i)?ii.push(...i):d0&&i.id===-1?d0.splice($n+1,0,i):i.flags&1||(ii.push(i),i.flags|=1),m6()}function Ol(i,e,t=m3+1){for(;t<lt.length;t++){const n=lt[t];if(n&&n.flags&2){if(i&&n.id!==i.uid)continue;lt.splice(t,1),t--,n.flags&4&&(n.flags&=-2),n(),n.flags&4||(n.flags&=-2)}}}function _6(i){if(ii.length){const e=[...new Set(ii)].sort((t,n)=>Mr(t)-Mr(n));if(ii.length=0,d0){d0.push(...e);return}for(d0=e,$n=0;$n<d0.length;$n++){const t=d0[$n];t.flags&4&&(t.flags&=-2),t.flags&8||t(),t.flags&=-2}d0=null,$n=0}}const Mr=i=>i.id==null?i.flags&2?-1:1/0:i.id;function g6(i){try{for(m3=0;m3<lt.length;m3++){const e=lt[m3];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),Br(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;m3<lt.length;m3++){const e=lt[m3];e&&(e.flags&=-2)}m3=-1,lt.length=0,_6(),aa=null,(lt.length||ii.length)&&g6()}}let Yt=null,v6=null;function oa(i){const e=Yt;return Yt=i,v6=i&&i.type.__scopeId||null,e}function hd(i,e=Yt,t){if(!e||i._n)return i;const n=(...r)=>{n._d&&Wl(-1);const s=oa(e);let a;try{a=i(...r)}finally{oa(s),n._d&&Wl(1)}return a};return n._n=!0,n._c=!0,n._d=!0,n}function dd(i,e){if(Yt===null)return i;const t=Ba(Yt),n=i.dirs||(i.dirs=[]);for(let r=0;r<e.length;r++){let[s,a,o,l=Y2]=e[r];s&&(m2(s)&&(s={mounted:s,updated:s}),s.deep&&V3(a),n.push({dir:s,instance:t,value:a,oldValue:void 0,arg:o,modifiers:l}))}return i}function z0(i,e,t,n){const r=i.dirs,s=e&&e.dirs;for(let a=0;a<r.length;a++){const o=r[a];s&&(o.oldValue=s[a].value);let l=o.dir[n];l&&(Z3(),C3(l,t,8,[i.el,o,i,e]),J3())}}const pd=Symbol("_vte"),md=i=>i.__isTeleport;function G9(i,e){i.shapeFlag&6&&i.component?(i.transition=e,G9(i.component.subTree,e)):i.shapeFlag&128?(i.ssContent.transition=e.clone(i.ssContent),i.ssFallback.transition=e.clone(i.ssFallback)):i.transition=e}/*! #__NO_SIDE_EFFECTS__ */function _d(i,e){return m2(i)?et({name:i.name},e,{setup:i}):i}function x6(i){i.ids=[i.ids[0]+i.ids[2]+++"-",0,0]}function ir(i,e,t,n,r=!1){if(h2(i)){i.forEach((g,_)=>ir(g,e&&(h2(e)?e[_]:e),t,n,r));return}if(rr(n)&&!r){n.shapeFlag&512&&n.type.__asyncResolved&&n.component.subTree.component&&ir(i,e,t,n.component.subTree);return}const s=n.shapeFlag&4?Ba(n.component):n.el,a=r?null:s,{i:o,r:l}=i,c=e&&e.r,u=o.refs===Y2?o.refs={}:o.refs,f=o.setupState,h=O2(f),d=f===Y2?()=>!1:g=>N2(h,g);if(c!=null&&c!==l&&(ye(c)?(u[c]=null,d(c)&&(f[c]=null)):He(c)&&(c.value=null)),m2(l))Br(l,o,12,[a,u]);else{const g=ye(l),_=He(l);if(g||_){const m=()=>{if(i.f){const p=g?d(l)?f[l]:u[l]:l.value;r?h2(p)&&L9(p,s):h2(p)?p.includes(s)||p.push(s):g?(u[l]=[s],d(l)&&(f[l]=u[l])):(l.value=[s],i.k&&(u[i.k]=l.value))}else g?(u[l]=a,d(l)&&(f[l]=a)):_&&(l.value=a,i.k&&(u[i.k]=a))};a?(m.id=-1,Rt(m,t)):m()}}}La().requestIdleCallback;La().cancelIdleCallback;const rr=i=>!!i.type.__asyncLoader,y6=i=>i.type.__isKeepAlive;function gd(i,e){M6(i,"a",e)}function vd(i,e){M6(i,"da",e)}function M6(i,e,t=ct){const n=i.__wdc||(i.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return i()});if(Fa(e,n,t),t){let r=t.parent;for(;r&&r.parent;)y6(r.parent.vnode)&&xd(n,e,t,r),r=r.parent}}function xd(i,e,t,n){const r=Fa(e,i,n,!0);b6(()=>{L9(n[e],r)},t)}function Fa(i,e,t=ct,n=!1){if(t){const r=t[i]||(t[i]=[]),s=e.__weh||(e.__weh=(...a)=>{Z3();const o=zr(t),l=C3(e,t,i,a);return o(),J3(),l});return n?r.unshift(s):r.push(s),s}}const i0=i=>(e,t=ct)=>{(!br||i==="sp")&&Fa(i,(...n)=>e(...n),t)},yd=i0("bm"),r0=i0("m"),Md=i0("bu"),Sd=i0("u"),S6=i0("bum"),b6=i0("um"),bd=i0("sp"),Ed=i0("rtg"),Td=i0("rtc");function wd(i,e=ct){Fa("ec",i,e)}const Ad=Symbol.for("v-ndc");function hn(i,e,t,n){let r;const s=t,a=h2(i);if(a||ye(i)){const o=a&&ni(i);let l=!1,c=!1;o&&(l=!Jt(i),c=P0(i),i=Ia(i)),r=new Array(i.length);for(let u=0,f=i.length;u<f;u++)r[u]=e(l?c?ia(Ne(i[u])):Ne(i[u]):i[u],u,void 0,s)}else if(typeof i=="number"){r=new Array(i);for(let o=0;o<i;o++)r[o]=e(o+1,o,void 0,s)}else if(te(i))if(i[Symbol.iterator])r=Array.from(i,(o,l)=>e(o,l,void 0,s));else{const o=Object.keys(i);r=new Array(o.length);for(let l=0,c=o.length;l<c;l++){const u=o[l];r[l]=e(i[u],u,l,s)}}else r=[];return r}const l4=i=>i?q6(i)?Ba(i):l4(i.parent):null,sr=et(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>l4(i.parent),$root:i=>l4(i.root),$host:i=>i.ce,$emit:i=>i.emit,$options:i=>T6(i),$forceUpdate:i=>i.f||(i.f=()=>{V9(i.update)}),$nextTick:i=>i.n||(i.n=Oa.bind(i.proxy)),$watch:i=>jd.bind(i)}),to=(i,e)=>i!==Y2&&!i.__isScriptSetup&&N2(i,e),Cd={get({_:i},e){if(e==="__v_skip")return!0;const{ctx:t,setupState:n,data:r,props:s,accessCache:a,type:o,appContext:l}=i;let c;if(e[0]!=="$"){const d=a[e];if(d!==void 0)switch(d){case 1:return n[e];case 2:return r[e];case 4:return t[e];case 3:return s[e]}else{if(to(n,e))return a[e]=1,n[e];if(r!==Y2&&N2(r,e))return a[e]=2,r[e];if((c=i.propsOptions[0])&&N2(c,e))return a[e]=3,s[e];if(t!==Y2&&N2(t,e))return a[e]=4,t[e];c4&&(a[e]=0)}}const u=sr[e];let f,h;if(u)return e==="$attrs"&&je(i.attrs,"get",""),u(i);if((f=o.__cssModules)&&(f=f[e]))return f;if(t!==Y2&&N2(t,e))return a[e]=4,t[e];if(h=l.config.globalProperties,N2(h,e))return h[e]},set({_:i},e,t){const{data:n,setupState:r,ctx:s}=i;return to(r,e)?(r[e]=t,!0):n!==Y2&&N2(n,e)?(n[e]=t,!0):N2(i.props,e)||e[0]==="$"&&e.slice(1)in i?!1:(s[e]=t,!0)},has({_:{data:i,setupState:e,accessCache:t,ctx:n,appContext:r,propsOptions:s}},a){let o;return!!t[a]||i!==Y2&&N2(i,a)||to(e,a)||(o=s[0])&&N2(o,a)||N2(n,a)||N2(sr,a)||N2(r.config.globalProperties,a)},defineProperty(i,e,t){return t.get!=null?i._.accessCache[e]=0:N2(t,"value")&&this.set(i,e,t.value,null),Reflect.defineProperty(i,e,t)}};function Fl(i){return h2(i)?i.reduce((e,t)=>(e[t]=null,e),{}):i}let c4=!0;function Rd(i){const e=T6(i),t=i.proxy,n=i.ctx;c4=!1,e.beforeCreate&&Nl(e.beforeCreate,i,"bc");const{data:r,computed:s,methods:a,watch:o,provide:l,inject:c,created:u,beforeMount:f,mounted:h,beforeUpdate:d,updated:g,activated:_,deactivated:m,beforeDestroy:p,beforeUnmount:b,destroyed:w,unmounted:y,render:C,renderTracked:A,renderTriggered:L,errorCaptured:N,serverPrefetch:E,expose:T,inheritAttrs:F,components:H,directives:Y,filters:e1}=e;if(c&&Pd(c,n,null),a)for(const j in a){const G=a[j];m2(G)&&(n[j]=G.bind(t))}if(r){const j=r.call(t,t);te(j)&&(i.data=B9(j))}if(c4=!0,s)for(const j in s){const G=s[j],m1=m2(G)?G.bind(t,t):m2(G.get)?G.get.bind(t,t):w3,k=!m2(G)&&m2(G.set)?G.set.bind(t):w3,E1=$9({get:m1,set:k});Object.defineProperty(n,j,{enumerable:!0,configurable:!0,get:()=>E1.value,set:z1=>E1.value=z1})}if(o)for(const j in o)E6(o[j],n,t,j);if(l){const j=m2(l)?l.call(t):l;Reflect.ownKeys(j).forEach(G=>{Fd(G,j[G])})}u&&Nl(u,i,"c");function K(j,G){h2(G)?G.forEach(m1=>j(m1.bind(t))):G&&j(G.bind(t))}if(K(yd,f),K(r0,h),K(Md,d),K(Sd,g),K(gd,_),K(vd,m),K(wd,N),K(Td,A),K(Ed,L),K(S6,b),K(b6,y),K(bd,E),h2(T))if(T.length){const j=i.exposed||(i.exposed={});T.forEach(G=>{Object.defineProperty(j,G,{get:()=>t[G],set:m1=>t[G]=m1,enumerable:!0})})}else i.exposed||(i.exposed={});C&&i.render===w3&&(i.render=C),F!=null&&(i.inheritAttrs=F),H&&(i.components=H),Y&&(i.directives=Y),E&&x6(i)}function Pd(i,e,t=w3){h2(i)&&(i=u4(i));for(const n in i){const r=i[n];let s;te(r)?"default"in r?s=Fs(r.from||n,r.default,!0):s=Fs(r.from||n):s=Fs(r),He(s)?Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:()=>s.value,set:a=>s.value=a}):e[n]=s}}function Nl(i,e,t){C3(h2(i)?i.map(n=>n.bind(e.proxy)):i.bind(e.proxy),e,t)}function E6(i,e,t,n){let r=n.includes(".")?k6(t,n):()=>t[n];if(ye(i)){const s=e[i];m2(s)&&Se(r,s)}else if(m2(i))Se(r,i.bind(t));else if(te(i))if(h2(i))i.forEach(s=>E6(s,e,t,n));else{const s=m2(i.handler)?i.handler.bind(t):e[i.handler];m2(s)&&Se(r,s,i)}}function T6(i){const e=i.type,{mixins:t,extends:n}=e,{mixins:r,optionsCache:s,config:{optionMergeStrategies:a}}=i.appContext,o=s.get(e);let l;return o?l=o:!r.length&&!t&&!n?l=e:(l={},r.length&&r.forEach(c=>la(l,c,a,!0)),la(l,e,a)),te(e)&&s.set(e,l),l}function la(i,e,t,n=!1){const{mixins:r,extends:s}=e;s&&la(i,s,t,!0),r&&r.forEach(a=>la(i,a,t,!0));for(const a in e)if(!(n&&a==="expose")){const o=Ld[a]||t&&t[a];i[a]=o?o(i[a],e[a]):e[a]}return i}const Ld={data:kl,props:Bl,emits:Bl,methods:Xi,computed:Xi,beforeCreate:nt,created:nt,beforeMount:nt,mounted:nt,beforeUpdate:nt,updated:nt,beforeDestroy:nt,beforeUnmount:nt,destroyed:nt,unmounted:nt,activated:nt,deactivated:nt,errorCaptured:nt,serverPrefetch:nt,components:Xi,directives:Xi,watch:Id,provide:kl,inject:Dd};function kl(i,e){return e?i?function(){return et(m2(i)?i.call(this,this):i,m2(e)?e.call(this,this):e)}:e:i}function Dd(i,e){return Xi(u4(i),u4(e))}function u4(i){if(h2(i)){const e={};for(let t=0;t<i.length;t++)e[i[t]]=i[t];return e}return i}function nt(i,e){return i?[...new Set([].concat(i,e))]:e}function Xi(i,e){return i?et(Object.create(null),i,e):e}function Bl(i,e){return i?h2(i)&&h2(e)?[...new Set([...i,...e])]:et(Object.create(null),Fl(i),Fl(e??{})):e}function Id(i,e){if(!i)return e;if(!e)return i;const t=et(Object.create(null),i);for(const n in e)t[n]=nt(i[n],e[n]);return t}function w6(){return{app:null,config:{isNativeTag:vh,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Ud=0;function Od(i,e){return function(n,r=null){m2(n)||(n=et({},n)),r!=null&&!te(r)&&(r=null);const s=w6(),a=new WeakSet,o=[];let l=!1;const c=s.app={_uid:Ud++,_component:n,_props:r,_container:null,_context:s,_instance:null,version:_7,get config(){return s.config},set config(u){},use(u,...f){return a.has(u)||(u&&m2(u.install)?(a.add(u),u.install(c,...f)):m2(u)&&(a.add(u),u(c,...f))),c},mixin(u){return s.mixins.includes(u)||s.mixins.push(u),c},component(u,f){return f?(s.components[u]=f,c):s.components[u]},directive(u,f){return f?(s.directives[u]=f,c):s.directives[u]},mount(u,f,h){if(!l){const d=c._ceVNode||fe(n,r);return d.appContext=s,h===!0?h="svg":h===!1&&(h=void 0),i(d,u,h),l=!0,c._container=u,u.__vue_app__=c,Ba(d.component)}},onUnmount(u){o.push(u)},unmount(){l&&(C3(o,c._instance,16),i(null,c._container),delete c._container.__vue_app__)},provide(u,f){return s.provides[u]=f,c},runWithContext(u){const f=ri;ri=c;try{return u()}finally{ri=f}}};return c}}let ri=null;function Fd(i,e){if(ct){let t=ct.provides;const n=ct.parent&&ct.parent.provides;n===t&&(t=ct.provides=Object.create(n)),t[i]=e}}function Fs(i,e,t=!1){const n=u7();if(n||ri){let r=ri?ri._context.provides:n?n.parent==null||n.ce?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:void 0;if(r&&i in r)return r[i];if(arguments.length>1)return t&&m2(e)?e.call(n&&n.proxy):e}}const A6={},C6=()=>Object.create(A6),R6=i=>Object.getPrototypeOf(i)===A6;function Nd(i,e,t,n=!1){const r={},s=C6();i.propsDefaults=Object.create(null),P6(i,e,r,s);for(const a in i.propsOptions[0])a in r||(r[a]=void 0);t?i.props=n?r:Zh(r):i.type.props?i.props=r:i.props=s,i.attrs=s}function kd(i,e,t,n){const{props:r,attrs:s,vnode:{patchFlag:a}}=i,o=O2(r),[l]=i.propsOptions;let c=!1;if((n||a>0)&&!(a&16)){if(a&8){const u=i.vnode.dynamicProps;for(let f=0;f<u.length;f++){let h=u[f];if(Na(i.emitsOptions,h))continue;const d=e[h];if(l)if(N2(s,h))d!==s[h]&&(s[h]=d,c=!0);else{const g=R0(h);r[g]=f4(l,o,g,d,i,!1)}else d!==s[h]&&(s[h]=d,c=!0)}}}else{P6(i,e,r,s)&&(c=!0);let u;for(const f in o)(!e||!N2(e,f)&&((u=An(f))===f||!N2(e,u)))&&(l?t&&(t[f]!==void 0||t[u]!==void 0)&&(r[f]=f4(l,o,f,void 0,i,!0)):delete r[f]);if(s!==o)for(const f in s)(!e||!N2(e,f))&&(delete s[f],c=!0)}c&&H3(i.attrs,"set","")}function P6(i,e,t,n){const[r,s]=i.propsOptions;let a=!1,o;if(e)for(let l in e){if(er(l))continue;const c=e[l];let u;r&&N2(r,u=R0(l))?!s||!s.includes(u)?t[u]=c:(o||(o={}))[u]=c:Na(i.emitsOptions,l)||(!(l in n)||c!==n[l])&&(n[l]=c,a=!0)}if(s){const l=O2(t),c=o||Y2;for(let u=0;u<s.length;u++){const f=s[u];t[f]=f4(r,l,f,c[f],i,!N2(c,f))}}return a}function f4(i,e,t,n,r,s){const a=i[t];if(a!=null){const o=N2(a,"default");if(o&&n===void 0){const l=a.default;if(a.type!==Function&&!a.skipFactory&&m2(l)){const{propsDefaults:c}=r;if(t in c)n=c[t];else{const u=zr(r);n=c[t]=l.call(null,e),u()}}else n=l;r.ce&&r.ce._setProp(t,n)}a[0]&&(s&&!o?n=!1:a[1]&&(n===""||n===An(t))&&(n=!0))}return n}const Bd=new WeakMap;function L6(i,e,t=!1){const n=t?Bd:e.propsCache,r=n.get(i);if(r)return r;const s=i.props,a={},o=[];let l=!1;if(!m2(i)){const u=f=>{l=!0;const[h,d]=L6(f,e,!0);et(a,h),d&&o.push(...d)};!t&&e.mixins.length&&e.mixins.forEach(u),i.extends&&u(i.extends),i.mixins&&i.mixins.forEach(u)}if(!s&&!l)return te(i)&&n.set(i,ei),ei;if(h2(s))for(let u=0;u<s.length;u++){const f=R0(s[u]);zl(f)&&(a[f]=Y2)}else if(s)for(const u in s){const f=R0(u);if(zl(f)){const h=s[u],d=a[f]=h2(h)||m2(h)?{type:h}:et({},h),g=d.type;let _=!1,m=!0;if(h2(g))for(let p=0;p<g.length;++p){const b=g[p],w=m2(b)&&b.name;if(w==="Boolean"){_=!0;break}else w==="String"&&(m=!1)}else _=m2(g)&&g.name==="Boolean";d[0]=_,d[1]=m,(_||N2(d,"default"))&&o.push(f)}}const c=[a,o];return te(i)&&n.set(i,c),c}function zl(i){return i[0]!=="$"&&!er(i)}const W9=i=>i==="_"||i==="__"||i==="_ctx"||i==="$stable",X9=i=>h2(i)?i.map(v3):[v3(i)],zd=(i,e,t)=>{if(e._n)return e;const n=hd((...r)=>X9(e(...r)),t);return n._c=!1,n},D6=(i,e,t)=>{const n=i._ctx;for(const r in i){if(W9(r))continue;const s=i[r];if(m2(s))e[r]=zd(r,s,n);else if(s!=null){const a=X9(s);e[r]=()=>a}}},I6=(i,e)=>{const t=X9(e);i.slots.default=()=>t},U6=(i,e,t)=>{for(const n in e)(t||!W9(n))&&(i[n]=e[n])},Hd=(i,e,t)=>{const n=i.slots=C6();if(i.vnode.shapeFlag&32){const r=e.__;r&&r4(n,"__",r,!0);const s=e._;s?(U6(n,e,t),t&&r4(n,"_",s,!0)):D6(e,n)}else e&&I6(i,e)},Vd=(i,e,t)=>{const{vnode:n,slots:r}=i;let s=!0,a=Y2;if(n.shapeFlag&32){const o=e._;o?t&&o===1?s=!1:U6(r,e,t):(s=!e.$stable,D6(e,r)),a=e}else e&&(I6(i,e),a={default:1});if(s)for(const o in r)!W9(o)&&a[o]==null&&delete r[o]},Rt=n7;function Gd(i){return Wd(i)}function Wd(i,e){const t=La();t.__VUE__=!0;const{insert:n,remove:r,patchProp:s,createElement:a,createText:o,createComment:l,setText:c,setElementText:u,parentNode:f,nextSibling:h,setScopeId:d=w3,insertStaticContent:g}=i,_=(U,M,$,J=null,t1=null,D=null,f1=void 0,X=null,u1=!!M.dynamicChildren)=>{if(U===M)return;U&&!Oi(U,M)&&(J=d1(U),z1(U,t1,D,!0),U=null),M.patchFlag===-2&&(u1=!1,M.dynamicChildren=null);const{type:o1,ref:w1,shapeFlag:P}=M;switch(o1){case ka:m(U,M,$,J);break;case L0:p(U,M,$,J);break;case Ns:U==null&&b(M,$,J,f1);break;case ke:H(U,M,$,J,t1,D,f1,X,u1);break;default:P&1?C(U,M,$,J,t1,D,f1,X,u1):P&6?Y(U,M,$,J,t1,D,f1,X,u1):(P&64||P&128)&&o1.process(U,M,$,J,t1,D,f1,X,u1,U1)}w1!=null&&t1?ir(w1,U&&U.ref,D,M||U,!M):w1==null&&U&&U.ref!=null&&ir(U.ref,null,D,U,!0)},m=(U,M,$,J)=>{if(U==null)n(M.el=o(M.children),$,J);else{const t1=M.el=U.el;M.children!==U.children&&c(t1,M.children)}},p=(U,M,$,J)=>{U==null?n(M.el=l(M.children||""),$,J):M.el=U.el},b=(U,M,$,J)=>{[U.el,U.anchor]=g(U.children,M,$,J,U.el,U.anchor)},w=({el:U,anchor:M},$,J)=>{let t1;for(;U&&U!==M;)t1=h(U),n(U,$,J),U=t1;n(M,$,J)},y=({el:U,anchor:M})=>{let $;for(;U&&U!==M;)$=h(U),r(U),U=$;r(M)},C=(U,M,$,J,t1,D,f1,X,u1)=>{M.type==="svg"?f1="svg":M.type==="math"&&(f1="mathml"),U==null?A(M,$,J,t1,D,f1,X,u1):E(U,M,t1,D,f1,X,u1)},A=(U,M,$,J,t1,D,f1,X)=>{let u1,o1;const{props:w1,shapeFlag:P,transition:S,dirs:z}=U;if(u1=U.el=a(U.type,D,w1&&w1.is,w1),P&8?u(u1,U.children):P&16&&N(U.children,u1,null,J,t1,no(U,D),f1,X),z&&z0(U,null,J,"created"),L(u1,U,U.scopeId,f1,J),w1){for(const s1 in w1)s1!=="value"&&!er(s1)&&s(u1,s1,null,w1[s1],D,J);"value"in w1&&s(u1,"value",null,w1.value,D),(o1=w1.onVnodeBeforeMount)&&d3(o1,J,U)}z&&z0(U,null,J,"beforeMount");const Q=Xd(t1,S);Q&&S.beforeEnter(u1),n(u1,M,$),((o1=w1&&w1.onVnodeMounted)||Q||z)&&Rt(()=>{o1&&d3(o1,J,U),Q&&S.enter(u1),z&&z0(U,null,J,"mounted")},t1)},L=(U,M,$,J,t1)=>{if($&&d(U,$),J)for(let D=0;D<J.length;D++)d(U,J[D]);if(t1){let D=t1.subTree;if(M===D||z6(D.type)&&(D.ssContent===M||D.ssFallback===M)){const f1=t1.vnode;L(U,f1,f1.scopeId,f1.slotScopeIds,t1.parent)}}},N=(U,M,$,J,t1,D,f1,X,u1=0)=>{for(let o1=u1;o1<U.length;o1++){const w1=U[o1]=X?p0(U[o1]):v3(U[o1]);_(null,w1,M,$,J,t1,D,f1,X)}},E=(U,M,$,J,t1,D,f1)=>{const X=M.el=U.el;let{patchFlag:u1,dynamicChildren:o1,dirs:w1}=M;u1|=U.patchFlag&16;const P=U.props||Y2,S=M.props||Y2;let z;if($&&H0($,!1),(z=S.onVnodeBeforeUpdate)&&d3(z,$,M,U),w1&&z0(M,U,$,"beforeUpdate"),$&&H0($,!0),(P.innerHTML&&S.innerHTML==null||P.textContent&&S.textContent==null)&&u(X,""),o1?T(U.dynamicChildren,o1,X,$,J,no(M,t1),D):f1||G(U,M,X,null,$,J,no(M,t1),D,!1),u1>0){if(u1&16)F(X,P,S,$,t1);else if(u1&2&&P.class!==S.class&&s(X,"class",null,S.class,t1),u1&4&&s(X,"style",P.style,S.style,t1),u1&8){const Q=M.dynamicProps;for(let s1=0;s1<Q.length;s1++){const Z=Q[s1],A1=P[Z],_1=S[Z];(_1!==A1||Z==="value")&&s(X,Z,A1,_1,t1,$)}}u1&1&&U.children!==M.children&&u(X,M.children)}else!f1&&o1==null&&F(X,P,S,$,t1);((z=S.onVnodeUpdated)||w1)&&Rt(()=>{z&&d3(z,$,M,U),w1&&z0(M,U,$,"updated")},J)},T=(U,M,$,J,t1,D,f1)=>{for(let X=0;X<M.length;X++){const u1=U[X],o1=M[X],w1=u1.el&&(u1.type===ke||!Oi(u1,o1)||u1.shapeFlag&198)?f(u1.el):$;_(u1,o1,w1,null,J,t1,D,f1,!0)}},F=(U,M,$,J,t1)=>{if(M!==$){if(M!==Y2)for(const D in M)!er(D)&&!(D in $)&&s(U,D,M[D],null,t1,J);for(const D in $){if(er(D))continue;const f1=$[D],X=M[D];f1!==X&&D!=="value"&&s(U,D,X,f1,t1,J)}"value"in $&&s(U,"value",M.value,$.value,t1)}},H=(U,M,$,J,t1,D,f1,X,u1)=>{const o1=M.el=U?U.el:o(""),w1=M.anchor=U?U.anchor:o("");let{patchFlag:P,dynamicChildren:S,slotScopeIds:z}=M;z&&(X=X?X.concat(z):z),U==null?(n(o1,$,J),n(w1,$,J),N(M.children||[],$,w1,t1,D,f1,X,u1)):P>0&&P&64&&S&&U.dynamicChildren?(T(U.dynamicChildren,S,$,t1,D,f1,X),(M.key!=null||t1&&M===t1.subTree)&&O6(U,M,!0)):G(U,M,$,w1,t1,D,f1,X,u1)},Y=(U,M,$,J,t1,D,f1,X,u1)=>{M.slotScopeIds=X,U==null?M.shapeFlag&512?t1.ctx.activate(M,$,J,f1,u1):e1(M,$,J,t1,D,f1,u1):i1(U,M,u1)},e1=(U,M,$,J,t1,D,f1)=>{const X=U.component=c7(U,J,t1);if(y6(U)&&(X.ctx.renderer=U1),f7(X,!1,f1),X.asyncDep){if(t1&&t1.registerDep(X,K,f1),!U.el){const u1=X.subTree=fe(L0);p(null,u1,M,$),U.placeholder=u1.el}}else K(X,U,M,$,t1,D,f1)},i1=(U,M,$)=>{const J=M.component=U.component;if(e7(U,M,$))if(J.asyncDep&&!J.asyncResolved){j(J,M,$);return}else J.next=M,J.update();else M.el=U.el,J.vnode=M},K=(U,M,$,J,t1,D,f1)=>{const X=()=>{if(U.isMounted){let{next:P,bu:S,u:z,parent:Q,vnode:s1}=U;{const b1=F6(U);if(b1){P&&(P.el=s1.el,j(U,P,f1)),b1.asyncDep.then(()=>{U.isUnmounted||X()});return}}let Z=P,A1;H0(U,!1),P?(P.el=s1.el,j(U,P,f1)):P=s1,S&&Ka(S),(A1=P.props&&P.props.onVnodeBeforeUpdate)&&d3(A1,Q,P,s1),H0(U,!0);const _1=Vl(U),I1=U.subTree;U.subTree=_1,_(I1,_1,f(I1.el),d1(I1),U,t1,D),P.el=_1.el,Z===null&&t7(U,_1.el),z&&Rt(z,t1),(A1=P.props&&P.props.onVnodeUpdated)&&Rt(()=>d3(A1,Q,P,s1),t1)}else{let P;const{el:S,props:z}=M,{bm:Q,m:s1,parent:Z,root:A1,type:_1}=U,I1=rr(M);H0(U,!1),Q&&Ka(Q),!I1&&(P=z&&z.onVnodeBeforeMount)&&d3(P,Z,M),H0(U,!0);{A1.ce&&A1.ce._def.shadowRoot!==!1&&A1.ce._injectChildStyle(_1);const b1=U.subTree=Vl(U);_(null,b1,$,J,U,t1,D),M.el=b1.el}if(s1&&Rt(s1,t1),!I1&&(P=z&&z.onVnodeMounted)){const b1=M;Rt(()=>d3(P,Z,b1),t1)}(M.shapeFlag&256||Z&&rr(Z.vnode)&&Z.vnode.shapeFlag&256)&&U.a&&Rt(U.a,t1),U.isMounted=!0,M=$=J=null}};U.scope.on();const u1=U.effect=new Ju(X);U.scope.off();const o1=U.update=u1.run.bind(u1),w1=U.job=u1.runIfDirty.bind(u1);w1.i=U,w1.id=U.uid,u1.scheduler=()=>V9(w1),H0(U,!0),o1()},j=(U,M,$)=>{M.component=U;const J=U.vnode.props;U.vnode=M,U.next=null,kd(U,M.props,J,$),Vd(U,M.children,$),Z3(),Ol(U),J3()},G=(U,M,$,J,t1,D,f1,X,u1=!1)=>{const o1=U&&U.children,w1=U?U.shapeFlag:0,P=M.children,{patchFlag:S,shapeFlag:z}=M;if(S>0){if(S&128){k(o1,P,$,J,t1,D,f1,X,u1);return}else if(S&256){m1(o1,P,$,J,t1,D,f1,X,u1);return}}z&8?(w1&16&&x1(o1,t1,D),P!==o1&&u($,P)):w1&16?z&16?k(o1,P,$,J,t1,D,f1,X,u1):x1(o1,t1,D,!0):(w1&8&&u($,""),z&16&&N(P,$,J,t1,D,f1,X,u1))},m1=(U,M,$,J,t1,D,f1,X,u1)=>{U=U||ei,M=M||ei;const o1=U.length,w1=M.length,P=Math.min(o1,w1);let S;for(S=0;S<P;S++){const z=M[S]=u1?p0(M[S]):v3(M[S]);_(U[S],z,$,null,t1,D,f1,X,u1)}o1>w1?x1(U,t1,D,!0,!1,P):N(M,$,J,t1,D,f1,X,u1,P)},k=(U,M,$,J,t1,D,f1,X,u1)=>{let o1=0;const w1=M.length;let P=U.length-1,S=w1-1;for(;o1<=P&&o1<=S;){const z=U[o1],Q=M[o1]=u1?p0(M[o1]):v3(M[o1]);if(Oi(z,Q))_(z,Q,$,null,t1,D,f1,X,u1);else break;o1++}for(;o1<=P&&o1<=S;){const z=U[P],Q=M[S]=u1?p0(M[S]):v3(M[S]);if(Oi(z,Q))_(z,Q,$,null,t1,D,f1,X,u1);else break;P--,S--}if(o1>P){if(o1<=S){const z=S+1,Q=z<w1?M[z].el:J;for(;o1<=S;)_(null,M[o1]=u1?p0(M[o1]):v3(M[o1]),$,Q,t1,D,f1,X,u1),o1++}}else if(o1>S)for(;o1<=P;)z1(U[o1],t1,D,!0),o1++;else{const z=o1,Q=o1,s1=new Map;for(o1=Q;o1<=S;o1++){const V1=M[o1]=u1?p0(M[o1]):v3(M[o1]);V1.key!=null&&s1.set(V1.key,o1)}let Z,A1=0;const _1=S-Q+1;let I1=!1,b1=0;const y1=new Array(_1);for(o1=0;o1<_1;o1++)y1[o1]=0;for(o1=z;o1<=P;o1++){const V1=U[o1];if(A1>=_1){z1(V1,t1,D,!0);continue}let N1;if(V1.key!=null)N1=s1.get(V1.key);else for(Z=Q;Z<=S;Z++)if(y1[Z-Q]===0&&Oi(V1,M[Z])){N1=Z;break}N1===void 0?z1(V1,t1,D,!0):(y1[N1-Q]=o1+1,N1>=b1?b1=N1:I1=!0,_(V1,M[N1],$,null,t1,D,f1,X,u1),A1++)}const R1=I1?qd(y1):ei;for(Z=R1.length-1,o1=_1-1;o1>=0;o1--){const V1=Q+o1,N1=M[V1],C1=M[V1+1],t2=V1+1<w1?C1.el||C1.placeholder:J;y1[o1]===0?_(null,N1,$,t2,t1,D,f1,X,u1):I1&&(Z<0||o1!==R1[Z]?E1(N1,$,t2,2):Z--)}}},E1=(U,M,$,J,t1=null)=>{const{el:D,type:f1,transition:X,children:u1,shapeFlag:o1}=U;if(o1&6){E1(U.component.subTree,M,$,J);return}if(o1&128){U.suspense.move(M,$,J);return}if(o1&64){f1.move(U,M,$,U1);return}if(f1===ke){n(D,M,$);for(let P=0;P<u1.length;P++)E1(u1[P],M,$,J);n(U.anchor,M,$);return}if(f1===Ns){w(U,M,$);return}if(J!==2&&o1&1&&X)if(J===0)X.beforeEnter(D),n(D,M,$),Rt(()=>X.enter(D),t1);else{const{leave:P,delayLeave:S,afterLeave:z}=X,Q=()=>{U.ctx.isUnmounted?r(D):n(D,M,$)},s1=()=>{P(D,()=>{Q(),z&&z()})};S?S(D,Q,s1):s1()}else n(D,M,$)},z1=(U,M,$,J=!1,t1=!1)=>{const{type:D,props:f1,ref:X,children:u1,dynamicChildren:o1,shapeFlag:w1,patchFlag:P,dirs:S,cacheIndex:z}=U;if(P===-2&&(t1=!1),X!=null&&(Z3(),ir(X,null,$,U,!0),J3()),z!=null&&(M.renderCache[z]=void 0),w1&256){M.ctx.deactivate(U);return}const Q=w1&1&&S,s1=!rr(U);let Z;if(s1&&(Z=f1&&f1.onVnodeBeforeUnmount)&&d3(Z,M,U),w1&6)r1(U.component,$,J);else{if(w1&128){U.suspense.unmount($,J);return}Q&&z0(U,null,M,"beforeUnmount"),w1&64?U.type.remove(U,M,$,U1,J):o1&&!o1.hasOnce&&(D!==ke||P>0&&P&64)?x1(o1,M,$,!1,!0):(D===ke&&P&384||!t1&&w1&16)&&x1(u1,M,$),J&&c2(U)}(s1&&(Z=f1&&f1.onVnodeUnmounted)||Q)&&Rt(()=>{Z&&d3(Z,M,U),Q&&z0(U,null,M,"unmounted")},$)},c2=U=>{const{type:M,el:$,anchor:J,transition:t1}=U;if(M===ke){j1($,J);return}if(M===Ns){y(U);return}const D=()=>{r($),t1&&!t1.persisted&&t1.afterLeave&&t1.afterLeave()};if(U.shapeFlag&1&&t1&&!t1.persisted){const{leave:f1,delayLeave:X}=t1,u1=()=>f1($,D);X?X(U.el,D,u1):u1()}else D()},j1=(U,M)=>{let $;for(;U!==M;)$=h(U),r(U),U=$;r(M)},r1=(U,M,$)=>{const{bum:J,scope:t1,job:D,subTree:f1,um:X,m:u1,a:o1,parent:w1,slots:{__:P}}=U;Hl(u1),Hl(o1),J&&Ka(J),w1&&h2(P)&&P.forEach(S=>{w1.renderCache[S]=void 0}),t1.stop(),D&&(D.flags|=8,z1(f1,U,M,$)),X&&Rt(X,M),Rt(()=>{U.isUnmounted=!0},M),M&&M.pendingBranch&&!M.isUnmounted&&U.asyncDep&&!U.asyncResolved&&U.suspenseId===M.pendingId&&(M.deps--,M.deps===0&&M.resolve())},x1=(U,M,$,J=!1,t1=!1,D=0)=>{for(let f1=D;f1<U.length;f1++)z1(U[f1],M,$,J,t1)},d1=U=>{if(U.shapeFlag&6)return d1(U.component.subTree);if(U.shapeFlag&128)return U.suspense.next();const M=h(U.anchor||U.el),$=M&&M[pd];return $?h($):M};let L1=!1;const D1=(U,M,$)=>{U==null?M._vnode&&z1(M._vnode,null,null,!0):_(M._vnode||null,U,M,null,null,null,$),M._vnode=U,L1||(L1=!0,Ol(),_6(),L1=!1)},U1={p:_,um:z1,m:E1,r:c2,mt:e1,mc:N,pc:G,pbc:T,n:d1,o:i};return{render:D1,hydrate:void 0,createApp:Od(D1)}}function no({type:i,props:e},t){return t==="svg"&&i==="foreignObject"||t==="mathml"&&i==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function H0({effect:i,job:e},t){t?(i.flags|=32,e.flags|=4):(i.flags&=-33,e.flags&=-5)}function Xd(i,e){return(!i||i&&!i.pendingBranch)&&e&&!e.persisted}function O6(i,e,t=!1){const n=i.children,r=e.children;if(h2(n)&&h2(r))for(let s=0;s<n.length;s++){const a=n[s];let o=r[s];o.shapeFlag&1&&!o.dynamicChildren&&((o.patchFlag<=0||o.patchFlag===32)&&(o=r[s]=p0(r[s]),o.el=a.el),!t&&o.patchFlag!==-2&&O6(a,o)),o.type===ka&&(o.el=a.el),o.type===L0&&!o.el&&(o.el=a.el)}}function qd(i){const e=i.slice(),t=[0];let n,r,s,a,o;const l=i.length;for(n=0;n<l;n++){const c=i[n];if(c!==0){if(r=t[t.length-1],i[r]<c){e[n]=r,t.push(n);continue}for(s=0,a=t.length-1;s<a;)o=s+a>>1,i[t[o]]<c?s=o+1:a=o;c<i[t[s]]&&(s>0&&(e[n]=t[s-1]),t[s]=n)}}for(s=t.length,a=t[s-1];s-- >0;)t[s]=a,a=e[a];return t}function F6(i){const e=i.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:F6(e)}function Hl(i){if(i)for(let e=0;e<i.length;e++)i[e].flags|=8}const $d=Symbol.for("v-scx"),Yd=()=>Fs($d);function Se(i,e,t){return N6(i,e,t)}function N6(i,e,t=Y2){const{immediate:n,deep:r,flush:s,once:a}=t,o=et({},t),l=e&&n||!e&&s!=="post";let c;if(br){if(s==="sync"){const d=Yd();c=d.__watcherHandles||(d.__watcherHandles=[])}else if(!l){const d=()=>{};return d.stop=w3,d.resume=w3,d.pause=w3,d}}const u=ct;o.call=(d,g,_)=>C3(d,u,g,_);let f=!1;s==="post"?o.scheduler=d=>{Rt(d,u&&u.suspense)}:s!=="sync"&&(f=!0,o.scheduler=(d,g)=>{g?d():V9(d)}),o.augmentJob=d=>{e&&(d.flags|=4),f&&(d.flags|=2,u&&(d.id=u.uid,d.i=u))};const h=ld(i,e,o);return br&&(c?c.push(h):l&&h()),h}function jd(i,e,t){const n=this.proxy,r=ye(i)?i.includes(".")?k6(n,i):()=>n[i]:i.bind(n,n);let s;m2(e)?s=e:(s=e.handler,t=e);const a=zr(this),o=N6(r,s.bind(n),t);return a(),o}function k6(i,e){const t=e.split(".");return()=>{let n=i;for(let r=0;r<t.length&&n;r++)n=n[t[r]];return n}}const Kd=(i,e)=>e==="modelValue"||e==="model-value"?i.modelModifiers:i[`${e}Modifiers`]||i[`${R0(e)}Modifiers`]||i[`${An(e)}Modifiers`];function Zd(i,e,...t){if(i.isUnmounted)return;const n=i.vnode.props||Y2;let r=t;const s=e.startsWith("update:"),a=s&&Kd(n,e.slice(7));a&&(a.trim&&(r=t.map(u=>ye(u)?u.trim():u)),a.number&&(r=t.map(bh)));let o,l=n[o=ja(e)]||n[o=ja(R0(e))];!l&&s&&(l=n[o=ja(An(e))]),l&&C3(l,i,6,r);const c=n[o+"Once"];if(c){if(!i.emitted)i.emitted={};else if(i.emitted[o])return;i.emitted[o]=!0,C3(c,i,6,r)}}function B6(i,e,t=!1){const n=e.emitsCache,r=n.get(i);if(r!==void 0)return r;const s=i.emits;let a={},o=!1;if(!m2(i)){const l=c=>{const u=B6(c,e,!0);u&&(o=!0,et(a,u))};!t&&e.mixins.length&&e.mixins.forEach(l),i.extends&&l(i.extends),i.mixins&&i.mixins.forEach(l)}return!s&&!o?(te(i)&&n.set(i,null),null):(h2(s)?s.forEach(l=>a[l]=null):et(a,s),te(i)&&n.set(i,a),a)}function Na(i,e){return!i||!Ca(e)?!1:(e=e.slice(2).replace(/Once$/,""),N2(i,e[0].toLowerCase()+e.slice(1))||N2(i,An(e))||N2(i,e))}function Vl(i){const{type:e,vnode:t,proxy:n,withProxy:r,propsOptions:[s],slots:a,attrs:o,emit:l,render:c,renderCache:u,props:f,data:h,setupState:d,ctx:g,inheritAttrs:_}=i,m=oa(i);let p,b;try{if(t.shapeFlag&4){const y=r||n,C=y;p=v3(c.call(C,y,u,f,d,h,g)),b=o}else{const y=e;p=v3(y.length>1?y(f,{attrs:o,slots:a,emit:l}):y(f,null)),b=e.props?o:Jd(o)}}catch(y){ar.length=0,Ua(y,i,1),p=fe(L0)}let w=p;if(b&&_!==!1){const y=Object.keys(b),{shapeFlag:C}=w;y.length&&C&7&&(s&&y.some(P9)&&(b=Qd(b,s)),w=_i(w,b,!1,!0))}return t.dirs&&(w=_i(w,null,!1,!0),w.dirs=w.dirs?w.dirs.concat(t.dirs):t.dirs),t.transition&&G9(w,t.transition),p=w,oa(m),p}const Jd=i=>{let e;for(const t in i)(t==="class"||t==="style"||Ca(t))&&((e||(e={}))[t]=i[t]);return e},Qd=(i,e)=>{const t={};for(const n in i)(!P9(n)||!(n.slice(9)in e))&&(t[n]=i[n]);return t};function e7(i,e,t){const{props:n,children:r,component:s}=i,{props:a,children:o,patchFlag:l}=e,c=s.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return n?Gl(n,a,c):!!a;if(l&8){const u=e.dynamicProps;for(let f=0;f<u.length;f++){const h=u[f];if(a[h]!==n[h]&&!Na(c,h))return!0}}}else return(r||o)&&(!o||!o.$stable)?!0:n===a?!1:n?a?Gl(n,a,c):!0:!!a;return!1}function Gl(i,e,t){const n=Object.keys(e);if(n.length!==Object.keys(i).length)return!0;for(let r=0;r<n.length;r++){const s=n[r];if(e[s]!==i[s]&&!Na(t,s))return!0}return!1}function t7({vnode:i,parent:e},t){for(;e;){const n=e.subTree;if(n.suspense&&n.suspense.activeBranch===i&&(n.el=i.el),n===i)(i=e.vnode).el=t,e=e.parent;else break}}const z6=i=>i.__isSuspense;function n7(i,e){e&&e.pendingBranch?h2(i)?e.effects.push(...i):e.effects.push(i):fd(i)}const ke=Symbol.for("v-fgt"),ka=Symbol.for("v-txt"),L0=Symbol.for("v-cmt"),Ns=Symbol.for("v-stc"),ar=[];let Ft=null;function ne(i=!1){ar.push(Ft=i?null:[])}function i7(){ar.pop(),Ft=ar[ar.length-1]||null}let Sr=1;function Wl(i,e=!1){Sr+=i,i<0&&Ft&&e&&(Ft.hasOnce=!0)}function H6(i){return i.dynamicChildren=Sr>0?Ft||ei:null,i7(),Sr>0&&Ft&&Ft.push(i),i}function ce(i,e,t,n,r,s){return H6(r2(i,e,t,n,r,s,!0))}function V6(i,e,t,n,r){return H6(fe(i,e,t,n,r,!0))}function ca(i){return i?i.__v_isVNode===!0:!1}function Oi(i,e){return i.type===e.type&&i.key===e.key}const G6=({key:i})=>i??null,ks=({ref:i,ref_key:e,ref_for:t})=>(typeof i=="number"&&(i=""+i),i!=null?ye(i)||He(i)||m2(i)?{i:Yt,r:i,k:e,f:!!t}:i:null);function r2(i,e=null,t=null,n=0,r=null,s=i===ke?0:1,a=!1,o=!1){const l={__v_isVNode:!0,__v_skip:!0,type:i,props:e,key:e&&G6(e),ref:e&&ks(e),scopeId:v6,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:n,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:Yt};return o?(q9(l,t),s&128&&i.normalize(l)):t&&(l.shapeFlag|=ye(t)?8:16),Sr>0&&!a&&Ft&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&Ft.push(l),l}const fe=r7;function r7(i,e=null,t=null,n=0,r=null,s=!1){if((!i||i===Ad)&&(i=L0),ca(i)){const o=_i(i,e,!0);return t&&q9(o,t),Sr>0&&!s&&Ft&&(o.shapeFlag&6?Ft[Ft.indexOf(i)]=o:Ft.push(o)),o.patchFlag=-2,o}if(m7(i)&&(i=i.__vccOpts),e){e=s7(e);let{class:o,style:l}=e;o&&!ye(o)&&(e.class=Da(o)),te(l)&&(H9(l)&&!h2(l)&&(l=et({},l)),e.style=I9(l))}const a=ye(i)?1:z6(i)?128:md(i)?64:te(i)?4:m2(i)?2:0;return r2(i,e,t,n,r,a,s,!0)}function s7(i){return i?H9(i)||R6(i)?et({},i):i:null}function _i(i,e,t=!1,n=!1){const{props:r,ref:s,patchFlag:a,children:o,transition:l}=i,c=e?a7(r||{},e):r,u={__v_isVNode:!0,__v_skip:!0,type:i.type,props:c,key:c&&G6(c),ref:e&&e.ref?t&&s?h2(s)?s.concat(ks(e)):[s,ks(e)]:ks(e):s,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:o,target:i.target,targetStart:i.targetStart,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:e&&i.type!==ke?a===-1?16:a|16:a,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:l,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&_i(i.ssContent),ssFallback:i.ssFallback&&_i(i.ssFallback),placeholder:i.placeholder,el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce};return l&&n&&G9(u,l.clone(u)),u}function W6(i=" ",e=0){return fe(ka,null,i,e)}function Bs(i,e){const t=fe(Ns,null,i);return t.staticCount=e,t}function X6(i="",e=!1){return e?(ne(),V6(L0,null,i)):fe(L0,null,i)}function v3(i){return i==null||typeof i=="boolean"?fe(L0):h2(i)?fe(ke,null,i.slice()):ca(i)?p0(i):fe(ka,null,String(i))}function p0(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:_i(i)}function q9(i,e){let t=0;const{shapeFlag:n}=i;if(e==null)e=null;else if(h2(e))t=16;else if(typeof e=="object")if(n&65){const r=e.default;r&&(r._c&&(r._d=!1),q9(i,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!R6(e)?e._ctx=Yt:r===3&&Yt&&(Yt.slots._===1?e._=1:(e._=2,i.patchFlag|=1024))}else m2(e)?(e={default:e,_ctx:Yt},t=32):(e=String(e),n&64?(t=16,e=[W6(e)]):t=8);i.children=e,i.shapeFlag|=t}function a7(...i){const e={};for(let t=0;t<i.length;t++){const n=i[t];for(const r in n)if(r==="class")e.class!==n.class&&(e.class=Da([e.class,n.class]));else if(r==="style")e.style=I9([e.style,n.style]);else if(Ca(r)){const s=e[r],a=n[r];a&&s!==a&&!(h2(s)&&s.includes(a))&&(e[r]=s?[].concat(s,a):a)}else r!==""&&(e[r]=n[r])}return e}function d3(i,e,t,n=null){C3(i,e,7,[t,n])}const o7=w6();let l7=0;function c7(i,e,t){const n=i.type,r=(e?e.appContext:i.appContext)||o7,s={uid:l7++,vnode:i,type:n,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new Ph(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:L6(n,r),emitsOptions:B6(n,r),emit:null,emitted:null,propsDefaults:Y2,inheritAttrs:n.inheritAttrs,ctx:Y2,data:Y2,props:Y2,attrs:Y2,slots:Y2,refs:Y2,setupState:Y2,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=e?e.root:s,s.emit=Zd.bind(null,s),i.ce&&i.ce(s),s}let ct=null;const u7=()=>ct||Yt;let ua,h4;{const i=La(),e=(t,n)=>{let r;return(r=i[t])||(r=i[t]=[]),r.push(n),s=>{r.length>1?r.forEach(a=>a(s)):r[0](s)}};ua=e("__VUE_INSTANCE_SETTERS__",t=>ct=t),h4=e("__VUE_SSR_SETTERS__",t=>br=t)}const zr=i=>{const e=ct;return ua(i),i.scope.on(),()=>{i.scope.off(),ua(e)}},Xl=()=>{ct&&ct.scope.off(),ua(null)};function q6(i){return i.vnode.shapeFlag&4}let br=!1;function f7(i,e=!1,t=!1){e&&h4(e);const{props:n,children:r}=i.vnode,s=q6(i);Nd(i,n,s,e),Hd(i,r,t||e);const a=s?h7(i,e):void 0;return e&&h4(!1),a}function h7(i,e){const t=i.type;i.accessCache=Object.create(null),i.proxy=new Proxy(i.ctx,Cd);const{setup:n}=t;if(n){Z3();const r=i.setupContext=n.length>1?p7(i):null,s=zr(i),a=Br(n,i,0,[i.props,r]),o=Xu(a);if(J3(),s(),(o||i.sp)&&!rr(i)&&x6(i),o){if(a.then(Xl,Xl),e)return a.then(l=>{ql(i,l)}).catch(l=>{Ua(l,i,0)});i.asyncDep=a}else ql(i,a)}else $6(i)}function ql(i,e,t){m2(e)?i.type.__ssrInlineRender?i.ssrRender=e:i.render=e:te(e)&&(i.setupState=d6(e)),$6(i)}function $6(i,e,t){const n=i.type;i.render||(i.render=n.render||w3);{const r=zr(i);Z3();try{Rd(i)}finally{J3(),r()}}}const d7={get(i,e){return je(i,"get",""),i[e]}};function p7(i){const e=t=>{i.exposed=t||{}};return{attrs:new Proxy(i.attrs,d7),slots:i.slots,emit:i.emit,expose:e}}function Ba(i){return i.exposed?i.exposeProxy||(i.exposeProxy=new Proxy(d6(Jh(i.exposed)),{get(e,t){if(t in e)return e[t];if(t in sr)return sr[t](i)},has(e,t){return t in e||t in sr}})):i.proxy}function m7(i){return m2(i)&&"__vccOpts"in i}const $9=(i,e)=>ad(i,e,br);function $l(i,e,t){const n=arguments.length;return n===2?te(e)&&!h2(e)?ca(e)?fe(i,null,[e]):fe(i,e):fe(i,null,e):(n>3?t=Array.prototype.slice.call(arguments,2):n===3&&ca(t)&&(t=[t]),fe(i,e,t))}const _7="3.5.18";/**
* @vue/runtime-dom v3.5.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let d4;const Yl=typeof window<"u"&&window.trustedTypes;if(Yl)try{d4=Yl.createPolicy("vue",{createHTML:i=>i})}catch{}const Y6=d4?i=>d4.createHTML(i):i=>i,g7="http://www.w3.org/2000/svg",v7="http://www.w3.org/1998/Math/MathML",k3=typeof document<"u"?document:null,jl=k3&&k3.createElement("template"),x7={insert:(i,e,t)=>{e.insertBefore(i,t||null)},remove:i=>{const e=i.parentNode;e&&e.removeChild(i)},createElement:(i,e,t,n)=>{const r=e==="svg"?k3.createElementNS(g7,i):e==="mathml"?k3.createElementNS(v7,i):t?k3.createElement(i,{is:t}):k3.createElement(i);return i==="select"&&n&&n.multiple!=null&&r.setAttribute("multiple",n.multiple),r},createText:i=>k3.createTextNode(i),createComment:i=>k3.createComment(i),setText:(i,e)=>{i.nodeValue=e},setElementText:(i,e)=>{i.textContent=e},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,querySelector:i=>k3.querySelector(i),setScopeId(i,e){i.setAttribute(e,"")},insertStaticContent(i,e,t,n,r,s){const a=t?t.previousSibling:e.lastChild;if(r&&(r===s||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{jl.innerHTML=Y6(n==="svg"?`<svg>${i}</svg>`:n==="mathml"?`<math>${i}</math>`:i);const o=jl.content;if(n==="svg"||n==="mathml"){const l=o.firstChild;for(;l.firstChild;)o.appendChild(l.firstChild);o.removeChild(l)}e.insertBefore(o,t)}return[a?a.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},y7=Symbol("_vtc");function M7(i,e,t){const n=i[y7];n&&(e=(e?[e,...n]:[...n]).join(" ")),e==null?i.removeAttribute("class"):t?i.setAttribute("class",e):i.className=e}const fa=Symbol("_vod"),j6=Symbol("_vsh"),S7={beforeMount(i,{value:e},{transition:t}){i[fa]=i.style.display==="none"?"":i.style.display,t&&e?t.beforeEnter(i):Fi(i,e)},mounted(i,{value:e},{transition:t}){t&&e&&t.enter(i)},updated(i,{value:e,oldValue:t},{transition:n}){!e!=!t&&(n?e?(n.beforeEnter(i),Fi(i,!0),n.enter(i)):n.leave(i,()=>{Fi(i,!1)}):Fi(i,e))},beforeUnmount(i,{value:e}){Fi(i,e)}};function Fi(i,e){i.style.display=e?i[fa]:"none",i[j6]=!e}const b7=Symbol(""),E7=/(^|;)\s*display\s*:/;function T7(i,e,t){const n=i.style,r=ye(t);let s=!1;if(t&&!r){if(e)if(ye(e))for(const a of e.split(";")){const o=a.slice(0,a.indexOf(":")).trim();t[o]==null&&zs(n,o,"")}else for(const a in e)t[a]==null&&zs(n,a,"");for(const a in t)a==="display"&&(s=!0),zs(n,a,t[a])}else if(r){if(e!==t){const a=n[b7];a&&(t+=";"+a),n.cssText=t,s=E7.test(t)}}else e&&i.removeAttribute("style");fa in i&&(i[fa]=s?n.display:"",i[j6]&&(n.display="none"))}const Kl=/\s*!important$/;function zs(i,e,t){if(h2(t))t.forEach(n=>zs(i,e,n));else if(t==null&&(t=""),e.startsWith("--"))i.setProperty(e,t);else{const n=w7(i,e);Kl.test(t)?i.setProperty(An(n),t.replace(Kl,""),"important"):i[n]=t}}const Zl=["Webkit","Moz","ms"],io={};function w7(i,e){const t=io[e];if(t)return t;let n=R0(e);if(n!=="filter"&&n in i)return io[e]=n;n=Yu(n);for(let r=0;r<Zl.length;r++){const s=Zl[r]+n;if(s in i)return io[e]=s}return e}const Jl="http://www.w3.org/1999/xlink";function Ql(i,e,t,n,r,s=Rh(e)){n&&e.startsWith("xlink:")?t==null?i.removeAttributeNS(Jl,e.slice(6,e.length)):i.setAttributeNS(Jl,e,t):t==null||s&&!ju(t)?i.removeAttribute(e):i.setAttribute(e,s?"":N0(t)?String(t):t)}function ec(i,e,t,n,r){if(e==="innerHTML"||e==="textContent"){t!=null&&(i[e]=e==="innerHTML"?Y6(t):t);return}const s=i.tagName;if(e==="value"&&s!=="PROGRESS"&&!s.includes("-")){const o=s==="OPTION"?i.getAttribute("value")||"":i.value,l=t==null?i.type==="checkbox"?"on":"":String(t);(o!==l||!("_value"in i))&&(i.value=l),t==null&&i.removeAttribute(e),i._value=t;return}let a=!1;if(t===""||t==null){const o=typeof i[e];o==="boolean"?t=ju(t):t==null&&o==="string"?(t="",a=!0):o==="number"&&(t=0,a=!0)}try{i[e]=t}catch{}a&&i.removeAttribute(r||e)}function A7(i,e,t,n){i.addEventListener(e,t,n)}function C7(i,e,t,n){i.removeEventListener(e,t,n)}const tc=Symbol("_vei");function R7(i,e,t,n,r=null){const s=i[tc]||(i[tc]={}),a=s[e];if(n&&a)a.value=n;else{const[o,l]=P7(e);if(n){const c=s[e]=I7(n,r);A7(i,o,c,l)}else a&&(C7(i,o,a,l),s[e]=void 0)}}const nc=/(?:Once|Passive|Capture)$/;function P7(i){let e;if(nc.test(i)){e={};let n;for(;n=i.match(nc);)i=i.slice(0,i.length-n[0].length),e[n[0].toLowerCase()]=!0}return[i[2]===":"?i.slice(3):An(i.slice(2)),e]}let ro=0;const L7=Promise.resolve(),D7=()=>ro||(L7.then(()=>ro=0),ro=Date.now());function I7(i,e){const t=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=t.attached)return;C3(U7(n,t.value),e,5,[n])};return t.value=i,t.attached=D7(),t}function U7(i,e){if(h2(e)){const t=i.stopImmediatePropagation;return i.stopImmediatePropagation=()=>{t.call(i),i._stopped=!0},e.map(n=>r=>!r._stopped&&n&&n(r))}else return e}const ic=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&i.charCodeAt(2)>96&&i.charCodeAt(2)<123,O7=(i,e,t,n,r,s)=>{const a=r==="svg";e==="class"?M7(i,n,a):e==="style"?T7(i,t,n):Ca(e)?P9(e)||R7(i,e,t,n,s):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):F7(i,e,n,a))?(ec(i,e,n),!i.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&Ql(i,e,n,a,s,e!=="value")):i._isVueCE&&(/[A-Z]/.test(e)||!ye(n))?ec(i,R0(e),n,s,e):(e==="true-value"?i._trueValue=n:e==="false-value"&&(i._falseValue=n),Ql(i,e,n,a))};function F7(i,e,t,n){if(n)return!!(e==="innerHTML"||e==="textContent"||e in i&&ic(e)&&m2(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="autocorrect"||e==="form"||e==="list"&&i.tagName==="INPUT"||e==="type"&&i.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=i.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return ic(e)&&ye(t)?!1:e in i}const N7=et({patchProp:O7},x7);let rc;function k7(){return rc||(rc=Gd(N7))}const B7=(...i)=>{const e=k7().createApp(...i),{mount:t}=e;return e.mount=n=>{const r=H7(n);if(!r)return;const s=e._component;!m2(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.nodeType===1&&(r.textContent="");const a=t(r,!1,z7(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),a},e};function z7(i){if(i instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&i instanceof MathMLElement)return"mathml"}function H7(i){return ye(i)?document.querySelector(i):i}function B3(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function K6(i,e){i.prototype=Object.create(e.prototype),i.prototype.constructor=i,i.__proto__=e}/*!
 * GSAP 3.13.0
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var kt={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},gi={duration:.5,overwrite:!1,delay:0},Y9,Ve,ee,jt=1e8,$2=1/jt,p4=Math.PI*2,V7=p4/4,G7=0,Z6=Math.sqrt,W7=Math.cos,X7=Math.sin,Ie=function(e){return typeof e=="string"},oe=function(e){return typeof e=="function"},Q3=function(e){return typeof e=="number"},j9=function(e){return typeof e>"u"},R3=function(e){return typeof e=="object"},xt=function(e){return e!==!1},K9=function(){return typeof window<"u"},Jr=function(e){return oe(e)||Ie(e)},J6=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},Qe=Array.isArray,m4=/(?:-?\.?\d|\.)+/gi,Q6=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,Kn=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,so=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,e5=/[+-]=-?[.\d]+/,t5=/[^,'"\[\]\s]+/gi,q7=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,ie,_3,_4,Z9,Bt={},ha={},n5,i5=function(e){return(ha=vi(e,Bt))&&Et},J9=function(e,t){return console.warn("Invalid property",e,"set to",t,"Missing plugin? gsap.registerPlugin()")},Er=function(e,t){return!t&&console.warn(e)},r5=function(e,t){return e&&(Bt[e]=t)&&ha&&(ha[e]=t)||Bt},Tr=function(){return 0},$7={suppressEvents:!0,isStart:!0,kill:!1},Hs={suppressEvents:!0,kill:!1},Y7={suppressEvents:!0},Q9={},b0=[],g4={},s5,Dt={},ao={},sc=30,Vs=[],el="",tl=function(e){var t=e[0],n,r;if(R3(t)||oe(t)||(e=[e]),!(n=(t._gsap||{}).harness)){for(r=Vs.length;r--&&!Vs[r].targetTest(t););n=Vs[r]}for(r=e.length;r--;)e[r]&&(e[r]._gsap||(e[r]._gsap=new R5(e[r],n)))||e.splice(r,1);return e},dn=function(e){return e._gsap||tl(Kt(e))[0]._gsap},a5=function(e,t,n){return(n=e[t])&&oe(n)?e[t]():j9(n)&&e.getAttribute&&e.getAttribute(t)||n},yt=function(e,t){return(e=e.split(",")).forEach(t)||e},ue=function(e){return Math.round(e*1e5)/1e5||0},ve=function(e){return Math.round(e*1e7)/1e7||0},si=function(e,t){var n=t.charAt(0),r=parseFloat(t.substr(2));return e=parseFloat(e),n==="+"?e+r:n==="-"?e-r:n==="*"?e*r:e/r},j7=function(e,t){for(var n=t.length,r=0;e.indexOf(t[r])<0&&++r<n;);return r<n},da=function(){var e=b0.length,t=b0.slice(0),n,r;for(g4={},b0.length=0,n=0;n<e;n++)r=t[n],r&&r._lazy&&(r.render(r._lazy[0],r._lazy[1],!0)._lazy=0)},nl=function(e){return!!(e._initted||e._startAt||e.add)},o5=function(e,t,n,r){b0.length&&!Ve&&da(),e.render(t,n,!!(Ve&&t<0&&nl(e))),b0.length&&!Ve&&da()},l5=function(e){var t=parseFloat(e);return(t||t===0)&&(e+"").match(t5).length<2?t:Ie(e)?e.trim():e},c5=function(e){return e},zt=function(e,t){for(var n in t)n in e||(e[n]=t[n]);return e},K7=function(e){return function(t,n){for(var r in n)r in t||r==="duration"&&e||r==="ease"||(t[r]=n[r])}},vi=function(e,t){for(var n in t)e[n]=t[n];return e},ac=function i(e,t){for(var n in t)n!=="__proto__"&&n!=="constructor"&&n!=="prototype"&&(e[n]=R3(t[n])?i(e[n]||(e[n]={}),t[n]):t[n]);return e},pa=function(e,t){var n={},r;for(r in e)r in t||(n[r]=e[r]);return n},or=function(e){var t=e.parent||ie,n=e.keyframes?K7(Qe(e.keyframes)):zt;if(xt(e.inherit))for(;t;)n(e,t.vars.defaults),t=t.parent||t._dp;return e},Z7=function(e,t){for(var n=e.length,r=n===t.length;r&&n--&&e[n]===t[n];);return n<0},u5=function(e,t,n,r,s){var a=e[r],o;if(s)for(o=t[s];a&&a[s]>o;)a=a._prev;return a?(t._next=a._next,a._next=t):(t._next=e[n],e[n]=t),t._next?t._next._prev=t:e[r]=t,t._prev=a,t.parent=t._dp=e,t},za=function(e,t,n,r){n===void 0&&(n="_first"),r===void 0&&(r="_last");var s=t._prev,a=t._next;s?s._next=a:e[n]===t&&(e[n]=a),a?a._prev=s:e[r]===t&&(e[r]=s),t._next=t._prev=t.parent=null},D0=function(e,t){e.parent&&(!t||e.parent.autoRemoveChildren)&&e.parent.remove&&e.parent.remove(e),e._act=0},pn=function(e,t){if(e&&(!t||t._end>e._dur||t._start<0))for(var n=e;n;)n._dirty=1,n=n.parent;return e},J7=function(e){for(var t=e.parent;t&&t.parent;)t._dirty=1,t.totalDuration(),t=t.parent;return e},v4=function(e,t,n,r){return e._startAt&&(Ve?e._startAt.revert(Hs):e.vars.immediateRender&&!e.vars.autoRevert||e._startAt.render(t,!0,r))},Q7=function i(e){return!e||e._ts&&i(e.parent)},oc=function(e){return e._repeat?xi(e._tTime,e=e.duration()+e._rDelay)*e:0},xi=function(e,t){var n=Math.floor(e=ve(e/t));return e&&n===e?n-1:n},ma=function(e,t){return(e-t._start)*t._ts+(t._ts>=0?0:t._dirty?t.totalDuration():t._tDur)},Ha=function(e){return e._end=ve(e._start+(e._tDur/Math.abs(e._ts||e._rts||$2)||0))},Va=function(e,t){var n=e._dp;return n&&n.smoothChildTiming&&e._ts&&(e._start=ve(n._time-(e._ts>0?t/e._ts:((e._dirty?e.totalDuration():e._tDur)-t)/-e._ts)),Ha(e),n._dirty||pn(n,e)),e},f5=function(e,t){var n;if((t._time||!t._dur&&t._initted||t._start<e._time&&(t._dur||!t.add))&&(n=ma(e.rawTime(),t),(!t._dur||Hr(0,t.totalDuration(),n)-t._tTime>$2)&&t.render(n,!0)),pn(e,t)._dp&&e._initted&&e._time>=e._dur&&e._ts){if(e._dur<e.duration())for(n=e;n._dp;)n.rawTime()>=0&&n.totalTime(n._tTime),n=n._dp;e._zTime=-$2}},y3=function(e,t,n,r){return t.parent&&D0(t),t._start=ve((Q3(n)?n:n||e!==ie?Vt(e,n,t):e._time)+t._delay),t._end=ve(t._start+(t.totalDuration()/Math.abs(t.timeScale())||0)),u5(e,t,"_first","_last",e._sort?"_start":0),x4(t)||(e._recent=t),r||f5(e,t),e._ts<0&&Va(e,e._tTime),e},h5=function(e,t){return(Bt.ScrollTrigger||J9("scrollTrigger",t))&&Bt.ScrollTrigger.create(t,e)},d5=function(e,t,n,r,s){if(rl(e,t,s),!e._initted)return 1;if(!n&&e._pt&&!Ve&&(e._dur&&e.vars.lazy!==!1||!e._dur&&e.vars.lazy)&&s5!==Ut.frame)return b0.push(e),e._lazy=[s,r],1},ep=function i(e){var t=e.parent;return t&&t._ts&&t._initted&&!t._lock&&(t.rawTime()<0||i(t))},x4=function(e){var t=e.data;return t==="isFromStart"||t==="isStart"},tp=function(e,t,n,r){var s=e.ratio,a=t<0||!t&&(!e._start&&ep(e)&&!(!e._initted&&x4(e))||(e._ts<0||e._dp._ts<0)&&!x4(e))?0:1,o=e._rDelay,l=0,c,u,f;if(o&&e._repeat&&(l=Hr(0,e._tDur,t),u=xi(l,o),e._yoyo&&u&1&&(a=1-a),u!==xi(e._tTime,o)&&(s=1-a,e.vars.repeatRefresh&&e._initted&&e.invalidate())),a!==s||Ve||r||e._zTime===$2||!t&&e._zTime){if(!e._initted&&d5(e,t,r,n,l))return;for(f=e._zTime,e._zTime=t||(n?$2:0),n||(n=t&&!f),e.ratio=a,e._from&&(a=1-a),e._time=0,e._tTime=l,c=e._pt;c;)c.r(a,c.d),c=c._next;t<0&&v4(e,t,n,!0),e._onUpdate&&!n&&Nt(e,"onUpdate"),l&&e._repeat&&!n&&e.parent&&Nt(e,"onRepeat"),(t>=e._tDur||t<0)&&e.ratio===a&&(a&&D0(e,1),!n&&!Ve&&(Nt(e,a?"onComplete":"onReverseComplete",!0),e._prom&&e._prom()))}else e._zTime||(e._zTime=t)},np=function(e,t,n){var r;if(n>t)for(r=e._first;r&&r._start<=n;){if(r.data==="isPause"&&r._start>t)return r;r=r._next}else for(r=e._last;r&&r._start>=n;){if(r.data==="isPause"&&r._start<t)return r;r=r._prev}},yi=function(e,t,n,r){var s=e._repeat,a=ve(t)||0,o=e._tTime/e._tDur;return o&&!r&&(e._time*=a/e._dur),e._dur=a,e._tDur=s?s<0?1e10:ve(a*(s+1)+e._rDelay*s):a,o>0&&!r&&Va(e,e._tTime=e._tDur*o),e.parent&&Ha(e),n||pn(e.parent,e),e},lc=function(e){return e instanceof ut?pn(e):yi(e,e._dur)},ip={_start:0,endTime:Tr,totalDuration:Tr},Vt=function i(e,t,n){var r=e.labels,s=e._recent||ip,a=e.duration()>=jt?s.endTime(!1):e._dur,o,l,c;return Ie(t)&&(isNaN(t)||t in r)?(l=t.charAt(0),c=t.substr(-1)==="%",o=t.indexOf("="),l==="<"||l===">"?(o>=0&&(t=t.replace(/=/,"")),(l==="<"?s._start:s.endTime(s._repeat>=0))+(parseFloat(t.substr(1))||0)*(c?(o<0?s:n).totalDuration()/100:1)):o<0?(t in r||(r[t]=a),r[t]):(l=parseFloat(t.charAt(o-1)+t.substr(o+1)),c&&n&&(l=l/100*(Qe(n)?n[0]:n).totalDuration()),o>1?i(e,t.substr(0,o-1),n)+l:a+l)):t==null?a:+t},lr=function(e,t,n){var r=Q3(t[1]),s=(r?2:1)+(e<2?0:1),a=t[s],o,l;if(r&&(a.duration=t[1]),a.parent=n,e){for(o=a,l=n;l&&!("immediateRender"in o);)o=l.vars.defaults||{},l=xt(l.vars.inherit)&&l.parent;a.immediateRender=xt(o.immediateRender),e<2?a.runBackwards=1:a.startAt=t[s-1]}return new ge(t[0],a,t[s+1])},k0=function(e,t){return e||e===0?t(e):t},Hr=function(e,t,n){return n<e?e:n>t?t:n},Ke=function(e,t){return!Ie(e)||!(t=q7.exec(e))?"":t[1]},rp=function(e,t,n){return k0(n,function(r){return Hr(e,t,r)})},y4=[].slice,p5=function(e,t){return e&&R3(e)&&"length"in e&&(!t&&!e.length||e.length-1 in e&&R3(e[0]))&&!e.nodeType&&e!==_3},sp=function(e,t,n){return n===void 0&&(n=[]),e.forEach(function(r){var s;return Ie(r)&&!t||p5(r,1)?(s=n).push.apply(s,Kt(r)):n.push(r)})||n},Kt=function(e,t,n){return ee&&!t&&ee.selector?ee.selector(e):Ie(e)&&!n&&(_4||!Mi())?y4.call((t||Z9).querySelectorAll(e),0):Qe(e)?sp(e,n):p5(e)?y4.call(e,0):e?[e]:[]},M4=function(e){return e=Kt(e)[0]||Er("Invalid scope")||{},function(t){var n=e.current||e.nativeElement||e;return Kt(t,n.querySelectorAll?n:n===e?Er("Invalid scope")||Z9.createElement("div"):e)}},m5=function(e){return e.sort(function(){return .5-Math.random()})},_5=function(e){if(oe(e))return e;var t=R3(e)?e:{each:e},n=mn(t.ease),r=t.from||0,s=parseFloat(t.base)||0,a={},o=r>0&&r<1,l=isNaN(r)||o,c=t.axis,u=r,f=r;return Ie(r)?u=f={center:.5,edges:.5,end:1}[r]||0:!o&&l&&(u=r[0],f=r[1]),function(h,d,g){var _=(g||t).length,m=a[_],p,b,w,y,C,A,L,N,E;if(!m){if(E=t.grid==="auto"?0:(t.grid||[1,jt])[1],!E){for(L=-jt;L<(L=g[E++].getBoundingClientRect().left)&&E<_;);E<_&&E--}for(m=a[_]=[],p=l?Math.min(E,_)*u-.5:r%E,b=E===jt?0:l?_*f/E-.5:r/E|0,L=0,N=jt,A=0;A<_;A++)w=A%E-p,y=b-(A/E|0),m[A]=C=c?Math.abs(c==="y"?y:w):Z6(w*w+y*y),C>L&&(L=C),C<N&&(N=C);r==="random"&&m5(m),m.max=L-N,m.min=N,m.v=_=(parseFloat(t.amount)||parseFloat(t.each)*(E>_?_-1:c?c==="y"?_/E:E:Math.max(E,_/E))||0)*(r==="edges"?-1:1),m.b=_<0?s-_:s,m.u=Ke(t.amount||t.each)||0,n=n&&_<0?w5(n):n}return _=(m[h]-m.min)/m.max||0,ve(m.b+(n?n(_):_)*m.v)+m.u}},S4=function(e){var t=Math.pow(10,((e+"").split(".")[1]||"").length);return function(n){var r=ve(Math.round(parseFloat(n)/e)*e*t);return(r-r%1)/t+(Q3(n)?0:Ke(n))}},g5=function(e,t){var n=Qe(e),r,s;return!n&&R3(e)&&(r=n=e.radius||jt,e.values?(e=Kt(e.values),(s=!Q3(e[0]))&&(r*=r)):e=S4(e.increment)),k0(t,n?oe(e)?function(a){return s=e(a),Math.abs(s-a)<=r?s:a}:function(a){for(var o=parseFloat(s?a.x:a),l=parseFloat(s?a.y:0),c=jt,u=0,f=e.length,h,d;f--;)s?(h=e[f].x-o,d=e[f].y-l,h=h*h+d*d):h=Math.abs(e[f]-o),h<c&&(c=h,u=f);return u=!r||c<=r?e[u]:a,s||u===a||Q3(a)?u:u+Ke(a)}:S4(e))},v5=function(e,t,n,r){return k0(Qe(e)?!t:n===!0?!!(n=0):!r,function(){return Qe(e)?e[~~(Math.random()*e.length)]:(n=n||1e-5)&&(r=n<1?Math.pow(10,(n+"").length-2):1)&&Math.floor(Math.round((e-n/2+Math.random()*(t-e+n*.99))/n)*n*r)/r})},ap=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(r){return t.reduce(function(s,a){return a(s)},r)}},op=function(e,t){return function(n){return e(parseFloat(n))+(t||Ke(n))}},lp=function(e,t,n){return y5(e,t,0,1,n)},x5=function(e,t,n){return k0(n,function(r){return e[~~t(r)]})},cp=function i(e,t,n){var r=t-e;return Qe(e)?x5(e,i(0,e.length),t):k0(n,function(s){return(r+(s-e)%r)%r+e})},up=function i(e,t,n){var r=t-e,s=r*2;return Qe(e)?x5(e,i(0,e.length-1),t):k0(n,function(a){return a=(s+(a-e)%s)%s||0,e+(a>r?s-a:a)})},wr=function(e){for(var t=0,n="",r,s,a,o;~(r=e.indexOf("random(",t));)a=e.indexOf(")",r),o=e.charAt(r+7)==="[",s=e.substr(r+7,a-r-7).match(o?t5:m4),n+=e.substr(t,r-t)+v5(o?s:+s[0],o?0:+s[1],+s[2]||1e-5),t=a+1;return n+e.substr(t,e.length-t)},y5=function(e,t,n,r,s){var a=t-e,o=r-n;return k0(s,function(l){return n+((l-e)/a*o||0)})},fp=function i(e,t,n,r){var s=isNaN(e+t)?0:function(d){return(1-d)*e+d*t};if(!s){var a=Ie(e),o={},l,c,u,f,h;if(n===!0&&(r=1)&&(n=null),a)e={p:e},t={p:t};else if(Qe(e)&&!Qe(t)){for(u=[],f=e.length,h=f-2,c=1;c<f;c++)u.push(i(e[c-1],e[c]));f--,s=function(g){g*=f;var _=Math.min(h,~~g);return u[_](g-_)},n=t}else r||(e=vi(Qe(e)?[]:{},e));if(!u){for(l in t)il.call(o,e,l,"get",t[l]);s=function(g){return ol(g,o)||(a?e.p:e)}}}return k0(n,s)},cc=function(e,t,n){var r=e.labels,s=jt,a,o,l;for(a in r)o=r[a]-t,o<0==!!n&&o&&s>(o=Math.abs(o))&&(l=a,s=o);return l},Nt=function(e,t,n){var r=e.vars,s=r[t],a=ee,o=e._ctx,l,c,u;if(s)return l=r[t+"Params"],c=r.callbackScope||e,n&&b0.length&&da(),o&&(ee=o),u=l?s.apply(c,l):s.call(c),ee=a,u},qi=function(e){return D0(e),e.scrollTrigger&&e.scrollTrigger.kill(!!Ve),e.progress()<1&&Nt(e,"onInterrupt"),e},Zn,M5=[],S5=function(e){if(e)if(e=!e.name&&e.default||e,K9()||e.headless){var t=e.name,n=oe(e),r=t&&!n&&e.init?function(){this._props=[]}:e,s={init:Tr,render:ol,add:il,kill:Ap,modifier:wp,rawVars:0},a={targetTest:0,get:0,getSetter:al,aliases:{},register:0};if(Mi(),e!==r){if(Dt[t])return;zt(r,zt(pa(e,s),a)),vi(r.prototype,vi(s,pa(e,a))),Dt[r.prop=t]=r,e.targetTest&&(Vs.push(r),Q9[t]=1),t=(t==="css"?"CSS":t.charAt(0).toUpperCase()+t.substr(1))+"Plugin"}r5(t,r),e.register&&e.register(Et,r,Mt)}else M5.push(e)},q2=255,$i={aqua:[0,q2,q2],lime:[0,q2,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,q2],navy:[0,0,128],white:[q2,q2,q2],olive:[128,128,0],yellow:[q2,q2,0],orange:[q2,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[q2,0,0],pink:[q2,192,203],cyan:[0,q2,q2],transparent:[q2,q2,q2,0]},oo=function(e,t,n){return e+=e<0?1:e>1?-1:0,(e*6<1?t+(n-t)*e*6:e<.5?n:e*3<2?t+(n-t)*(2/3-e)*6:t)*q2+.5|0},b5=function(e,t,n){var r=e?Q3(e)?[e>>16,e>>8&q2,e&q2]:0:$i.black,s,a,o,l,c,u,f,h,d,g;if(!r){if(e.substr(-1)===","&&(e=e.substr(0,e.length-1)),$i[e])r=$i[e];else if(e.charAt(0)==="#"){if(e.length<6&&(s=e.charAt(1),a=e.charAt(2),o=e.charAt(3),e="#"+s+s+a+a+o+o+(e.length===5?e.charAt(4)+e.charAt(4):"")),e.length===9)return r=parseInt(e.substr(1,6),16),[r>>16,r>>8&q2,r&q2,parseInt(e.substr(7),16)/255];e=parseInt(e.substr(1),16),r=[e>>16,e>>8&q2,e&q2]}else if(e.substr(0,3)==="hsl"){if(r=g=e.match(m4),!t)l=+r[0]%360/360,c=+r[1]/100,u=+r[2]/100,a=u<=.5?u*(c+1):u+c-u*c,s=u*2-a,r.length>3&&(r[3]*=1),r[0]=oo(l+1/3,s,a),r[1]=oo(l,s,a),r[2]=oo(l-1/3,s,a);else if(~e.indexOf("="))return r=e.match(Q6),n&&r.length<4&&(r[3]=1),r}else r=e.match(m4)||$i.transparent;r=r.map(Number)}return t&&!g&&(s=r[0]/q2,a=r[1]/q2,o=r[2]/q2,f=Math.max(s,a,o),h=Math.min(s,a,o),u=(f+h)/2,f===h?l=c=0:(d=f-h,c=u>.5?d/(2-f-h):d/(f+h),l=f===s?(a-o)/d+(a<o?6:0):f===a?(o-s)/d+2:(s-a)/d+4,l*=60),r[0]=~~(l+.5),r[1]=~~(c*100+.5),r[2]=~~(u*100+.5)),n&&r.length<4&&(r[3]=1),r},E5=function(e){var t=[],n=[],r=-1;return e.split(E0).forEach(function(s){var a=s.match(Kn)||[];t.push.apply(t,a),n.push(r+=a.length+1)}),t.c=n,t},uc=function(e,t,n){var r="",s=(e+r).match(E0),a=t?"hsla(":"rgba(",o=0,l,c,u,f;if(!s)return e;if(s=s.map(function(h){return(h=b5(h,t,1))&&a+(t?h[0]+","+h[1]+"%,"+h[2]+"%,"+h[3]:h.join(","))+")"}),n&&(u=E5(e),l=n.c,l.join(r)!==u.c.join(r)))for(c=e.replace(E0,"1").split(Kn),f=c.length-1;o<f;o++)r+=c[o]+(~l.indexOf(o)?s.shift()||a+"0,0,0,0)":(u.length?u:s.length?s:n).shift());if(!c)for(c=e.split(E0),f=c.length-1;o<f;o++)r+=c[o]+s[o];return r+c[f]},E0=(function(){var i="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",e;for(e in $i)i+="|"+e+"\\b";return new RegExp(i+")","gi")})(),hp=/hsl[a]?\(/,T5=function(e){var t=e.join(" "),n;if(E0.lastIndex=0,E0.test(t))return n=hp.test(t),e[1]=uc(e[1],n),e[0]=uc(e[0],n,E5(e[1])),!0},Ar,Ut=(function(){var i=Date.now,e=500,t=33,n=i(),r=n,s=1e3/240,a=s,o=[],l,c,u,f,h,d,g=function _(m){var p=i()-r,b=m===!0,w,y,C,A;if((p>e||p<0)&&(n+=p-t),r+=p,C=r-n,w=C-a,(w>0||b)&&(A=++f.frame,h=C-f.time*1e3,f.time=C=C/1e3,a+=w+(w>=s?4:s-w),y=1),b||(l=c(_)),y)for(d=0;d<o.length;d++)o[d](C,h,A,m)};return f={time:0,frame:0,tick:function(){g(!0)},deltaRatio:function(m){return h/(1e3/(m||60))},wake:function(){n5&&(!_4&&K9()&&(_3=_4=window,Z9=_3.document||{},Bt.gsap=Et,(_3.gsapVersions||(_3.gsapVersions=[])).push(Et.version),i5(ha||_3.GreenSockGlobals||!_3.gsap&&_3||{}),M5.forEach(S5)),u=typeof requestAnimationFrame<"u"&&requestAnimationFrame,l&&f.sleep(),c=u||function(m){return setTimeout(m,a-f.time*1e3+1|0)},Ar=1,g(2))},sleep:function(){(u?cancelAnimationFrame:clearTimeout)(l),Ar=0,c=Tr},lagSmoothing:function(m,p){e=m||1/0,t=Math.min(p||33,e)},fps:function(m){s=1e3/(m||240),a=f.time*1e3+s},add:function(m,p,b){var w=p?function(y,C,A,L){m(y,C,A,L),f.remove(w)}:m;return f.remove(m),o[b?"unshift":"push"](w),Mi(),w},remove:function(m,p){~(p=o.indexOf(m))&&o.splice(p,1)&&d>=p&&d--},_listeners:o},f})(),Mi=function(){return!Ar&&Ut.wake()},T2={},dp=/^[\d.\-M][\d.\-,\s]/,pp=/["']/g,mp=function(e){for(var t={},n=e.substr(1,e.length-3).split(":"),r=n[0],s=1,a=n.length,o,l,c;s<a;s++)l=n[s],o=s!==a-1?l.lastIndexOf(","):l.length,c=l.substr(0,o),t[r]=isNaN(c)?c.replace(pp,"").trim():+c,r=l.substr(o+1).trim();return t},_p=function(e){var t=e.indexOf("(")+1,n=e.indexOf(")"),r=e.indexOf("(",t);return e.substring(t,~r&&r<n?e.indexOf(")",n+1):n)},gp=function(e){var t=(e+"").split("("),n=T2[t[0]];return n&&t.length>1&&n.config?n.config.apply(null,~e.indexOf("{")?[mp(t[1])]:_p(e).split(",").map(l5)):T2._CE&&dp.test(e)?T2._CE("",e):n},w5=function(e){return function(t){return 1-e(1-t)}},A5=function i(e,t){for(var n=e._first,r;n;)n instanceof ut?i(n,t):n.vars.yoyoEase&&(!n._yoyo||!n._repeat)&&n._yoyo!==t&&(n.timeline?i(n.timeline,t):(r=n._ease,n._ease=n._yEase,n._yEase=r,n._yoyo=t)),n=n._next},mn=function(e,t){return e&&(oe(e)?e:T2[e]||gp(e))||t},Cn=function(e,t,n,r){n===void 0&&(n=function(l){return 1-t(1-l)}),r===void 0&&(r=function(l){return l<.5?t(l*2)/2:1-t((1-l)*2)/2});var s={easeIn:t,easeOut:n,easeInOut:r},a;return yt(e,function(o){T2[o]=Bt[o]=s,T2[a=o.toLowerCase()]=n;for(var l in s)T2[a+(l==="easeIn"?".in":l==="easeOut"?".out":".inOut")]=T2[o+"."+l]=s[l]}),s},C5=function(e){return function(t){return t<.5?(1-e(1-t*2))/2:.5+e((t-.5)*2)/2}},lo=function i(e,t,n){var r=t>=1?t:1,s=(n||(e?.3:.45))/(t<1?t:1),a=s/p4*(Math.asin(1/r)||0),o=function(u){return u===1?1:r*Math.pow(2,-10*u)*X7((u-a)*s)+1},l=e==="out"?o:e==="in"?function(c){return 1-o(1-c)}:C5(o);return s=p4/s,l.config=function(c,u){return i(e,c,u)},l},co=function i(e,t){t===void 0&&(t=1.70158);var n=function(a){return a?--a*a*((t+1)*a+t)+1:0},r=e==="out"?n:e==="in"?function(s){return 1-n(1-s)}:C5(n);return r.config=function(s){return i(e,s)},r};yt("Linear,Quad,Cubic,Quart,Quint,Strong",function(i,e){var t=e<5?e+1:e;Cn(i+",Power"+(t-1),e?function(n){return Math.pow(n,t)}:function(n){return n},function(n){return 1-Math.pow(1-n,t)},function(n){return n<.5?Math.pow(n*2,t)/2:1-Math.pow((1-n)*2,t)/2})});T2.Linear.easeNone=T2.none=T2.Linear.easeIn;Cn("Elastic",lo("in"),lo("out"),lo());(function(i,e){var t=1/e,n=2*t,r=2.5*t,s=function(o){return o<t?i*o*o:o<n?i*Math.pow(o-1.5/e,2)+.75:o<r?i*(o-=2.25/e)*o+.9375:i*Math.pow(o-2.625/e,2)+.984375};Cn("Bounce",function(a){return 1-s(1-a)},s)})(7.5625,2.75);Cn("Expo",function(i){return Math.pow(2,10*(i-1))*i+i*i*i*i*i*i*(1-i)});Cn("Circ",function(i){return-(Z6(1-i*i)-1)});Cn("Sine",function(i){return i===1?1:-W7(i*V7)+1});Cn("Back",co("in"),co("out"),co());T2.SteppedEase=T2.steps=Bt.SteppedEase={config:function(e,t){e===void 0&&(e=1);var n=1/e,r=e+(t?0:1),s=t?1:0,a=1-$2;return function(o){return((r*Hr(0,a,o)|0)+s)*n}}};gi.ease=T2["quad.out"];yt("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(i){return el+=i+","+i+"Params,"});var R5=function(e,t){this.id=G7++,e._gsap=this,this.target=e,this.harness=t,this.get=t?t.get:a5,this.set=t?t.getSetter:al},Cr=(function(){function i(t){this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,yi(this,+t.duration,1,1),this.data=t.data,ee&&(this._ctx=ee,ee.data.push(this)),Ar||Ut.wake()}var e=i.prototype;return e.delay=function(n){return n||n===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+n-this._delay),this._delay=n,this):this._delay},e.duration=function(n){return arguments.length?this.totalDuration(this._repeat>0?n+(n+this._rDelay)*this._repeat:n):this.totalDuration()&&this._dur},e.totalDuration=function(n){return arguments.length?(this._dirty=0,yi(this,this._repeat<0?n:(n-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},e.totalTime=function(n,r){if(Mi(),!arguments.length)return this._tTime;var s=this._dp;if(s&&s.smoothChildTiming&&this._ts){for(Va(this,n),!s._dp||s.parent||f5(s,this);s&&s.parent;)s.parent._time!==s._start+(s._ts>=0?s._tTime/s._ts:(s.totalDuration()-s._tTime)/-s._ts)&&s.totalTime(s._tTime,!0),s=s.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&n<this._tDur||this._ts<0&&n>0||!this._tDur&&!n)&&y3(this._dp,this,this._start-this._delay)}return(this._tTime!==n||!this._dur&&!r||this._initted&&Math.abs(this._zTime)===$2||!n&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=n),o5(this,n,r)),this},e.time=function(n,r){return arguments.length?this.totalTime(Math.min(this.totalDuration(),n+oc(this))%(this._dur+this._rDelay)||(n?this._dur:0),r):this._time},e.totalProgress=function(n,r){return arguments.length?this.totalTime(this.totalDuration()*n,r):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.rawTime()>=0&&this._initted?1:0},e.progress=function(n,r){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-n:n)+oc(this),r):this.duration()?Math.min(1,this._time/this._dur):this.rawTime()>0?1:0},e.iteration=function(n,r){var s=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(n-1)*s,r):this._repeat?xi(this._tTime,s)+1:1},e.timeScale=function(n,r){if(!arguments.length)return this._rts===-$2?0:this._rts;if(this._rts===n)return this;var s=this.parent&&this._ts?ma(this.parent._time,this):this._tTime;return this._rts=+n||0,this._ts=this._ps||n===-$2?0:this._rts,this.totalTime(Hr(-Math.abs(this._delay),this.totalDuration(),s),r!==!1),Ha(this),J7(this)},e.paused=function(n){return arguments.length?(this._ps!==n&&(this._ps=n,n?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(Mi(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==$2&&(this._tTime-=$2)))),this):this._ps},e.startTime=function(n){if(arguments.length){this._start=n;var r=this.parent||this._dp;return r&&(r._sort||!this.parent)&&y3(r,this,n-this._delay),this}return this._start},e.endTime=function(n){return this._start+(xt(n)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},e.rawTime=function(n){var r=this.parent||this._dp;return r?n&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?ma(r.rawTime(n),this):this._tTime:this._tTime},e.revert=function(n){n===void 0&&(n=Y7);var r=Ve;return Ve=n,nl(this)&&(this.timeline&&this.timeline.revert(n),this.totalTime(-.01,n.suppressEvents)),this.data!=="nested"&&n.kill!==!1&&this.kill(),Ve=r,this},e.globalTime=function(n){for(var r=this,s=arguments.length?n:r.rawTime();r;)s=r._start+s/(Math.abs(r._ts)||1),r=r._dp;return!this.parent&&this._sat?this._sat.globalTime(n):s},e.repeat=function(n){return arguments.length?(this._repeat=n===1/0?-2:n,lc(this)):this._repeat===-2?1/0:this._repeat},e.repeatDelay=function(n){if(arguments.length){var r=this._time;return this._rDelay=n,lc(this),r?this.time(r):this}return this._rDelay},e.yoyo=function(n){return arguments.length?(this._yoyo=n,this):this._yoyo},e.seek=function(n,r){return this.totalTime(Vt(this,n),xt(r))},e.restart=function(n,r){return this.play().totalTime(n?-this._delay:0,xt(r)),this._dur||(this._zTime=-$2),this},e.play=function(n,r){return n!=null&&this.seek(n,r),this.reversed(!1).paused(!1)},e.reverse=function(n,r){return n!=null&&this.seek(n||this.totalDuration(),r),this.reversed(!0).paused(!1)},e.pause=function(n,r){return n!=null&&this.seek(n,r),this.paused(!0)},e.resume=function(){return this.paused(!1)},e.reversed=function(n){return arguments.length?(!!n!==this.reversed()&&this.timeScale(-this._rts||(n?-$2:0)),this):this._rts<0},e.invalidate=function(){return this._initted=this._act=0,this._zTime=-$2,this},e.isActive=function(){var n=this.parent||this._dp,r=this._start,s;return!!(!n||this._ts&&this._initted&&n.isActive()&&(s=n.rawTime(!0))>=r&&s<this.endTime(!0)-$2)},e.eventCallback=function(n,r,s){var a=this.vars;return arguments.length>1?(r?(a[n]=r,s&&(a[n+"Params"]=s),n==="onUpdate"&&(this._onUpdate=r)):delete a[n],this):a[n]},e.then=function(n){var r=this;return new Promise(function(s){var a=oe(n)?n:c5,o=function(){var c=r.then;r.then=null,oe(a)&&(a=a(r))&&(a.then||a===r)&&(r.then=c),s(a),r.then=c};r._initted&&r.totalProgress()===1&&r._ts>=0||!r._tTime&&r._ts<0?o():r._prom=o})},e.kill=function(){qi(this)},i})();zt(Cr.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-$2,_prom:0,_ps:!1,_rts:1});var ut=(function(i){K6(e,i);function e(n,r){var s;return n===void 0&&(n={}),s=i.call(this,n)||this,s.labels={},s.smoothChildTiming=!!n.smoothChildTiming,s.autoRemoveChildren=!!n.autoRemoveChildren,s._sort=xt(n.sortChildren),ie&&y3(n.parent||ie,B3(s),r),n.reversed&&s.reverse(),n.paused&&s.paused(!0),n.scrollTrigger&&h5(B3(s),n.scrollTrigger),s}var t=e.prototype;return t.to=function(r,s,a){return lr(0,arguments,this),this},t.from=function(r,s,a){return lr(1,arguments,this),this},t.fromTo=function(r,s,a,o){return lr(2,arguments,this),this},t.set=function(r,s,a){return s.duration=0,s.parent=this,or(s).repeatDelay||(s.repeat=0),s.immediateRender=!!s.immediateRender,new ge(r,s,Vt(this,a),1),this},t.call=function(r,s,a){return y3(this,ge.delayedCall(0,r,s),a)},t.staggerTo=function(r,s,a,o,l,c,u){return a.duration=s,a.stagger=a.stagger||o,a.onComplete=c,a.onCompleteParams=u,a.parent=this,new ge(r,a,Vt(this,l)),this},t.staggerFrom=function(r,s,a,o,l,c,u){return a.runBackwards=1,or(a).immediateRender=xt(a.immediateRender),this.staggerTo(r,s,a,o,l,c,u)},t.staggerFromTo=function(r,s,a,o,l,c,u,f){return o.startAt=a,or(o).immediateRender=xt(o.immediateRender),this.staggerTo(r,s,o,l,c,u,f)},t.render=function(r,s,a){var o=this._time,l=this._dirty?this.totalDuration():this._tDur,c=this._dur,u=r<=0?0:ve(r),f=this._zTime<0!=r<0&&(this._initted||!c),h,d,g,_,m,p,b,w,y,C,A,L;if(this!==ie&&u>l&&r>=0&&(u=l),u!==this._tTime||a||f){if(o!==this._time&&c&&(u+=this._time-o,r+=this._time-o),h=u,y=this._start,w=this._ts,p=!w,f&&(c||(o=this._zTime),(r||!s)&&(this._zTime=r)),this._repeat){if(A=this._yoyo,m=c+this._rDelay,this._repeat<-1&&r<0)return this.totalTime(m*100+r,s,a);if(h=ve(u%m),u===l?(_=this._repeat,h=c):(C=ve(u/m),_=~~C,_&&_===C&&(h=c,_--),h>c&&(h=c)),C=xi(this._tTime,m),!o&&this._tTime&&C!==_&&this._tTime-C*m-this._dur<=0&&(C=_),A&&_&1&&(h=c-h,L=1),_!==C&&!this._lock){var N=A&&C&1,E=N===(A&&_&1);if(_<C&&(N=!N),o=N?0:u%c?c:u,this._lock=1,this.render(o||(L?0:ve(_*m)),s,!c)._lock=0,this._tTime=u,!s&&this.parent&&Nt(this,"onRepeat"),this.vars.repeatRefresh&&!L&&(this.invalidate()._lock=1),o&&o!==this._time||p!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(c=this._dur,l=this._tDur,E&&(this._lock=2,o=N?c:-1e-4,this.render(o,!0),this.vars.repeatRefresh&&!L&&this.invalidate()),this._lock=0,!this._ts&&!p)return this;A5(this,L)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(b=np(this,ve(o),ve(h)),b&&(u-=h-(h=b._start))),this._tTime=u,this._time=h,this._act=!w,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=r,o=0),!o&&u&&!s&&!C&&(Nt(this,"onStart"),this._tTime!==u))return this;if(h>=o&&r>=0)for(d=this._first;d;){if(g=d._next,(d._act||h>=d._start)&&d._ts&&b!==d){if(d.parent!==this)return this.render(r,s,a);if(d.render(d._ts>0?(h-d._start)*d._ts:(d._dirty?d.totalDuration():d._tDur)+(h-d._start)*d._ts,s,a),h!==this._time||!this._ts&&!p){b=0,g&&(u+=this._zTime=-$2);break}}d=g}else{d=this._last;for(var T=r<0?r:h;d;){if(g=d._prev,(d._act||T<=d._end)&&d._ts&&b!==d){if(d.parent!==this)return this.render(r,s,a);if(d.render(d._ts>0?(T-d._start)*d._ts:(d._dirty?d.totalDuration():d._tDur)+(T-d._start)*d._ts,s,a||Ve&&nl(d)),h!==this._time||!this._ts&&!p){b=0,g&&(u+=this._zTime=T?-$2:$2);break}}d=g}}if(b&&!s&&(this.pause(),b.render(h>=o?0:-$2)._zTime=h>=o?1:-1,this._ts))return this._start=y,Ha(this),this.render(r,s,a);this._onUpdate&&!s&&Nt(this,"onUpdate",!0),(u===l&&this._tTime>=this.totalDuration()||!u&&o)&&(y===this._start||Math.abs(w)!==Math.abs(this._ts))&&(this._lock||((r||!c)&&(u===l&&this._ts>0||!u&&this._ts<0)&&D0(this,1),!s&&!(r<0&&!o)&&(u||o||!l)&&(Nt(this,u===l&&r>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(u<l&&this.timeScale()>0)&&this._prom())))}return this},t.add=function(r,s){var a=this;if(Q3(s)||(s=Vt(this,s,r)),!(r instanceof Cr)){if(Qe(r))return r.forEach(function(o){return a.add(o,s)}),this;if(Ie(r))return this.addLabel(r,s);if(oe(r))r=ge.delayedCall(0,r);else return this}return this!==r?y3(this,r,s):this},t.getChildren=function(r,s,a,o){r===void 0&&(r=!0),s===void 0&&(s=!0),a===void 0&&(a=!0),o===void 0&&(o=-jt);for(var l=[],c=this._first;c;)c._start>=o&&(c instanceof ge?s&&l.push(c):(a&&l.push(c),r&&l.push.apply(l,c.getChildren(!0,s,a)))),c=c._next;return l},t.getById=function(r){for(var s=this.getChildren(1,1,1),a=s.length;a--;)if(s[a].vars.id===r)return s[a]},t.remove=function(r){return Ie(r)?this.removeLabel(r):oe(r)?this.killTweensOf(r):(r.parent===this&&za(this,r),r===this._recent&&(this._recent=this._last),pn(this))},t.totalTime=function(r,s){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=ve(Ut.time-(this._ts>0?r/this._ts:(this.totalDuration()-r)/-this._ts))),i.prototype.totalTime.call(this,r,s),this._forcing=0,this):this._tTime},t.addLabel=function(r,s){return this.labels[r]=Vt(this,s),this},t.removeLabel=function(r){return delete this.labels[r],this},t.addPause=function(r,s,a){var o=ge.delayedCall(0,s||Tr,a);return o.data="isPause",this._hasPause=1,y3(this,o,Vt(this,r))},t.removePause=function(r){var s=this._first;for(r=Vt(this,r);s;)s._start===r&&s.data==="isPause"&&D0(s),s=s._next},t.killTweensOf=function(r,s,a){for(var o=this.getTweensOf(r,a),l=o.length;l--;)_0!==o[l]&&o[l].kill(r,s);return this},t.getTweensOf=function(r,s){for(var a=[],o=Kt(r),l=this._first,c=Q3(s),u;l;)l instanceof ge?j7(l._targets,o)&&(c?(!_0||l._initted&&l._ts)&&l.globalTime(0)<=s&&l.globalTime(l.totalDuration())>s:!s||l.isActive())&&a.push(l):(u=l.getTweensOf(o,s)).length&&a.push.apply(a,u),l=l._next;return a},t.tweenTo=function(r,s){s=s||{};var a=this,o=Vt(a,r),l=s,c=l.startAt,u=l.onStart,f=l.onStartParams,h=l.immediateRender,d,g=ge.to(a,zt({ease:s.ease||"none",lazy:!1,immediateRender:!1,time:o,overwrite:"auto",duration:s.duration||Math.abs((o-(c&&"time"in c?c.time:a._time))/a.timeScale())||$2,onStart:function(){if(a.pause(),!d){var m=s.duration||Math.abs((o-(c&&"time"in c?c.time:a._time))/a.timeScale());g._dur!==m&&yi(g,m,0,1).render(g._time,!0,!0),d=1}u&&u.apply(g,f||[])}},s));return h?g.render(0):g},t.tweenFromTo=function(r,s,a){return this.tweenTo(s,zt({startAt:{time:Vt(this,r)}},a))},t.recent=function(){return this._recent},t.nextLabel=function(r){return r===void 0&&(r=this._time),cc(this,Vt(this,r))},t.previousLabel=function(r){return r===void 0&&(r=this._time),cc(this,Vt(this,r),1)},t.currentLabel=function(r){return arguments.length?this.seek(r,!0):this.previousLabel(this._time+$2)},t.shiftChildren=function(r,s,a){a===void 0&&(a=0);for(var o=this._first,l=this.labels,c;o;)o._start>=a&&(o._start+=r,o._end+=r),o=o._next;if(s)for(c in l)l[c]>=a&&(l[c]+=r);return pn(this)},t.invalidate=function(r){var s=this._first;for(this._lock=0;s;)s.invalidate(r),s=s._next;return i.prototype.invalidate.call(this,r)},t.clear=function(r){r===void 0&&(r=!0);for(var s=this._first,a;s;)a=s._next,this.remove(s),s=a;return this._dp&&(this._time=this._tTime=this._pTime=0),r&&(this.labels={}),pn(this)},t.totalDuration=function(r){var s=0,a=this,o=a._last,l=jt,c,u,f;if(arguments.length)return a.timeScale((a._repeat<0?a.duration():a.totalDuration())/(a.reversed()?-r:r));if(a._dirty){for(f=a.parent;o;)c=o._prev,o._dirty&&o.totalDuration(),u=o._start,u>l&&a._sort&&o._ts&&!a._lock?(a._lock=1,y3(a,o,u-o._delay,1)._lock=0):l=u,u<0&&o._ts&&(s-=u,(!f&&!a._dp||f&&f.smoothChildTiming)&&(a._start+=u/a._ts,a._time-=u,a._tTime-=u),a.shiftChildren(-u,!1,-1/0),l=0),o._end>s&&o._ts&&(s=o._end),o=c;yi(a,a===ie&&a._time>s?a._time:s,1,1),a._dirty=0}return a._tDur},e.updateRoot=function(r){if(ie._ts&&(o5(ie,ma(r,ie)),s5=Ut.frame),Ut.frame>=sc){sc+=kt.autoSleep||120;var s=ie._first;if((!s||!s._ts)&&kt.autoSleep&&Ut._listeners.length<2){for(;s&&!s._ts;)s=s._next;s||Ut.sleep()}}},e})(Cr);zt(ut.prototype,{_lock:0,_hasPause:0,_forcing:0});var vp=function(e,t,n,r,s,a,o){var l=new Mt(this._pt,e,t,0,1,O5,null,s),c=0,u=0,f,h,d,g,_,m,p,b;for(l.b=n,l.e=r,n+="",r+="",(p=~r.indexOf("random("))&&(r=wr(r)),a&&(b=[n,r],a(b,e,t),n=b[0],r=b[1]),h=n.match(so)||[];f=so.exec(r);)g=f[0],_=r.substring(c,f.index),d?d=(d+1)%5:_.substr(-5)==="rgba("&&(d=1),g!==h[u++]&&(m=parseFloat(h[u-1])||0,l._pt={_next:l._pt,p:_||u===1?_:",",s:m,c:g.charAt(1)==="="?si(m,g)-m:parseFloat(g)-m,m:d&&d<4?Math.round:0},c=so.lastIndex);return l.c=c<r.length?r.substring(c,r.length):"",l.fp=o,(e5.test(r)||p)&&(l.e=0),this._pt=l,l},il=function(e,t,n,r,s,a,o,l,c,u){oe(r)&&(r=r(s||0,e,a));var f=e[t],h=n!=="get"?n:oe(f)?c?e[t.indexOf("set")||!oe(e["get"+t.substr(3)])?t:"get"+t.substr(3)](c):e[t]():f,d=oe(f)?c?bp:I5:sl,g;if(Ie(r)&&(~r.indexOf("random(")&&(r=wr(r)),r.charAt(1)==="="&&(g=si(h,r)+(Ke(h)||0),(g||g===0)&&(r=g))),!u||h!==r||b4)return!isNaN(h*r)&&r!==""?(g=new Mt(this._pt,e,t,+h||0,r-(h||0),typeof f=="boolean"?Tp:U5,0,d),c&&(g.fp=c),o&&g.modifier(o,this,e),this._pt=g):(!f&&!(t in e)&&J9(t,r),vp.call(this,e,t,h,r,d,l||kt.stringFilter,c))},xp=function(e,t,n,r,s){if(oe(e)&&(e=cr(e,s,t,n,r)),!R3(e)||e.style&&e.nodeType||Qe(e)||J6(e))return Ie(e)?cr(e,s,t,n,r):e;var a={},o;for(o in e)a[o]=cr(e[o],s,t,n,r);return a},P5=function(e,t,n,r,s,a){var o,l,c,u;if(Dt[e]&&(o=new Dt[e]).init(s,o.rawVars?t[e]:xp(t[e],r,s,a,n),n,r,a)!==!1&&(n._pt=l=new Mt(n._pt,s,e,0,1,o.render,o,0,o.priority),n!==Zn))for(c=n._ptLookup[n._targets.indexOf(s)],u=o._props.length;u--;)c[o._props[u]]=l;return o},_0,b4,rl=function i(e,t,n){var r=e.vars,s=r.ease,a=r.startAt,o=r.immediateRender,l=r.lazy,c=r.onUpdate,u=r.runBackwards,f=r.yoyoEase,h=r.keyframes,d=r.autoRevert,g=e._dur,_=e._startAt,m=e._targets,p=e.parent,b=p&&p.data==="nested"?p.vars.targets:m,w=e._overwrite==="auto"&&!Y9,y=e.timeline,C,A,L,N,E,T,F,H,Y,e1,i1,K,j;if(y&&(!h||!s)&&(s="none"),e._ease=mn(s,gi.ease),e._yEase=f?w5(mn(f===!0?s:f,gi.ease)):0,f&&e._yoyo&&!e._repeat&&(f=e._yEase,e._yEase=e._ease,e._ease=f),e._from=!y&&!!r.runBackwards,!y||h&&!r.stagger){if(H=m[0]?dn(m[0]).harness:0,K=H&&r[H.prop],C=pa(r,Q9),_&&(_._zTime<0&&_.progress(1),t<0&&u&&o&&!d?_.render(-1,!0):_.revert(u&&g?Hs:$7),_._lazy=0),a){if(D0(e._startAt=ge.set(m,zt({data:"isStart",overwrite:!1,parent:p,immediateRender:!0,lazy:!_&&xt(l),startAt:null,delay:0,onUpdate:c&&function(){return Nt(e,"onUpdate")},stagger:0},a))),e._startAt._dp=0,e._startAt._sat=e,t<0&&(Ve||!o&&!d)&&e._startAt.revert(Hs),o&&g&&t<=0&&n<=0){t&&(e._zTime=t);return}}else if(u&&g&&!_){if(t&&(o=!1),L=zt({overwrite:!1,data:"isFromStart",lazy:o&&!_&&xt(l),immediateRender:o,stagger:0,parent:p},C),K&&(L[H.prop]=K),D0(e._startAt=ge.set(m,L)),e._startAt._dp=0,e._startAt._sat=e,t<0&&(Ve?e._startAt.revert(Hs):e._startAt.render(-1,!0)),e._zTime=t,!o)i(e._startAt,$2,$2);else if(!t)return}for(e._pt=e._ptCache=0,l=g&&xt(l)||l&&!g,A=0;A<m.length;A++){if(E=m[A],F=E._gsap||tl(m)[A]._gsap,e._ptLookup[A]=e1={},g4[F.id]&&b0.length&&da(),i1=b===m?A:b.indexOf(E),H&&(Y=new H).init(E,K||C,e,i1,b)!==!1&&(e._pt=N=new Mt(e._pt,E,Y.name,0,1,Y.render,Y,0,Y.priority),Y._props.forEach(function(G){e1[G]=N}),Y.priority&&(T=1)),!H||K)for(L in C)Dt[L]&&(Y=P5(L,C,e,i1,E,b))?Y.priority&&(T=1):e1[L]=N=il.call(e,E,L,"get",C[L],i1,b,0,r.stringFilter);e._op&&e._op[A]&&e.kill(E,e._op[A]),w&&e._pt&&(_0=e,ie.killTweensOf(E,e1,e.globalTime(t)),j=!e.parent,_0=0),e._pt&&l&&(g4[F.id]=1)}T&&F5(e),e._onInit&&e._onInit(e)}e._onUpdate=c,e._initted=(!e._op||e._pt)&&!j,h&&t<=0&&y.render(jt,!0,!0)},yp=function(e,t,n,r,s,a,o,l){var c=(e._pt&&e._ptCache||(e._ptCache={}))[t],u,f,h,d;if(!c)for(c=e._ptCache[t]=[],h=e._ptLookup,d=e._targets.length;d--;){if(u=h[d][t],u&&u.d&&u.d._pt)for(u=u.d._pt;u&&u.p!==t&&u.fp!==t;)u=u._next;if(!u)return b4=1,e.vars[t]="+=0",rl(e,o),b4=0,l?Er(t+" not eligible for reset"):1;c.push(u)}for(d=c.length;d--;)f=c[d],u=f._pt||f,u.s=(r||r===0)&&!s?r:u.s+(r||0)+a*u.c,u.c=n-u.s,f.e&&(f.e=ue(n)+Ke(f.e)),f.b&&(f.b=u.s+Ke(f.b))},Mp=function(e,t){var n=e[0]?dn(e[0]).harness:0,r=n&&n.aliases,s,a,o,l;if(!r)return t;s=vi({},t);for(a in r)if(a in s)for(l=r[a].split(","),o=l.length;o--;)s[l[o]]=s[a];return s},Sp=function(e,t,n,r){var s=t.ease||r||"power1.inOut",a,o;if(Qe(t))o=n[e]||(n[e]=[]),t.forEach(function(l,c){return o.push({t:c/(t.length-1)*100,v:l,e:s})});else for(a in t)o=n[a]||(n[a]=[]),a==="ease"||o.push({t:parseFloat(e),v:t[a],e:s})},cr=function(e,t,n,r,s){return oe(e)?e.call(t,n,r,s):Ie(e)&&~e.indexOf("random(")?wr(e):e},L5=el+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",D5={};yt(L5+",id,stagger,delay,duration,paused,scrollTrigger",function(i){return D5[i]=1});var ge=(function(i){K6(e,i);function e(n,r,s,a){var o;typeof r=="number"&&(s.duration=r,r=s,s=null),o=i.call(this,a?r:or(r))||this;var l=o.vars,c=l.duration,u=l.delay,f=l.immediateRender,h=l.stagger,d=l.overwrite,g=l.keyframes,_=l.defaults,m=l.scrollTrigger,p=l.yoyoEase,b=r.parent||ie,w=(Qe(n)||J6(n)?Q3(n[0]):"length"in r)?[n]:Kt(n),y,C,A,L,N,E,T,F;if(o._targets=w.length?tl(w):Er("GSAP target "+n+" not found. https://gsap.com",!kt.nullTargetWarn)||[],o._ptLookup=[],o._overwrite=d,g||h||Jr(c)||Jr(u)){if(r=o.vars,y=o.timeline=new ut({data:"nested",defaults:_||{},targets:b&&b.data==="nested"?b.vars.targets:w}),y.kill(),y.parent=y._dp=B3(o),y._start=0,h||Jr(c)||Jr(u)){if(L=w.length,T=h&&_5(h),R3(h))for(N in h)~L5.indexOf(N)&&(F||(F={}),F[N]=h[N]);for(C=0;C<L;C++)A=pa(r,D5),A.stagger=0,p&&(A.yoyoEase=p),F&&vi(A,F),E=w[C],A.duration=+cr(c,B3(o),C,E,w),A.delay=(+cr(u,B3(o),C,E,w)||0)-o._delay,!h&&L===1&&A.delay&&(o._delay=u=A.delay,o._start+=u,A.delay=0),y.to(E,A,T?T(C,E,w):0),y._ease=T2.none;y.duration()?c=u=0:o.timeline=0}else if(g){or(zt(y.vars.defaults,{ease:"none"})),y._ease=mn(g.ease||r.ease||"none");var H=0,Y,e1,i1;if(Qe(g))g.forEach(function(K){return y.to(w,K,">")}),y.duration();else{A={};for(N in g)N==="ease"||N==="easeEach"||Sp(N,g[N],A,g.easeEach);for(N in A)for(Y=A[N].sort(function(K,j){return K.t-j.t}),H=0,C=0;C<Y.length;C++)e1=Y[C],i1={ease:e1.e,duration:(e1.t-(C?Y[C-1].t:0))/100*c},i1[N]=e1.v,y.to(w,i1,H),H+=i1.duration;y.duration()<c&&y.to({},{duration:c-y.duration()})}}c||o.duration(c=y.duration())}else o.timeline=0;return d===!0&&!Y9&&(_0=B3(o),ie.killTweensOf(w),_0=0),y3(b,B3(o),s),r.reversed&&o.reverse(),r.paused&&o.paused(!0),(f||!c&&!g&&o._start===ve(b._time)&&xt(f)&&Q7(B3(o))&&b.data!=="nested")&&(o._tTime=-$2,o.render(Math.max(0,-u)||0)),m&&h5(B3(o),m),o}var t=e.prototype;return t.render=function(r,s,a){var o=this._time,l=this._tDur,c=this._dur,u=r<0,f=r>l-$2&&!u?l:r<$2?0:r,h,d,g,_,m,p,b,w,y;if(!c)tp(this,r,s,a);else if(f!==this._tTime||!r||a||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==u||this._lazy){if(h=f,w=this.timeline,this._repeat){if(_=c+this._rDelay,this._repeat<-1&&u)return this.totalTime(_*100+r,s,a);if(h=ve(f%_),f===l?(g=this._repeat,h=c):(m=ve(f/_),g=~~m,g&&g===m?(h=c,g--):h>c&&(h=c)),p=this._yoyo&&g&1,p&&(y=this._yEase,h=c-h),m=xi(this._tTime,_),h===o&&!a&&this._initted&&g===m)return this._tTime=f,this;g!==m&&(w&&this._yEase&&A5(w,p),this.vars.repeatRefresh&&!p&&!this._lock&&h!==_&&this._initted&&(this._lock=a=1,this.render(ve(_*g),!0).invalidate()._lock=0))}if(!this._initted){if(d5(this,u?r:h,a,s,f))return this._tTime=0,this;if(o!==this._time&&!(a&&this.vars.repeatRefresh&&g!==m))return this;if(c!==this._dur)return this.render(r,s,a)}if(this._tTime=f,this._time=h,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=b=(y||this._ease)(h/c),this._from&&(this.ratio=b=1-b),!o&&f&&!s&&!m&&(Nt(this,"onStart"),this._tTime!==f))return this;for(d=this._pt;d;)d.r(b,d.d),d=d._next;w&&w.render(r<0?r:w._dur*w._ease(h/this._dur),s,a)||this._startAt&&(this._zTime=r),this._onUpdate&&!s&&(u&&v4(this,r,s,a),Nt(this,"onUpdate")),this._repeat&&g!==m&&this.vars.onRepeat&&!s&&this.parent&&Nt(this,"onRepeat"),(f===this._tDur||!f)&&this._tTime===f&&(u&&!this._onUpdate&&v4(this,r,!0,!0),(r||!c)&&(f===this._tDur&&this._ts>0||!f&&this._ts<0)&&D0(this,1),!s&&!(u&&!o)&&(f||o||p)&&(Nt(this,f===l?"onComplete":"onReverseComplete",!0),this._prom&&!(f<l&&this.timeScale()>0)&&this._prom()))}return this},t.targets=function(){return this._targets},t.invalidate=function(r){return(!r||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(r),i.prototype.invalidate.call(this,r)},t.resetTo=function(r,s,a,o,l){Ar||Ut.wake(),this._ts||this.play();var c=Math.min(this._dur,(this._dp._time-this._start)*this._ts),u;return this._initted||rl(this,c),u=this._ease(c/this._dur),yp(this,r,s,a,o,u,c,l)?this.resetTo(r,s,a,o,1):(Va(this,0),this.parent||u5(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},t.kill=function(r,s){if(s===void 0&&(s="all"),!r&&(!s||s==="all"))return this._lazy=this._pt=0,this.parent?qi(this):this.scrollTrigger&&this.scrollTrigger.kill(!!Ve),this;if(this.timeline){var a=this.timeline.totalDuration();return this.timeline.killTweensOf(r,s,_0&&_0.vars.overwrite!==!0)._first||qi(this),this.parent&&a!==this.timeline.totalDuration()&&yi(this,this._dur*this.timeline._tDur/a,0,1),this}var o=this._targets,l=r?Kt(r):o,c=this._ptLookup,u=this._pt,f,h,d,g,_,m,p;if((!s||s==="all")&&Z7(o,l))return s==="all"&&(this._pt=0),qi(this);for(f=this._op=this._op||[],s!=="all"&&(Ie(s)&&(_={},yt(s,function(b){return _[b]=1}),s=_),s=Mp(o,s)),p=o.length;p--;)if(~l.indexOf(o[p])){h=c[p],s==="all"?(f[p]=s,g=h,d={}):(d=f[p]=f[p]||{},g=s);for(_ in g)m=h&&h[_],m&&((!("kill"in m.d)||m.d.kill(_)===!0)&&za(this,m,"_pt"),delete h[_]),d!=="all"&&(d[_]=1)}return this._initted&&!this._pt&&u&&qi(this),this},e.to=function(r,s){return new e(r,s,arguments[2])},e.from=function(r,s){return lr(1,arguments)},e.delayedCall=function(r,s,a,o){return new e(s,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:r,onComplete:s,onReverseComplete:s,onCompleteParams:a,onReverseCompleteParams:a,callbackScope:o})},e.fromTo=function(r,s,a){return lr(2,arguments)},e.set=function(r,s){return s.duration=0,s.repeatDelay||(s.repeat=0),new e(r,s)},e.killTweensOf=function(r,s,a){return ie.killTweensOf(r,s,a)},e})(Cr);zt(ge.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});yt("staggerTo,staggerFrom,staggerFromTo",function(i){ge[i]=function(){var e=new ut,t=y4.call(arguments,0);return t.splice(i==="staggerFromTo"?5:4,0,0),e[i].apply(e,t)}});var sl=function(e,t,n){return e[t]=n},I5=function(e,t,n){return e[t](n)},bp=function(e,t,n,r){return e[t](r.fp,n)},Ep=function(e,t,n){return e.setAttribute(t,n)},al=function(e,t){return oe(e[t])?I5:j9(e[t])&&e.setAttribute?Ep:sl},U5=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e6)/1e6,t)},Tp=function(e,t){return t.set(t.t,t.p,!!(t.s+t.c*e),t)},O5=function(e,t){var n=t._pt,r="";if(!e&&t.b)r=t.b;else if(e===1&&t.e)r=t.e;else{for(;n;)r=n.p+(n.m?n.m(n.s+n.c*e):Math.round((n.s+n.c*e)*1e4)/1e4)+r,n=n._next;r+=t.c}t.set(t.t,t.p,r,t)},ol=function(e,t){for(var n=t._pt;n;)n.r(e,n.d),n=n._next},wp=function(e,t,n,r){for(var s=this._pt,a;s;)a=s._next,s.p===r&&s.modifier(e,t,n),s=a},Ap=function(e){for(var t=this._pt,n,r;t;)r=t._next,t.p===e&&!t.op||t.op===e?za(this,t,"_pt"):t.dep||(n=1),t=r;return!n},Cp=function(e,t,n,r){r.mSet(e,t,r.m.call(r.tween,n,r.mt),r)},F5=function(e){for(var t=e._pt,n,r,s,a;t;){for(n=t._next,r=s;r&&r.pr>t.pr;)r=r._next;(t._prev=r?r._prev:a)?t._prev._next=t:s=t,(t._next=r)?r._prev=t:a=t,t=n}e._pt=s},Mt=(function(){function i(t,n,r,s,a,o,l,c,u){this.t=n,this.s=s,this.c=a,this.p=r,this.r=o||U5,this.d=l||this,this.set=c||sl,this.pr=u||0,this._next=t,t&&(t._prev=this)}var e=i.prototype;return e.modifier=function(n,r,s){this.mSet=this.mSet||this.set,this.set=Cp,this.m=n,this.mt=s,this.tween=r},i})();yt(el+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(i){return Q9[i]=1});Bt.TweenMax=Bt.TweenLite=ge;Bt.TimelineLite=Bt.TimelineMax=ut;ie=new ut({sortChildren:!1,defaults:gi,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});kt.stringFilter=T5;var _n=[],Gs={},Rp=[],fc=0,Pp=0,uo=function(e){return(Gs[e]||Rp).map(function(t){return t()})},E4=function(){var e=Date.now(),t=[];e-fc>2&&(uo("matchMediaInit"),_n.forEach(function(n){var r=n.queries,s=n.conditions,a,o,l,c;for(o in r)a=_3.matchMedia(r[o]).matches,a&&(l=1),a!==s[o]&&(s[o]=a,c=1);c&&(n.revert(),l&&t.push(n))}),uo("matchMediaRevert"),t.forEach(function(n){return n.onMatch(n,function(r){return n.add(null,r)})}),fc=e,uo("matchMedia"))},N5=(function(){function i(t,n){this.selector=n&&M4(n),this.data=[],this._r=[],this.isReverted=!1,this.id=Pp++,t&&this.add(t)}var e=i.prototype;return e.add=function(n,r,s){oe(n)&&(s=r,r=n,n=oe);var a=this,o=function(){var c=ee,u=a.selector,f;return c&&c!==a&&c.data.push(a),s&&(a.selector=M4(s)),ee=a,f=r.apply(a,arguments),oe(f)&&a._r.push(f),ee=c,a.selector=u,a.isReverted=!1,f};return a.last=o,n===oe?o(a,function(l){return a.add(null,l)}):n?a[n]=o:o},e.ignore=function(n){var r=ee;ee=null,n(this),ee=r},e.getTweens=function(){var n=[];return this.data.forEach(function(r){return r instanceof i?n.push.apply(n,r.getTweens()):r instanceof ge&&!(r.parent&&r.parent.data==="nested")&&n.push(r)}),n},e.clear=function(){this._r.length=this.data.length=0},e.kill=function(n,r){var s=this;if(n?(function(){for(var o=s.getTweens(),l=s.data.length,c;l--;)c=s.data[l],c.data==="isFlip"&&(c.revert(),c.getChildren(!0,!0,!1).forEach(function(u){return o.splice(o.indexOf(u),1)}));for(o.map(function(u){return{g:u._dur||u._delay||u._sat&&!u._sat.vars.immediateRender?u.globalTime(0):-1/0,t:u}}).sort(function(u,f){return f.g-u.g||-1/0}).forEach(function(u){return u.t.revert(n)}),l=s.data.length;l--;)c=s.data[l],c instanceof ut?c.data!=="nested"&&(c.scrollTrigger&&c.scrollTrigger.revert(),c.kill()):!(c instanceof ge)&&c.revert&&c.revert(n);s._r.forEach(function(u){return u(n,s)}),s.isReverted=!0})():this.data.forEach(function(o){return o.kill&&o.kill()}),this.clear(),r)for(var a=_n.length;a--;)_n[a].id===this.id&&_n.splice(a,1)},e.revert=function(n){this.kill(n||{})},i})(),Lp=(function(){function i(t){this.contexts=[],this.scope=t,ee&&ee.data.push(this)}var e=i.prototype;return e.add=function(n,r,s){R3(n)||(n={matches:n});var a=new N5(0,s||this.scope),o=a.conditions={},l,c,u;ee&&!a.selector&&(a.selector=ee.selector),this.contexts.push(a),r=a.add("onMatch",r),a.queries=n;for(c in n)c==="all"?u=1:(l=_3.matchMedia(n[c]),l&&(_n.indexOf(a)<0&&_n.push(a),(o[c]=l.matches)&&(u=1),l.addListener?l.addListener(E4):l.addEventListener("change",E4)));return u&&r(a,function(f){return a.add(null,f)}),this},e.revert=function(n){this.kill(n||{})},e.kill=function(n){this.contexts.forEach(function(r){return r.kill(n,!0)})},i})(),_a={registerPlugin:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];t.forEach(function(r){return S5(r)})},timeline:function(e){return new ut(e)},getTweensOf:function(e,t){return ie.getTweensOf(e,t)},getProperty:function(e,t,n,r){Ie(e)&&(e=Kt(e)[0]);var s=dn(e||{}).get,a=n?c5:l5;return n==="native"&&(n=""),e&&(t?a((Dt[t]&&Dt[t].get||s)(e,t,n,r)):function(o,l,c){return a((Dt[o]&&Dt[o].get||s)(e,o,l,c))})},quickSetter:function(e,t,n){if(e=Kt(e),e.length>1){var r=e.map(function(u){return Et.quickSetter(u,t,n)}),s=r.length;return function(u){for(var f=s;f--;)r[f](u)}}e=e[0]||{};var a=Dt[t],o=dn(e),l=o.harness&&(o.harness.aliases||{})[t]||t,c=a?function(u){var f=new a;Zn._pt=0,f.init(e,n?u+n:u,Zn,0,[e]),f.render(1,f),Zn._pt&&ol(1,Zn)}:o.set(e,l);return a?c:function(u){return c(e,l,n?u+n:u,o,1)}},quickTo:function(e,t,n){var r,s=Et.to(e,zt((r={},r[t]="+=0.1",r.paused=!0,r.stagger=0,r),n||{})),a=function(l,c,u){return s.resetTo(t,l,c,u)};return a.tween=s,a},isTweening:function(e){return ie.getTweensOf(e,!0).length>0},defaults:function(e){return e&&e.ease&&(e.ease=mn(e.ease,gi.ease)),ac(gi,e||{})},config:function(e){return ac(kt,e||{})},registerEffect:function(e){var t=e.name,n=e.effect,r=e.plugins,s=e.defaults,a=e.extendTimeline;(r||"").split(",").forEach(function(o){return o&&!Dt[o]&&!Bt[o]&&Er(t+" effect requires "+o+" plugin.")}),ao[t]=function(o,l,c){return n(Kt(o),zt(l||{},s),c)},a&&(ut.prototype[t]=function(o,l,c){return this.add(ao[t](o,R3(l)?l:(c=l)&&{},this),c)})},registerEase:function(e,t){T2[e]=mn(t)},parseEase:function(e,t){return arguments.length?mn(e,t):T2},getById:function(e){return ie.getById(e)},exportRoot:function(e,t){e===void 0&&(e={});var n=new ut(e),r,s;for(n.smoothChildTiming=xt(e.smoothChildTiming),ie.remove(n),n._dp=0,n._time=n._tTime=ie._time,r=ie._first;r;)s=r._next,(t||!(!r._dur&&r instanceof ge&&r.vars.onComplete===r._targets[0]))&&y3(n,r,r._start-r._delay),r=s;return y3(ie,n,0),n},context:function(e,t){return e?new N5(e,t):ee},matchMedia:function(e){return new Lp(e)},matchMediaRefresh:function(){return _n.forEach(function(e){var t=e.conditions,n,r;for(r in t)t[r]&&(t[r]=!1,n=1);n&&e.revert()})||E4()},addEventListener:function(e,t){var n=Gs[e]||(Gs[e]=[]);~n.indexOf(t)||n.push(t)},removeEventListener:function(e,t){var n=Gs[e],r=n&&n.indexOf(t);r>=0&&n.splice(r,1)},utils:{wrap:cp,wrapYoyo:up,distribute:_5,random:v5,snap:g5,normalize:lp,getUnit:Ke,clamp:rp,splitColor:b5,toArray:Kt,selector:M4,mapRange:y5,pipe:ap,unitize:op,interpolate:fp,shuffle:m5},install:i5,effects:ao,ticker:Ut,updateRoot:ut.updateRoot,plugins:Dt,globalTimeline:ie,core:{PropTween:Mt,globals:r5,Tween:ge,Timeline:ut,Animation:Cr,getCache:dn,_removeLinkedListItem:za,reverting:function(){return Ve},context:function(e){return e&&ee&&(ee.data.push(e),e._ctx=ee),ee},suppressOverwrites:function(e){return Y9=e}}};yt("to,from,fromTo,delayedCall,set,killTweensOf",function(i){return _a[i]=ge[i]});Ut.add(ut.updateRoot);Zn=_a.to({},{duration:0});var Dp=function(e,t){for(var n=e._pt;n&&n.p!==t&&n.op!==t&&n.fp!==t;)n=n._next;return n},Ip=function(e,t){var n=e._targets,r,s,a;for(r in t)for(s=n.length;s--;)a=e._ptLookup[s][r],a&&(a=a.d)&&(a._pt&&(a=Dp(a,r)),a&&a.modifier&&a.modifier(t[r],e,n[s],r))},fo=function(e,t){return{name:e,headless:1,rawVars:1,init:function(r,s,a){a._onInit=function(o){var l,c;if(Ie(s)&&(l={},yt(s,function(u){return l[u]=1}),s=l),t){l={};for(c in s)l[c]=t(s[c]);s=l}Ip(o,s)}}}},Et=_a.registerPlugin({name:"attr",init:function(e,t,n,r,s){var a,o,l;this.tween=n;for(a in t)l=e.getAttribute(a)||"",o=this.add(e,"setAttribute",(l||0)+"",t[a],r,s,0,0,a),o.op=a,o.b=l,this._props.push(a)},render:function(e,t){for(var n=t._pt;n;)Ve?n.set(n.t,n.p,n.b,n):n.r(e,n.d),n=n._next}},{name:"endArray",headless:1,init:function(e,t){for(var n=t.length;n--;)this.add(e,n,e[n]||0,t[n],0,0,0,0,0,1)}},fo("roundProps",S4),fo("modifiers"),fo("snap",g5))||_a;ge.version=ut.version=Et.version="3.13.0";n5=1;K9()&&Mi();T2.Power0;T2.Power1;T2.Power2;T2.Power3;T2.Power4;T2.Linear;T2.Quad;T2.Cubic;T2.Quart;T2.Quint;T2.Strong;T2.Elastic;T2.Back;T2.SteppedEase;T2.Bounce;T2.Sine;T2.Expo;T2.Circ;/*!
 * CSSPlugin 3.13.0
 * https://gsap.com
 *
 * Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var hc,g0,ai,ll,on,dc,cl,Up=function(){return typeof window<"u"},e0={},Z0=180/Math.PI,oi=Math.PI/180,Pn=Math.atan2,pc=1e8,ul=/([A-Z])/g,Op=/(left|right|width|margin|padding|x)/i,Fp=/[\s,\(]\S/,M3={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},T4=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},Np=function(e,t){return t.set(t.t,t.p,e===1?t.e:Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},kp=function(e,t){return t.set(t.t,t.p,e?Math.round((t.s+t.c*e)*1e4)/1e4+t.u:t.b,t)},Bp=function(e,t){var n=t.s+t.c*e;t.set(t.t,t.p,~~(n+(n<0?-.5:.5))+t.u,t)},k5=function(e,t){return t.set(t.t,t.p,e?t.e:t.b,t)},B5=function(e,t){return t.set(t.t,t.p,e!==1?t.b:t.e,t)},zp=function(e,t,n){return e.style[t]=n},Hp=function(e,t,n){return e.style.setProperty(t,n)},Vp=function(e,t,n){return e._gsap[t]=n},Gp=function(e,t,n){return e._gsap.scaleX=e._gsap.scaleY=n},Wp=function(e,t,n,r,s){var a=e._gsap;a.scaleX=a.scaleY=n,a.renderTransform(s,a)},Xp=function(e,t,n,r,s){var a=e._gsap;a[t]=n,a.renderTransform(s,a)},re="transform",St=re+"Origin",qp=function i(e,t){var n=this,r=this.target,s=r.style,a=r._gsap;if(e in e0&&s){if(this.tfm=this.tfm||{},e!=="transform")e=M3[e]||e,~e.indexOf(",")?e.split(",").forEach(function(o){return n.tfm[o]=z3(r,o)}):this.tfm[e]=a.x?a[e]:z3(r,e),e===St&&(this.tfm.zOrigin=a.zOrigin);else return M3.transform.split(",").forEach(function(o){return i.call(n,o,t)});if(this.props.indexOf(re)>=0)return;a.svg&&(this.svgo=r.getAttribute("data-svg-origin"),this.props.push(St,t,"")),e=re}(s||t)&&this.props.push(e,t,s[e])},z5=function(e){e.translate&&(e.removeProperty("translate"),e.removeProperty("scale"),e.removeProperty("rotate"))},$p=function(){var e=this.props,t=this.target,n=t.style,r=t._gsap,s,a;for(s=0;s<e.length;s+=3)e[s+1]?e[s+1]===2?t[e[s]](e[s+2]):t[e[s]]=e[s+2]:e[s+2]?n[e[s]]=e[s+2]:n.removeProperty(e[s].substr(0,2)==="--"?e[s]:e[s].replace(ul,"-$1").toLowerCase());if(this.tfm){for(a in this.tfm)r[a]=this.tfm[a];r.svg&&(r.renderTransform(),t.setAttribute("data-svg-origin",this.svgo||"")),s=cl(),(!s||!s.isStart)&&!n[re]&&(z5(n),r.zOrigin&&n[St]&&(n[St]+=" "+r.zOrigin+"px",r.zOrigin=0,r.renderTransform()),r.uncache=1)}},H5=function(e,t){var n={target:e,props:[],revert:$p,save:qp};return e._gsap||Et.core.getCache(e),t&&e.style&&e.nodeType&&t.split(",").forEach(function(r){return n.save(r)}),n},V5,w4=function(e,t){var n=g0.createElementNS?g0.createElementNS((t||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),e):g0.createElement(e);return n&&n.style?n:g0.createElement(e)},Zt=function i(e,t,n){var r=getComputedStyle(e);return r[t]||r.getPropertyValue(t.replace(ul,"-$1").toLowerCase())||r.getPropertyValue(t)||!n&&i(e,Si(t)||t,1)||""},mc="O,Moz,ms,Ms,Webkit".split(","),Si=function(e,t,n){var r=t||on,s=r.style,a=5;if(e in s&&!n)return e;for(e=e.charAt(0).toUpperCase()+e.substr(1);a--&&!(mc[a]+e in s););return a<0?null:(a===3?"ms":a>=0?mc[a]:"")+e},A4=function(){Up()&&window.document&&(hc=window,g0=hc.document,ai=g0.documentElement,on=w4("div")||{style:{}},w4("div"),re=Si(re),St=re+"Origin",on.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",V5=!!Si("perspective"),cl=Et.core.reverting,ll=1)},_c=function(e){var t=e.ownerSVGElement,n=w4("svg",t&&t.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),r=e.cloneNode(!0),s;r.style.display="block",n.appendChild(r),ai.appendChild(n);try{s=r.getBBox()}catch{}return n.removeChild(r),ai.removeChild(n),s},gc=function(e,t){for(var n=t.length;n--;)if(e.hasAttribute(t[n]))return e.getAttribute(t[n])},G5=function(e){var t,n;try{t=e.getBBox()}catch{t=_c(e),n=1}return t&&(t.width||t.height)||n||(t=_c(e)),t&&!t.width&&!t.x&&!t.y?{x:+gc(e,["x","cx","x1"])||0,y:+gc(e,["y","cy","y1"])||0,width:0,height:0}:t},W5=function(e){return!!(e.getCTM&&(!e.parentNode||e.ownerSVGElement)&&G5(e))},Mn=function(e,t){if(t){var n=e.style,r;t in e0&&t!==St&&(t=re),n.removeProperty?(r=t.substr(0,2),(r==="ms"||t.substr(0,6)==="webkit")&&(t="-"+t),n.removeProperty(r==="--"?t:t.replace(ul,"-$1").toLowerCase())):n.removeAttribute(t)}},v0=function(e,t,n,r,s,a){var o=new Mt(e._pt,t,n,0,1,a?B5:k5);return e._pt=o,o.b=r,o.e=s,e._props.push(n),o},vc={deg:1,rad:1,turn:1},Yp={grid:1,flex:1},I0=function i(e,t,n,r){var s=parseFloat(n)||0,a=(n+"").trim().substr((s+"").length)||"px",o=on.style,l=Op.test(t),c=e.tagName.toLowerCase()==="svg",u=(c?"client":"offset")+(l?"Width":"Height"),f=100,h=r==="px",d=r==="%",g,_,m,p;if(r===a||!s||vc[r]||vc[a])return s;if(a!=="px"&&!h&&(s=i(e,t,n,"px")),p=e.getCTM&&W5(e),(d||a==="%")&&(e0[t]||~t.indexOf("adius")))return g=p?e.getBBox()[l?"width":"height"]:e[u],ue(d?s/g*f:s/100*g);if(o[l?"width":"height"]=f+(h?a:r),_=r!=="rem"&&~t.indexOf("adius")||r==="em"&&e.appendChild&&!c?e:e.parentNode,p&&(_=(e.ownerSVGElement||{}).parentNode),(!_||_===g0||!_.appendChild)&&(_=g0.body),m=_._gsap,m&&d&&m.width&&l&&m.time===Ut.time&&!m.uncache)return ue(s/m.width*f);if(d&&(t==="height"||t==="width")){var b=e.style[t];e.style[t]=f+r,g=e[u],b?e.style[t]=b:Mn(e,t)}else(d||a==="%")&&!Yp[Zt(_,"display")]&&(o.position=Zt(e,"position")),_===e&&(o.position="static"),_.appendChild(on),g=on[u],_.removeChild(on),o.position="absolute";return l&&d&&(m=dn(_),m.time=Ut.time,m.width=_[u]),ue(h?g*s/f:g&&s?f/g*s:0)},z3=function(e,t,n,r){var s;return ll||A4(),t in M3&&t!=="transform"&&(t=M3[t],~t.indexOf(",")&&(t=t.split(",")[0])),e0[t]&&t!=="transform"?(s=Pr(e,r),s=t!=="transformOrigin"?s[t]:s.svg?s.origin:va(Zt(e,St))+" "+s.zOrigin+"px"):(s=e.style[t],(!s||s==="auto"||r||~(s+"").indexOf("calc("))&&(s=ga[t]&&ga[t](e,t,n)||Zt(e,t)||a5(e,t)||(t==="opacity"?1:0))),n&&!~(s+"").trim().indexOf(" ")?I0(e,t,s,n)+n:s},jp=function(e,t,n,r){if(!n||n==="none"){var s=Si(t,e,1),a=s&&Zt(e,s,1);a&&a!==n?(t=s,n=a):t==="borderColor"&&(n=Zt(e,"borderTopColor"))}var o=new Mt(this._pt,e.style,t,0,1,O5),l=0,c=0,u,f,h,d,g,_,m,p,b,w,y,C;if(o.b=n,o.e=r,n+="",r+="",r.substring(0,6)==="var(--"&&(r=Zt(e,r.substring(4,r.indexOf(")")))),r==="auto"&&(_=e.style[t],e.style[t]=r,r=Zt(e,t)||r,_?e.style[t]=_:Mn(e,t)),u=[n,r],T5(u),n=u[0],r=u[1],h=n.match(Kn)||[],C=r.match(Kn)||[],C.length){for(;f=Kn.exec(r);)m=f[0],b=r.substring(l,f.index),g?g=(g+1)%5:(b.substr(-5)==="rgba("||b.substr(-5)==="hsla(")&&(g=1),m!==(_=h[c++]||"")&&(d=parseFloat(_)||0,y=_.substr((d+"").length),m.charAt(1)==="="&&(m=si(d,m)+y),p=parseFloat(m),w=m.substr((p+"").length),l=Kn.lastIndex-w.length,w||(w=w||kt.units[t]||y,l===r.length&&(r+=w,o.e+=w)),y!==w&&(d=I0(e,t,_,w)||0),o._pt={_next:o._pt,p:b||c===1?b:",",s:d,c:p-d,m:g&&g<4||t==="zIndex"?Math.round:0});o.c=l<r.length?r.substring(l,r.length):""}else o.r=t==="display"&&r==="none"?B5:k5;return e5.test(r)&&(o.e=0),this._pt=o,o},xc={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},Kp=function(e){var t=e.split(" "),n=t[0],r=t[1]||"50%";return(n==="top"||n==="bottom"||r==="left"||r==="right")&&(e=n,n=r,r=e),t[0]=xc[n]||n,t[1]=xc[r]||r,t.join(" ")},Zp=function(e,t){if(t.tween&&t.tween._time===t.tween._dur){var n=t.t,r=n.style,s=t.u,a=n._gsap,o,l,c;if(s==="all"||s===!0)r.cssText="",l=1;else for(s=s.split(","),c=s.length;--c>-1;)o=s[c],e0[o]&&(l=1,o=o==="transformOrigin"?St:re),Mn(n,o);l&&(Mn(n,re),a&&(a.svg&&n.removeAttribute("transform"),r.scale=r.rotate=r.translate="none",Pr(n,1),a.uncache=1,z5(r)))}},ga={clearProps:function(e,t,n,r,s){if(s.data!=="isFromStart"){var a=e._pt=new Mt(e._pt,t,n,0,0,Zp);return a.u=r,a.pr=-10,a.tween=s,e._props.push(n),1}}},Rr=[1,0,0,1,0,0],X5={},q5=function(e){return e==="matrix(1, 0, 0, 1, 0, 0)"||e==="none"||!e},yc=function(e){var t=Zt(e,re);return q5(t)?Rr:t.substr(7).match(Q6).map(ue)},fl=function(e,t){var n=e._gsap||dn(e),r=e.style,s=yc(e),a,o,l,c;return n.svg&&e.getAttribute("transform")?(l=e.transform.baseVal.consolidate().matrix,s=[l.a,l.b,l.c,l.d,l.e,l.f],s.join(",")==="1,0,0,1,0,0"?Rr:s):(s===Rr&&!e.offsetParent&&e!==ai&&!n.svg&&(l=r.display,r.display="block",a=e.parentNode,(!a||!e.offsetParent&&!e.getBoundingClientRect().width)&&(c=1,o=e.nextElementSibling,ai.appendChild(e)),s=yc(e),l?r.display=l:Mn(e,"display"),c&&(o?a.insertBefore(e,o):a?a.appendChild(e):ai.removeChild(e))),t&&s.length>6?[s[0],s[1],s[4],s[5],s[12],s[13]]:s)},C4=function(e,t,n,r,s,a){var o=e._gsap,l=s||fl(e,!0),c=o.xOrigin||0,u=o.yOrigin||0,f=o.xOffset||0,h=o.yOffset||0,d=l[0],g=l[1],_=l[2],m=l[3],p=l[4],b=l[5],w=t.split(" "),y=parseFloat(w[0])||0,C=parseFloat(w[1])||0,A,L,N,E;n?l!==Rr&&(L=d*m-g*_)&&(N=y*(m/L)+C*(-_/L)+(_*b-m*p)/L,E=y*(-g/L)+C*(d/L)-(d*b-g*p)/L,y=N,C=E):(A=G5(e),y=A.x+(~w[0].indexOf("%")?y/100*A.width:y),C=A.y+(~(w[1]||w[0]).indexOf("%")?C/100*A.height:C)),r||r!==!1&&o.smooth?(p=y-c,b=C-u,o.xOffset=f+(p*d+b*_)-p,o.yOffset=h+(p*g+b*m)-b):o.xOffset=o.yOffset=0,o.xOrigin=y,o.yOrigin=C,o.smooth=!!r,o.origin=t,o.originIsAbsolute=!!n,e.style[St]="0px 0px",a&&(v0(a,o,"xOrigin",c,y),v0(a,o,"yOrigin",u,C),v0(a,o,"xOffset",f,o.xOffset),v0(a,o,"yOffset",h,o.yOffset)),e.setAttribute("data-svg-origin",y+" "+C)},Pr=function(e,t){var n=e._gsap||new R5(e);if("x"in n&&!t&&!n.uncache)return n;var r=e.style,s=n.scaleX<0,a="px",o="deg",l=getComputedStyle(e),c=Zt(e,St)||"0",u,f,h,d,g,_,m,p,b,w,y,C,A,L,N,E,T,F,H,Y,e1,i1,K,j,G,m1,k,E1,z1,c2,j1,r1;return u=f=h=_=m=p=b=w=y=0,d=g=1,n.svg=!!(e.getCTM&&W5(e)),l.translate&&((l.translate!=="none"||l.scale!=="none"||l.rotate!=="none")&&(r[re]=(l.translate!=="none"?"translate3d("+(l.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+(l.rotate!=="none"?"rotate("+l.rotate+") ":"")+(l.scale!=="none"?"scale("+l.scale.split(" ").join(",")+") ":"")+(l[re]!=="none"?l[re]:"")),r.scale=r.rotate=r.translate="none"),L=fl(e,n.svg),n.svg&&(n.uncache?(G=e.getBBox(),c=n.xOrigin-G.x+"px "+(n.yOrigin-G.y)+"px",j=""):j=!t&&e.getAttribute("data-svg-origin"),C4(e,j||c,!!j||n.originIsAbsolute,n.smooth!==!1,L)),C=n.xOrigin||0,A=n.yOrigin||0,L!==Rr&&(F=L[0],H=L[1],Y=L[2],e1=L[3],u=i1=L[4],f=K=L[5],L.length===6?(d=Math.sqrt(F*F+H*H),g=Math.sqrt(e1*e1+Y*Y),_=F||H?Pn(H,F)*Z0:0,b=Y||e1?Pn(Y,e1)*Z0+_:0,b&&(g*=Math.abs(Math.cos(b*oi))),n.svg&&(u-=C-(C*F+A*Y),f-=A-(C*H+A*e1))):(r1=L[6],c2=L[7],k=L[8],E1=L[9],z1=L[10],j1=L[11],u=L[12],f=L[13],h=L[14],N=Pn(r1,z1),m=N*Z0,N&&(E=Math.cos(-N),T=Math.sin(-N),j=i1*E+k*T,G=K*E+E1*T,m1=r1*E+z1*T,k=i1*-T+k*E,E1=K*-T+E1*E,z1=r1*-T+z1*E,j1=c2*-T+j1*E,i1=j,K=G,r1=m1),N=Pn(-Y,z1),p=N*Z0,N&&(E=Math.cos(-N),T=Math.sin(-N),j=F*E-k*T,G=H*E-E1*T,m1=Y*E-z1*T,j1=e1*T+j1*E,F=j,H=G,Y=m1),N=Pn(H,F),_=N*Z0,N&&(E=Math.cos(N),T=Math.sin(N),j=F*E+H*T,G=i1*E+K*T,H=H*E-F*T,K=K*E-i1*T,F=j,i1=G),m&&Math.abs(m)+Math.abs(_)>359.9&&(m=_=0,p=180-p),d=ue(Math.sqrt(F*F+H*H+Y*Y)),g=ue(Math.sqrt(K*K+r1*r1)),N=Pn(i1,K),b=Math.abs(N)>2e-4?N*Z0:0,y=j1?1/(j1<0?-j1:j1):0),n.svg&&(j=e.getAttribute("transform"),n.forceCSS=e.setAttribute("transform","")||!q5(Zt(e,re)),j&&e.setAttribute("transform",j))),Math.abs(b)>90&&Math.abs(b)<270&&(s?(d*=-1,b+=_<=0?180:-180,_+=_<=0?180:-180):(g*=-1,b+=b<=0?180:-180)),t=t||n.uncache,n.x=u-((n.xPercent=u&&(!t&&n.xPercent||(Math.round(e.offsetWidth/2)===Math.round(-u)?-50:0)))?e.offsetWidth*n.xPercent/100:0)+a,n.y=f-((n.yPercent=f&&(!t&&n.yPercent||(Math.round(e.offsetHeight/2)===Math.round(-f)?-50:0)))?e.offsetHeight*n.yPercent/100:0)+a,n.z=h+a,n.scaleX=ue(d),n.scaleY=ue(g),n.rotation=ue(_)+o,n.rotationX=ue(m)+o,n.rotationY=ue(p)+o,n.skewX=b+o,n.skewY=w+o,n.transformPerspective=y+a,(n.zOrigin=parseFloat(c.split(" ")[2])||!t&&n.zOrigin||0)&&(r[St]=va(c)),n.xOffset=n.yOffset=0,n.force3D=kt.force3D,n.renderTransform=n.svg?Qp:V5?$5:Jp,n.uncache=0,n},va=function(e){return(e=e.split(" "))[0]+" "+e[1]},ho=function(e,t,n){var r=Ke(t);return ue(parseFloat(t)+parseFloat(I0(e,"x",n+"px",r)))+r},Jp=function(e,t){t.z="0px",t.rotationY=t.rotationX="0deg",t.force3D=0,$5(e,t)},V0="0deg",Ni="0px",G0=") ",$5=function(e,t){var n=t||this,r=n.xPercent,s=n.yPercent,a=n.x,o=n.y,l=n.z,c=n.rotation,u=n.rotationY,f=n.rotationX,h=n.skewX,d=n.skewY,g=n.scaleX,_=n.scaleY,m=n.transformPerspective,p=n.force3D,b=n.target,w=n.zOrigin,y="",C=p==="auto"&&e&&e!==1||p===!0;if(w&&(f!==V0||u!==V0)){var A=parseFloat(u)*oi,L=Math.sin(A),N=Math.cos(A),E;A=parseFloat(f)*oi,E=Math.cos(A),a=ho(b,a,L*E*-w),o=ho(b,o,-Math.sin(A)*-w),l=ho(b,l,N*E*-w+w)}m!==Ni&&(y+="perspective("+m+G0),(r||s)&&(y+="translate("+r+"%, "+s+"%) "),(C||a!==Ni||o!==Ni||l!==Ni)&&(y+=l!==Ni||C?"translate3d("+a+", "+o+", "+l+") ":"translate("+a+", "+o+G0),c!==V0&&(y+="rotate("+c+G0),u!==V0&&(y+="rotateY("+u+G0),f!==V0&&(y+="rotateX("+f+G0),(h!==V0||d!==V0)&&(y+="skew("+h+", "+d+G0),(g!==1||_!==1)&&(y+="scale("+g+", "+_+G0),b.style[re]=y||"translate(0, 0)"},Qp=function(e,t){var n=t||this,r=n.xPercent,s=n.yPercent,a=n.x,o=n.y,l=n.rotation,c=n.skewX,u=n.skewY,f=n.scaleX,h=n.scaleY,d=n.target,g=n.xOrigin,_=n.yOrigin,m=n.xOffset,p=n.yOffset,b=n.forceCSS,w=parseFloat(a),y=parseFloat(o),C,A,L,N,E;l=parseFloat(l),c=parseFloat(c),u=parseFloat(u),u&&(u=parseFloat(u),c+=u,l+=u),l||c?(l*=oi,c*=oi,C=Math.cos(l)*f,A=Math.sin(l)*f,L=Math.sin(l-c)*-h,N=Math.cos(l-c)*h,c&&(u*=oi,E=Math.tan(c-u),E=Math.sqrt(1+E*E),L*=E,N*=E,u&&(E=Math.tan(u),E=Math.sqrt(1+E*E),C*=E,A*=E)),C=ue(C),A=ue(A),L=ue(L),N=ue(N)):(C=f,N=h,A=L=0),(w&&!~(a+"").indexOf("px")||y&&!~(o+"").indexOf("px"))&&(w=I0(d,"x",a,"px"),y=I0(d,"y",o,"px")),(g||_||m||p)&&(w=ue(w+g-(g*C+_*L)+m),y=ue(y+_-(g*A+_*N)+p)),(r||s)&&(E=d.getBBox(),w=ue(w+r/100*E.width),y=ue(y+s/100*E.height)),E="matrix("+C+","+A+","+L+","+N+","+w+","+y+")",d.setAttribute("transform",E),b&&(d.style[re]=E)},em=function(e,t,n,r,s){var a=360,o=Ie(s),l=parseFloat(s)*(o&&~s.indexOf("rad")?Z0:1),c=l-r,u=r+c+"deg",f,h;return o&&(f=s.split("_")[1],f==="short"&&(c%=a,c!==c%(a/2)&&(c+=c<0?a:-a)),f==="cw"&&c<0?c=(c+a*pc)%a-~~(c/a)*a:f==="ccw"&&c>0&&(c=(c-a*pc)%a-~~(c/a)*a)),e._pt=h=new Mt(e._pt,t,n,r,c,Np),h.e=u,h.u="deg",e._props.push(n),h},Mc=function(e,t){for(var n in t)e[n]=t[n];return e},tm=function(e,t,n){var r=Mc({},n._gsap),s="perspective,force3D,transformOrigin,svgOrigin",a=n.style,o,l,c,u,f,h,d,g;r.svg?(c=n.getAttribute("transform"),n.setAttribute("transform",""),a[re]=t,o=Pr(n,1),Mn(n,re),n.setAttribute("transform",c)):(c=getComputedStyle(n)[re],a[re]=t,o=Pr(n,1),a[re]=c);for(l in e0)c=r[l],u=o[l],c!==u&&s.indexOf(l)<0&&(d=Ke(c),g=Ke(u),f=d!==g?I0(n,l,c,g):parseFloat(c),h=parseFloat(u),e._pt=new Mt(e._pt,o,l,f,h-f,T4),e._pt.u=g||0,e._props.push(l));Mc(o,r)};yt("padding,margin,Width,Radius",function(i,e){var t="Top",n="Right",r="Bottom",s="Left",a=(e<3?[t,n,r,s]:[t+s,t+n,r+n,r+s]).map(function(o){return e<2?i+o:"border"+o+i});ga[e>1?"border"+i:i]=function(o,l,c,u,f){var h,d;if(arguments.length<4)return h=a.map(function(g){return z3(o,g,c)}),d=h.join(" "),d.split(h[0]).length===5?h[0]:d;h=(u+"").split(" "),d={},a.forEach(function(g,_){return d[g]=h[_]=h[_]||h[(_-1)/2|0]}),o.init(l,d,f)}});var Y5={name:"css",register:A4,targetTest:function(e){return e.style&&e.nodeType},init:function(e,t,n,r,s){var a=this._props,o=e.style,l=n.vars.startAt,c,u,f,h,d,g,_,m,p,b,w,y,C,A,L,N;ll||A4(),this.styles=this.styles||H5(e),N=this.styles.props,this.tween=n;for(_ in t)if(_!=="autoRound"&&(u=t[_],!(Dt[_]&&P5(_,t,n,r,e,s)))){if(d=typeof u,g=ga[_],d==="function"&&(u=u.call(n,r,e,s),d=typeof u),d==="string"&&~u.indexOf("random(")&&(u=wr(u)),g)g(this,e,_,u,n)&&(L=1);else if(_.substr(0,2)==="--")c=(getComputedStyle(e).getPropertyValue(_)+"").trim(),u+="",E0.lastIndex=0,E0.test(c)||(m=Ke(c),p=Ke(u)),p?m!==p&&(c=I0(e,_,c,p)+p):m&&(u+=m),this.add(o,"setProperty",c,u,r,s,0,0,_),a.push(_),N.push(_,0,o[_]);else if(d!=="undefined"){if(l&&_ in l?(c=typeof l[_]=="function"?l[_].call(n,r,e,s):l[_],Ie(c)&&~c.indexOf("random(")&&(c=wr(c)),Ke(c+"")||c==="auto"||(c+=kt.units[_]||Ke(z3(e,_))||""),(c+"").charAt(1)==="="&&(c=z3(e,_))):c=z3(e,_),h=parseFloat(c),b=d==="string"&&u.charAt(1)==="="&&u.substr(0,2),b&&(u=u.substr(2)),f=parseFloat(u),_ in M3&&(_==="autoAlpha"&&(h===1&&z3(e,"visibility")==="hidden"&&f&&(h=0),N.push("visibility",0,o.visibility),v0(this,o,"visibility",h?"inherit":"hidden",f?"inherit":"hidden",!f)),_!=="scale"&&_!=="transform"&&(_=M3[_],~_.indexOf(",")&&(_=_.split(",")[0]))),w=_ in e0,w){if(this.styles.save(_),d==="string"&&u.substring(0,6)==="var(--"&&(u=Zt(e,u.substring(4,u.indexOf(")"))),f=parseFloat(u)),y||(C=e._gsap,C.renderTransform&&!t.parseTransform||Pr(e,t.parseTransform),A=t.smoothOrigin!==!1&&C.smooth,y=this._pt=new Mt(this._pt,o,re,0,1,C.renderTransform,C,0,-1),y.dep=1),_==="scale")this._pt=new Mt(this._pt,C,"scaleY",C.scaleY,(b?si(C.scaleY,b+f):f)-C.scaleY||0,T4),this._pt.u=0,a.push("scaleY",_),_+="X";else if(_==="transformOrigin"){N.push(St,0,o[St]),u=Kp(u),C.svg?C4(e,u,0,A,0,this):(p=parseFloat(u.split(" ")[2])||0,p!==C.zOrigin&&v0(this,C,"zOrigin",C.zOrigin,p),v0(this,o,_,va(c),va(u)));continue}else if(_==="svgOrigin"){C4(e,u,1,A,0,this);continue}else if(_ in X5){em(this,C,_,h,b?si(h,b+u):u);continue}else if(_==="smoothOrigin"){v0(this,C,"smooth",C.smooth,u);continue}else if(_==="force3D"){C[_]=u;continue}else if(_==="transform"){tm(this,u,e);continue}}else _ in o||(_=Si(_)||_);if(w||(f||f===0)&&(h||h===0)&&!Fp.test(u)&&_ in o)m=(c+"").substr((h+"").length),f||(f=0),p=Ke(u)||(_ in kt.units?kt.units[_]:m),m!==p&&(h=I0(e,_,c,p)),this._pt=new Mt(this._pt,w?C:o,_,h,(b?si(h,b+f):f)-h,!w&&(p==="px"||_==="zIndex")&&t.autoRound!==!1?Bp:T4),this._pt.u=p||0,m!==p&&p!=="%"&&(this._pt.b=c,this._pt.r=kp);else if(_ in o)jp.call(this,e,_,c,b?b+u:u);else if(_ in e)this.add(e,_,c||e[_],b?b+u:u,r,s);else if(_!=="parseTransform"){J9(_,u);continue}w||(_ in o?N.push(_,0,o[_]):typeof e[_]=="function"?N.push(_,2,e[_]()):N.push(_,1,c||e[_])),a.push(_)}}L&&F5(this)},render:function(e,t){if(t.tween._time||!cl())for(var n=t._pt;n;)n.r(e,n.d),n=n._next;else t.styles.revert()},get:z3,aliases:M3,getSetter:function(e,t,n){var r=M3[t];return r&&r.indexOf(",")<0&&(t=r),t in e0&&t!==St&&(e._gsap.x||z3(e,"x"))?n&&dc===n?t==="scale"?Gp:Vp:(dc=n||{})&&(t==="scale"?Wp:Xp):e.style&&!j9(e.style[t])?zp:~t.indexOf("-")?Hp:al(e,t)},core:{_removeProperty:Mn,_getMatrix:fl}};Et.utils.checkPrefix=Si;Et.core.getStyleSaver=H5;(function(i,e,t,n){var r=yt(i+","+e+","+t,function(s){e0[s]=1});yt(e,function(s){kt.units[s]="deg",X5[s]=1}),M3[r[13]]=i+","+e,yt(n,function(s){var a=s.split(":");M3[a[1]]=r[a[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");yt("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(i){kt.units[i]="px"});Et.registerPlugin(Y5);var Q2=Et.registerPlugin(Y5)||Et;Q2.core.Tween;function nm(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}function im(i,e,t){return e&&nm(i.prototype,e),i}/*!
 * Observer 3.13.0
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var ze,Ws,Ot,x0,y0,li,j5,J0,ur,K5,X3,s3,Z5,J5=function(){return ze||typeof window<"u"&&(ze=window.gsap)&&ze.registerPlugin&&ze},Q5=1,Jn=[],S2=[],A3=[],fr=Date.now,R4=function(e,t){return t},rm=function(){var e=ur.core,t=e.bridge||{},n=e._scrollers,r=e._proxies;n.push.apply(n,S2),r.push.apply(r,A3),S2=n,A3=r,R4=function(a,o){return t[a](o)}},T0=function(e,t){return~A3.indexOf(e)&&A3[A3.indexOf(e)+1][t]},hr=function(e){return!!~K5.indexOf(e)},it=function(e,t,n,r,s){return e.addEventListener(t,n,{passive:r!==!1,capture:!!s})},tt=function(e,t,n,r){return e.removeEventListener(t,n,!!r)},Qr="scrollLeft",es="scrollTop",P4=function(){return X3&&X3.isPressed||S2.cache++},xa=function(e,t){var n=function r(s){if(s||s===0){Q5&&(Ot.history.scrollRestoration="manual");var a=X3&&X3.isPressed;s=r.v=Math.round(s)||(X3&&X3.iOS?1:0),e(s),r.cacheID=S2.cache,a&&R4("ss",s)}else(t||S2.cache!==r.cacheID||R4("ref"))&&(r.cacheID=S2.cache,r.v=e());return r.v+r.offset};return n.offset=0,e&&n},ft={s:Qr,p:"left",p2:"Left",os:"right",os2:"Right",d:"width",d2:"Width",a:"x",sc:xa(function(i){return arguments.length?Ot.scrollTo(i,be.sc()):Ot.pageXOffset||x0[Qr]||y0[Qr]||li[Qr]||0})},be={s:es,p:"top",p2:"Top",os:"bottom",os2:"Bottom",d:"height",d2:"Height",a:"y",op:ft,sc:xa(function(i){return arguments.length?Ot.scrollTo(ft.sc(),i):Ot.pageYOffset||x0[es]||y0[es]||li[es]||0})},vt=function(e,t){return(t&&t._ctx&&t._ctx.selector||ze.utils.toArray)(e)[0]||(typeof e=="string"&&ze.config().nullTargetWarn!==!1?console.warn("Element not found:",e):null)},sm=function(e,t){for(var n=t.length;n--;)if(t[n]===e||t[n].contains(e))return!0;return!1},U0=function(e,t){var n=t.s,r=t.sc;hr(e)&&(e=x0.scrollingElement||y0);var s=S2.indexOf(e),a=r===be.sc?1:2;!~s&&(s=S2.push(e)-1),S2[s+a]||it(e,"scroll",P4);var o=S2[s+a],l=o||(S2[s+a]=xa(T0(e,n),!0)||(hr(e)?r:xa(function(c){return arguments.length?e[n]=c:e[n]})));return l.target=e,o||(l.smooth=ze.getProperty(e,"scrollBehavior")==="smooth"),l},L4=function(e,t,n){var r=e,s=e,a=fr(),o=a,l=t||50,c=Math.max(500,l*3),u=function(g,_){var m=fr();_||m-a>l?(s=r,r=g,o=a,a=m):n?r+=g:r=s+(g-s)/(m-o)*(a-o)},f=function(){s=r=n?0:r,o=a=0},h=function(g){var _=o,m=s,p=fr();return(g||g===0)&&g!==r&&u(g),a===o||p-o>c?0:(r+(n?m:-m))/((n?p:a)-_)*1e3};return{update:u,reset:f,getVelocity:h}},ki=function(e,t){return t&&!e._gsapAllow&&e.preventDefault(),e.changedTouches?e.changedTouches[0]:e},Sc=function(e){var t=Math.max.apply(Math,e),n=Math.min.apply(Math,e);return Math.abs(t)>=Math.abs(n)?t:n},ef=function(){ur=ze.core.globals().ScrollTrigger,ur&&ur.core&&rm()},tf=function(e){return ze=e||J5(),!Ws&&ze&&typeof document<"u"&&document.body&&(Ot=window,x0=document,y0=x0.documentElement,li=x0.body,K5=[Ot,x0,y0,li],ze.utils.clamp,Z5=ze.core.context||function(){},J0="onpointerenter"in li?"pointer":"mouse",j5=de.isTouch=Ot.matchMedia&&Ot.matchMedia("(hover: none), (pointer: coarse)").matches?1:"ontouchstart"in Ot||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0?2:0,s3=de.eventTypes=("ontouchstart"in y0?"touchstart,touchmove,touchcancel,touchend":"onpointerdown"in y0?"pointerdown,pointermove,pointercancel,pointerup":"mousedown,mousemove,mouseup,mouseup").split(","),setTimeout(function(){return Q5=0},500),ef(),Ws=1),Ws};ft.op=be;S2.cache=0;var de=(function(){function i(t){this.init(t)}var e=i.prototype;return e.init=function(n){Ws||tf(ze)||console.warn("Please gsap.registerPlugin(Observer)"),ur||ef();var r=n.tolerance,s=n.dragMinimum,a=n.type,o=n.target,l=n.lineHeight,c=n.debounce,u=n.preventDefault,f=n.onStop,h=n.onStopDelay,d=n.ignore,g=n.wheelSpeed,_=n.event,m=n.onDragStart,p=n.onDragEnd,b=n.onDrag,w=n.onPress,y=n.onRelease,C=n.onRight,A=n.onLeft,L=n.onUp,N=n.onDown,E=n.onChangeX,T=n.onChangeY,F=n.onChange,H=n.onToggleX,Y=n.onToggleY,e1=n.onHover,i1=n.onHoverEnd,K=n.onMove,j=n.ignoreCheck,G=n.isNormalizer,m1=n.onGestureStart,k=n.onGestureEnd,E1=n.onWheel,z1=n.onEnable,c2=n.onDisable,j1=n.onClick,r1=n.scrollSpeed,x1=n.capture,d1=n.allowClicks,L1=n.lockAxis,D1=n.onLockAxis;this.target=o=vt(o)||y0,this.vars=n,d&&(d=ze.utils.toArray(d)),r=r||1e-9,s=s||0,g=g||1,r1=r1||1,a=a||"wheel,touch,pointer",c=c!==!1,l||(l=parseFloat(Ot.getComputedStyle(li).lineHeight)||22);var U1,d2,U,M,$,J,t1,D=this,f1=0,X=0,u1=n.passive||!u&&n.passive!==!1,o1=U0(o,ft),w1=U0(o,be),P=o1(),S=w1(),z=~a.indexOf("touch")&&!~a.indexOf("pointer")&&s3[0]==="pointerdown",Q=hr(o),s1=o.ownerDocument||x0,Z=[0,0,0],A1=[0,0,0],_1=0,I1=function(){return _1=fr()},b1=function($1,f2){return(D.event=$1)&&d&&sm($1.target,d)||f2&&z&&$1.pointerType!=="touch"||j&&j($1,f2)},y1=function(){D._vx.reset(),D._vy.reset(),d2.pause(),f&&f(D)},R1=function(){var $1=D.deltaX=Sc(Z),f2=D.deltaY=Sc(A1),F1=Math.abs($1)>=r,e2=Math.abs(f2)>=r;F&&(F1||e2)&&F(D,$1,f2,Z,A1),F1&&(C&&D.deltaX>0&&C(D),A&&D.deltaX<0&&A(D),E&&E(D),H&&D.deltaX<0!=f1<0&&H(D),f1=D.deltaX,Z[0]=Z[1]=Z[2]=0),e2&&(N&&D.deltaY>0&&N(D),L&&D.deltaY<0&&L(D),T&&T(D),Y&&D.deltaY<0!=X<0&&Y(D),X=D.deltaY,A1[0]=A1[1]=A1[2]=0),(M||U)&&(K&&K(D),U&&(m&&U===1&&m(D),b&&b(D),U=0),M=!1),J&&!(J=!1)&&D1&&D1(D),$&&(E1(D),$=!1),U1=0},V1=function($1,f2,F1){Z[F1]+=$1,A1[F1]+=f2,D._vx.update($1),D._vy.update(f2),c?U1||(U1=requestAnimationFrame(R1)):R1()},N1=function($1,f2){L1&&!t1&&(D.axis=t1=Math.abs($1)>Math.abs(f2)?"x":"y",J=!0),t1!=="y"&&(Z[2]+=$1,D._vx.update($1,!0)),t1!=="x"&&(A1[2]+=f2,D._vy.update(f2,!0)),c?U1||(U1=requestAnimationFrame(R1)):R1()},C1=function($1){if(!b1($1,1)){$1=ki($1,u);var f2=$1.clientX,F1=$1.clientY,e2=f2-D.x,Z1=F1-D.y,s2=D.isDragging;D.x=f2,D.y=F1,(s2||(e2||Z1)&&(Math.abs(D.startX-f2)>=s||Math.abs(D.startY-F1)>=s))&&(U=s2?2:1,s2||(D.isDragging=!0),N1(e2,Z1))}},t2=D.onPress=function(k1){b1(k1,1)||k1&&k1.button||(D.axis=t1=null,d2.pause(),D.isPressed=!0,k1=ki(k1),f1=X=0,D.startX=D.x=k1.clientX,D.startY=D.y=k1.clientY,D._vx.reset(),D._vy.reset(),it(G?o:s1,s3[1],C1,u1,!0),D.deltaX=D.deltaY=0,w&&w(D))},B=D.onRelease=function(k1){if(!b1(k1,1)){tt(G?o:s1,s3[1],C1,!0);var $1=!isNaN(D.y-D.startY),f2=D.isDragging,F1=f2&&(Math.abs(D.x-D.startX)>3||Math.abs(D.y-D.startY)>3),e2=ki(k1);!F1&&$1&&(D._vx.reset(),D._vy.reset(),u&&d1&&ze.delayedCall(.08,function(){if(fr()-_1>300&&!k1.defaultPrevented){if(k1.target.click)k1.target.click();else if(s1.createEvent){var Z1=s1.createEvent("MouseEvents");Z1.initMouseEvent("click",!0,!0,Ot,1,e2.screenX,e2.screenY,e2.clientX,e2.clientY,!1,!1,!1,!1,0,null),k1.target.dispatchEvent(Z1)}}})),D.isDragging=D.isGesturing=D.isPressed=!1,f&&f2&&!G&&d2.restart(!0),U&&R1(),p&&f2&&p(D),y&&y(D,F1)}},M1=function($1){return $1.touches&&$1.touches.length>1&&(D.isGesturing=!0)&&m1($1,D.isDragging)},S1=function(){return(D.isGesturing=!1)||k(D)},O1=function($1){if(!b1($1)){var f2=o1(),F1=w1();V1((f2-P)*r1,(F1-S)*r1,1),P=f2,S=F1,f&&d2.restart(!0)}},p1=function($1){if(!b1($1)){$1=ki($1,u),E1&&($=!0);var f2=($1.deltaMode===1?l:$1.deltaMode===2?Ot.innerHeight:1)*g;V1($1.deltaX*f2,$1.deltaY*f2,0),f&&!G&&d2.restart(!0)}},h1=function($1){if(!b1($1)){var f2=$1.clientX,F1=$1.clientY,e2=f2-D.x,Z1=F1-D.y;D.x=f2,D.y=F1,M=!0,f&&d2.restart(!0),(e2||Z1)&&N1(e2,Z1)}},G1=function($1){D.event=$1,e1(D)},W1=function($1){D.event=$1,i1(D)},b2=function($1){return b1($1)||ki($1,u)&&j1(D)};d2=D._dc=ze.delayedCall(h||.25,y1).pause(),D.deltaX=D.deltaY=0,D._vx=L4(0,50,!0),D._vy=L4(0,50,!0),D.scrollX=o1,D.scrollY=w1,D.isDragging=D.isGesturing=D.isPressed=!1,Z5(this),D.enable=function(k1){return D.isEnabled||(it(Q?s1:o,"scroll",P4),a.indexOf("scroll")>=0&&it(Q?s1:o,"scroll",O1,u1,x1),a.indexOf("wheel")>=0&&it(o,"wheel",p1,u1,x1),(a.indexOf("touch")>=0&&j5||a.indexOf("pointer")>=0)&&(it(o,s3[0],t2,u1,x1),it(s1,s3[2],B),it(s1,s3[3],B),d1&&it(o,"click",I1,!0,!0),j1&&it(o,"click",b2),m1&&it(s1,"gesturestart",M1),k&&it(s1,"gestureend",S1),e1&&it(o,J0+"enter",G1),i1&&it(o,J0+"leave",W1),K&&it(o,J0+"move",h1)),D.isEnabled=!0,D.isDragging=D.isGesturing=D.isPressed=M=U=!1,D._vx.reset(),D._vy.reset(),P=o1(),S=w1(),k1&&k1.type&&t2(k1),z1&&z1(D)),D},D.disable=function(){D.isEnabled&&(Jn.filter(function(k1){return k1!==D&&hr(k1.target)}).length||tt(Q?s1:o,"scroll",P4),D.isPressed&&(D._vx.reset(),D._vy.reset(),tt(G?o:s1,s3[1],C1,!0)),tt(Q?s1:o,"scroll",O1,x1),tt(o,"wheel",p1,x1),tt(o,s3[0],t2,x1),tt(s1,s3[2],B),tt(s1,s3[3],B),tt(o,"click",I1,!0),tt(o,"click",b2),tt(s1,"gesturestart",M1),tt(s1,"gestureend",S1),tt(o,J0+"enter",G1),tt(o,J0+"leave",W1),tt(o,J0+"move",h1),D.isEnabled=D.isPressed=D.isDragging=!1,c2&&c2(D))},D.kill=D.revert=function(){D.disable();var k1=Jn.indexOf(D);k1>=0&&Jn.splice(k1,1),X3===D&&(X3=0)},Jn.push(D),G&&hr(o)&&(X3=D),D.enable(_)},im(i,[{key:"velocityX",get:function(){return this._vx.getVelocity()}},{key:"velocityY",get:function(){return this._vy.getVelocity()}}]),i})();de.version="3.13.0";de.create=function(i){return new de(i)};de.register=tf;de.getAll=function(){return Jn.slice()};de.getById=function(i){return Jn.filter(function(e){return e.vars.id===i})[0]};J5()&&ze.registerPlugin(de);/*!
 * ScrollTrigger 3.13.0
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var q1,Yn,M2,K2,It,F2,hl,ya,Lr,dr,Yi,ts,$e,Ga,D4,at,bc,Ec,jn,nf,po,rf,st,I4,sf,af,h0,U4,dl,ci,pl,Ma,O4,mo,ns=1,Ye=Date.now,_o=Ye(),Qt=0,ji=0,Tc=function(e,t,n){var r=Lt(e)&&(e.substr(0,6)==="clamp("||e.indexOf("max")>-1);return n["_"+t+"Clamp"]=r,r?e.substr(6,e.length-7):e},wc=function(e,t){return t&&(!Lt(e)||e.substr(0,6)!=="clamp(")?"clamp("+e+")":e},am=function i(){return ji&&requestAnimationFrame(i)},Ac=function(){return Ga=1},Cc=function(){return Ga=0},g3=function(e){return e},Ki=function(e){return Math.round(e*1e5)/1e5||0},of=function(){return typeof window<"u"},lf=function(){return q1||of()&&(q1=window.gsap)&&q1.registerPlugin&&q1},Sn=function(e){return!!~hl.indexOf(e)},cf=function(e){return(e==="Height"?pl:M2["inner"+e])||It["client"+e]||F2["client"+e]},uf=function(e){return T0(e,"getBoundingClientRect")||(Sn(e)?function(){return js.width=M2.innerWidth,js.height=pl,js}:function(){return G3(e)})},om=function(e,t,n){var r=n.d,s=n.d2,a=n.a;return(a=T0(e,"getBoundingClientRect"))?function(){return a()[r]}:function(){return(t?cf(s):e["client"+s])||0}},lm=function(e,t){return!t||~A3.indexOf(e)?uf(e):function(){return js}},S3=function(e,t){var n=t.s,r=t.d2,s=t.d,a=t.a;return Math.max(0,(n="scroll"+r)&&(a=T0(e,n))?a()-uf(e)()[s]:Sn(e)?(It[n]||F2[n])-cf(r):e[n]-e["offset"+r])},is=function(e,t){for(var n=0;n<jn.length;n+=3)(!t||~t.indexOf(jn[n+1]))&&e(jn[n],jn[n+1],jn[n+2])},Lt=function(e){return typeof e=="string"},Ze=function(e){return typeof e=="function"},Zi=function(e){return typeof e=="number"},Q0=function(e){return typeof e=="object"},Bi=function(e,t,n){return e&&e.progress(t?0:1)&&n&&e.pause()},go=function(e,t){if(e.enabled){var n=e._ctx?e._ctx.add(function(){return t(e)}):t(e);n&&n.totalTime&&(e.callbackAnimation=n)}},Ln=Math.abs,ff="left",hf="top",ml="right",_l="bottom",gn="width",vn="height",pr="Right",mr="Left",_r="Top",gr="Bottom",_e="padding",Wt="margin",bi="Width",gl="Height",Me="px",Xt=function(e){return M2.getComputedStyle(e)},cm=function(e){var t=Xt(e).position;e.style.position=t==="absolute"||t==="fixed"?t:"relative"},Rc=function(e,t){for(var n in t)n in e||(e[n]=t[n]);return e},G3=function(e,t){var n=t&&Xt(e)[D4]!=="matrix(1, 0, 0, 1, 0, 0)"&&q1.to(e,{x:0,y:0,xPercent:0,yPercent:0,rotation:0,rotationX:0,rotationY:0,scale:1,skewX:0,skewY:0}).progress(1),r=e.getBoundingClientRect();return n&&n.progress(0).kill(),r},Sa=function(e,t){var n=t.d2;return e["offset"+n]||e["client"+n]||0},df=function(e){var t=[],n=e.labels,r=e.duration(),s;for(s in n)t.push(n[s]/r);return t},um=function(e){return function(t){return q1.utils.snap(df(e),t)}},vl=function(e){var t=q1.utils.snap(e),n=Array.isArray(e)&&e.slice(0).sort(function(r,s){return r-s});return n?function(r,s,a){a===void 0&&(a=.001);var o;if(!s)return t(r);if(s>0){for(r-=a,o=0;o<n.length;o++)if(n[o]>=r)return n[o];return n[o-1]}else for(o=n.length,r+=a;o--;)if(n[o]<=r)return n[o];return n[0]}:function(r,s,a){a===void 0&&(a=.001);var o=t(r);return!s||Math.abs(o-r)<a||o-r<0==s<0?o:t(s<0?r-e:r+e)}},fm=function(e){return function(t,n){return vl(df(e))(t,n.direction)}},rs=function(e,t,n,r){return n.split(",").forEach(function(s){return e(t,s,r)})},Le=function(e,t,n,r,s){return e.addEventListener(t,n,{passive:!r,capture:!!s})},Pe=function(e,t,n,r){return e.removeEventListener(t,n,!!r)},ss=function(e,t,n){n=n&&n.wheelHandler,n&&(e(t,"wheel",n),e(t,"touchmove",n))},Pc={startColor:"green",endColor:"red",indent:0,fontSize:"16px",fontWeight:"normal"},as={toggleActions:"play",anticipatePin:0},ba={top:0,left:0,center:.5,bottom:1,right:1},Xs=function(e,t){if(Lt(e)){var n=e.indexOf("="),r=~n?+(e.charAt(n-1)+1)*parseFloat(e.substr(n+1)):0;~n&&(e.indexOf("%")>n&&(r*=t/100),e=e.substr(0,n-1)),e=r+(e in ba?ba[e]*t:~e.indexOf("%")?parseFloat(e)*t/100:parseFloat(e)||0)}return e},os=function(e,t,n,r,s,a,o,l){var c=s.startColor,u=s.endColor,f=s.fontSize,h=s.indent,d=s.fontWeight,g=K2.createElement("div"),_=Sn(n)||T0(n,"pinType")==="fixed",m=e.indexOf("scroller")!==-1,p=_?F2:n,b=e.indexOf("start")!==-1,w=b?c:u,y="border-color:"+w+";font-size:"+f+";color:"+w+";font-weight:"+d+";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;";return y+="position:"+((m||l)&&_?"fixed;":"absolute;"),(m||l||!_)&&(y+=(r===be?ml:_l)+":"+(a+parseFloat(h))+"px;"),o&&(y+="box-sizing:border-box;text-align:left;width:"+o.offsetWidth+"px;"),g._isStart=b,g.setAttribute("class","gsap-marker-"+e+(t?" marker-"+t:"")),g.style.cssText=y,g.innerText=t||t===0?e+"-"+t:e,p.children[0]?p.insertBefore(g,p.children[0]):p.appendChild(g),g._offset=g["offset"+r.op.d2],qs(g,0,r,b),g},qs=function(e,t,n,r){var s={display:"block"},a=n[r?"os2":"p2"],o=n[r?"p2":"os2"];e._isFlipped=r,s[n.a+"Percent"]=r?-100:0,s[n.a]=r?"1px":0,s["border"+a+bi]=1,s["border"+o+bi]=0,s[n.p]=t+"px",q1.set(e,s)},y2=[],F4={},Dr,Lc=function(){return Ye()-Qt>34&&(Dr||(Dr=requestAnimationFrame(Y3)))},Dn=function(){(!st||!st.isPressed||st.startX>F2.clientWidth)&&(S2.cache++,st?Dr||(Dr=requestAnimationFrame(Y3)):Y3(),Qt||En("scrollStart"),Qt=Ye())},vo=function(){af=M2.innerWidth,sf=M2.innerHeight},Ji=function(e){S2.cache++,(e===!0||!$e&&!rf&&!K2.fullscreenElement&&!K2.webkitFullscreenElement&&(!I4||af!==M2.innerWidth||Math.abs(M2.innerHeight-sf)>M2.innerHeight*.25))&&ya.restart(!0)},bn={},hm=[],pf=function i(){return Pe(_2,"scrollEnd",i)||ln(!0)},En=function(e){return bn[e]&&bn[e].map(function(t){return t()})||hm},Pt=[],mf=function(e){for(var t=0;t<Pt.length;t+=5)(!e||Pt[t+4]&&Pt[t+4].query===e)&&(Pt[t].style.cssText=Pt[t+1],Pt[t].getBBox&&Pt[t].setAttribute("transform",Pt[t+2]||""),Pt[t+3].uncache=1)},xl=function(e,t){var n;for(at=0;at<y2.length;at++)n=y2[at],n&&(!t||n._ctx===t)&&(e?n.kill(1):n.revert(!0,!0));Ma=!0,t&&mf(t),t||En("revert")},_f=function(e,t){S2.cache++,(t||!ot)&&S2.forEach(function(n){return Ze(n)&&n.cacheID++&&(n.rec=0)}),Lt(e)&&(M2.history.scrollRestoration=dl=e)},ot,xn=0,Dc,dm=function(){if(Dc!==xn){var e=Dc=xn;requestAnimationFrame(function(){return e===xn&&ln(!0)})}},gf=function(){F2.appendChild(ci),pl=!st&&ci.offsetHeight||M2.innerHeight,F2.removeChild(ci)},Ic=function(e){return Lr(".gsap-marker-start, .gsap-marker-end, .gsap-marker-scroller-start, .gsap-marker-scroller-end").forEach(function(t){return t.style.display=e?"none":"block"})},ln=function(e,t){if(It=K2.documentElement,F2=K2.body,hl=[M2,K2,It,F2],Qt&&!e&&!Ma){Le(_2,"scrollEnd",pf);return}gf(),ot=_2.isRefreshing=!0,S2.forEach(function(r){return Ze(r)&&++r.cacheID&&(r.rec=r())});var n=En("refreshInit");nf&&_2.sort(),t||xl(),S2.forEach(function(r){Ze(r)&&(r.smooth&&(r.target.style.scrollBehavior="auto"),r(0))}),y2.slice(0).forEach(function(r){return r.refresh()}),Ma=!1,y2.forEach(function(r){if(r._subPinOffset&&r.pin){var s=r.vars.horizontal?"offsetWidth":"offsetHeight",a=r.pin[s];r.revert(!0,1),r.adjustPinSpacing(r.pin[s]-a),r.refresh()}}),O4=1,Ic(!0),y2.forEach(function(r){var s=S3(r.scroller,r._dir),a=r.vars.end==="max"||r._endClamp&&r.end>s,o=r._startClamp&&r.start>=s;(a||o)&&r.setPositions(o?s-1:r.start,a?Math.max(o?s:r.start+1,s):r.end,!0)}),Ic(!1),O4=0,n.forEach(function(r){return r&&r.render&&r.render(-1)}),S2.forEach(function(r){Ze(r)&&(r.smooth&&requestAnimationFrame(function(){return r.target.style.scrollBehavior="smooth"}),r.rec&&r(r.rec))}),_f(dl,1),ya.pause(),xn++,ot=2,Y3(2),y2.forEach(function(r){return Ze(r.vars.onRefresh)&&r.vars.onRefresh(r)}),ot=_2.isRefreshing=!1,En("refresh")},N4=0,$s=1,vr,Y3=function(e){if(e===2||!ot&&!Ma){_2.isUpdating=!0,vr&&vr.update(0);var t=y2.length,n=Ye(),r=n-_o>=50,s=t&&y2[0].scroll();if($s=N4>s?-1:1,ot||(N4=s),r&&(Qt&&!Ga&&n-Qt>200&&(Qt=0,En("scrollEnd")),Yi=_o,_o=n),$s<0){for(at=t;at-- >0;)y2[at]&&y2[at].update(0,r);$s=1}else for(at=0;at<t;at++)y2[at]&&y2[at].update(0,r);_2.isUpdating=!1}Dr=0},k4=[ff,hf,_l,ml,Wt+gr,Wt+pr,Wt+_r,Wt+mr,"display","flexShrink","float","zIndex","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","gridArea","justifySelf","alignSelf","placeSelf","order"],Ys=k4.concat([gn,vn,"boxSizing","max"+bi,"max"+gl,"position",Wt,_e,_e+_r,_e+pr,_e+gr,_e+mr]),pm=function(e,t,n){ui(n);var r=e._gsap;if(r.spacerIsNative)ui(r.spacerState);else if(e._gsap.swappedIn){var s=t.parentNode;s&&(s.insertBefore(e,t),s.removeChild(t))}e._gsap.swappedIn=!1},xo=function(e,t,n,r){if(!e._gsap.swappedIn){for(var s=k4.length,a=t.style,o=e.style,l;s--;)l=k4[s],a[l]=n[l];a.position=n.position==="absolute"?"absolute":"relative",n.display==="inline"&&(a.display="inline-block"),o[_l]=o[ml]="auto",a.flexBasis=n.flexBasis||"auto",a.overflow="visible",a.boxSizing="border-box",a[gn]=Sa(e,ft)+Me,a[vn]=Sa(e,be)+Me,a[_e]=o[Wt]=o[hf]=o[ff]="0",ui(r),o[gn]=o["max"+bi]=n[gn],o[vn]=o["max"+gl]=n[vn],o[_e]=n[_e],e.parentNode!==t&&(e.parentNode.insertBefore(t,e),t.appendChild(e)),e._gsap.swappedIn=!0}},mm=/([A-Z])/g,ui=function(e){if(e){var t=e.t.style,n=e.length,r=0,s,a;for((e.t._gsap||q1.core.getCache(e.t)).uncache=1;r<n;r+=2)a=e[r+1],s=e[r],a?t[s]=a:t[s]&&t.removeProperty(s.replace(mm,"-$1").toLowerCase())}},ls=function(e){for(var t=Ys.length,n=e.style,r=[],s=0;s<t;s++)r.push(Ys[s],n[Ys[s]]);return r.t=e,r},_m=function(e,t,n){for(var r=[],s=e.length,a=n?8:0,o;a<s;a+=2)o=e[a],r.push(o,o in t?t[o]:e[a+1]);return r.t=e.t,r},js={left:0,top:0},Uc=function(e,t,n,r,s,a,o,l,c,u,f,h,d,g){Ze(e)&&(e=e(l)),Lt(e)&&e.substr(0,3)==="max"&&(e=h+(e.charAt(4)==="="?Xs("0"+e.substr(3),n):0));var _=d?d.time():0,m,p,b;if(d&&d.seek(0),isNaN(e)||(e=+e),Zi(e))d&&(e=q1.utils.mapRange(d.scrollTrigger.start,d.scrollTrigger.end,0,h,e)),o&&qs(o,n,r,!0);else{Ze(t)&&(t=t(l));var w=(e||"0").split(" "),y,C,A,L;b=vt(t,l)||F2,y=G3(b)||{},(!y||!y.left&&!y.top)&&Xt(b).display==="none"&&(L=b.style.display,b.style.display="block",y=G3(b),L?b.style.display=L:b.style.removeProperty("display")),C=Xs(w[0],y[r.d]),A=Xs(w[1]||"0",n),e=y[r.p]-c[r.p]-u+C+s-A,o&&qs(o,A,r,n-A<20||o._isStart&&A>20),n-=n-A}if(g&&(l[g]=e||-.001,e<0&&(e=0)),a){var N=e+n,E=a._isStart;m="scroll"+r.d2,qs(a,N,r,E&&N>20||!E&&(f?Math.max(F2[m],It[m]):a.parentNode[m])<=N+1),f&&(c=G3(o),f&&(a.style[r.op.p]=c[r.op.p]-r.op.m-a._offset+Me))}return d&&b&&(m=G3(b),d.seek(h),p=G3(b),d._caScrollDist=m[r.p]-p[r.p],e=e/d._caScrollDist*h),d&&d.seek(_),d?e:Math.round(e)},gm=/(webkit|moz|length|cssText|inset)/i,Oc=function(e,t,n,r){if(e.parentNode!==t){var s=e.style,a,o;if(t===F2){e._stOrig=s.cssText,o=Xt(e);for(a in o)!+a&&!gm.test(a)&&o[a]&&typeof s[a]=="string"&&a!=="0"&&(s[a]=o[a]);s.top=n,s.left=r}else s.cssText=e._stOrig;q1.core.getCache(e).uncache=1,t.appendChild(e)}},vf=function(e,t,n){var r=t,s=r;return function(a){var o=Math.round(e());return o!==r&&o!==s&&Math.abs(o-r)>3&&Math.abs(o-s)>3&&(a=o,n&&n()),s=r,r=Math.round(a),r}},cs=function(e,t,n){var r={};r[t.p]="+="+n,q1.set(e,r)},Fc=function(e,t){var n=U0(e,t),r="_scroll"+t.p2,s=function a(o,l,c,u,f){var h=a.tween,d=l.onComplete,g={};c=c||n();var _=vf(n,c,function(){h.kill(),a.tween=0});return f=u&&f||0,u=u||o-c,h&&h.kill(),l[r]=o,l.inherit=!1,l.modifiers=g,g[r]=function(){return _(c+u*h.ratio+f*h.ratio*h.ratio)},l.onUpdate=function(){S2.cache++,a.tween&&Y3()},l.onComplete=function(){a.tween=0,d&&d.call(h)},h=a.tween=q1.to(e,l),h};return e[r]=n,n.wheelHandler=function(){return s.tween&&s.tween.kill()&&(s.tween=0)},Le(e,"wheel",n.wheelHandler),_2.isTouch&&Le(e,"touchmove",n.wheelHandler),s},_2=(function(){function i(t,n){Yn||i.register(q1)||console.warn("Please gsap.registerPlugin(ScrollTrigger)"),U4(this),this.init(t,n)}var e=i.prototype;return e.init=function(n,r){if(this.progress=this.start=0,this.vars&&this.kill(!0,!0),!ji){this.update=this.refresh=this.kill=g3;return}n=Rc(Lt(n)||Zi(n)||n.nodeType?{trigger:n}:n,as);var s=n,a=s.onUpdate,o=s.toggleClass,l=s.id,c=s.onToggle,u=s.onRefresh,f=s.scrub,h=s.trigger,d=s.pin,g=s.pinSpacing,_=s.invalidateOnRefresh,m=s.anticipatePin,p=s.onScrubComplete,b=s.onSnapComplete,w=s.once,y=s.snap,C=s.pinReparent,A=s.pinSpacer,L=s.containerAnimation,N=s.fastScrollEnd,E=s.preventOverlaps,T=n.horizontal||n.containerAnimation&&n.horizontal!==!1?ft:be,F=!f&&f!==0,H=vt(n.scroller||M2),Y=q1.core.getCache(H),e1=Sn(H),i1=("pinType"in n?n.pinType:T0(H,"pinType")||e1&&"fixed")==="fixed",K=[n.onEnter,n.onLeave,n.onEnterBack,n.onLeaveBack],j=F&&n.toggleActions.split(" "),G="markers"in n?n.markers:as.markers,m1=e1?0:parseFloat(Xt(H)["border"+T.p2+bi])||0,k=this,E1=n.onRefreshInit&&function(){return n.onRefreshInit(k)},z1=om(H,e1,T),c2=lm(H,e1),j1=0,r1=0,x1=0,d1=U0(H,T),L1,D1,U1,d2,U,M,$,J,t1,D,f1,X,u1,o1,w1,P,S,z,Q,s1,Z,A1,_1,I1,b1,y1,R1,V1,N1,C1,t2,B,M1,S1,O1,p1,h1,G1,W1;if(k._startClamp=k._endClamp=!1,k._dir=T,m*=45,k.scroller=H,k.scroll=L?L.time.bind(L):d1,d2=d1(),k.vars=n,r=r||n.animation,"refreshPriority"in n&&(nf=1,n.refreshPriority===-9999&&(vr=k)),Y.tweenScroll=Y.tweenScroll||{top:Fc(H,be),left:Fc(H,ft)},k.tweenTo=L1=Y.tweenScroll[T.p],k.scrubDuration=function(F1){M1=Zi(F1)&&F1,M1?B?B.duration(F1):B=q1.to(r,{ease:"expo",totalProgress:"+=0",inherit:!1,duration:M1,paused:!0,onComplete:function(){return p&&p(k)}}):(B&&B.progress(1).kill(),B=0)},r&&(r.vars.lazy=!1,r._initted&&!k.isReverted||r.vars.immediateRender!==!1&&n.immediateRender!==!1&&r.duration()&&r.render(0,!0,!0),k.animation=r.pause(),r.scrollTrigger=k,k.scrubDuration(f),C1=0,l||(l=r.vars.id)),y&&((!Q0(y)||y.push)&&(y={snapTo:y}),"scrollBehavior"in F2.style&&q1.set(e1?[F2,It]:H,{scrollBehavior:"auto"}),S2.forEach(function(F1){return Ze(F1)&&F1.target===(e1?K2.scrollingElement||It:H)&&(F1.smooth=!1)}),U1=Ze(y.snapTo)?y.snapTo:y.snapTo==="labels"?um(r):y.snapTo==="labelsDirectional"?fm(r):y.directional!==!1?function(F1,e2){return vl(y.snapTo)(F1,Ye()-r1<500?0:e2.direction)}:q1.utils.snap(y.snapTo),S1=y.duration||{min:.1,max:2},S1=Q0(S1)?dr(S1.min,S1.max):dr(S1,S1),O1=q1.delayedCall(y.delay||M1/2||.1,function(){var F1=d1(),e2=Ye()-r1<500,Z1=L1.tween;if((e2||Math.abs(k.getVelocity())<10)&&!Z1&&!Ga&&j1!==F1){var s2=(F1-M)/o1,D2=r&&!F?r.totalProgress():s2,p2=e2?0:(D2-t2)/(Ye()-Yi)*1e3||0,I2=q1.utils.clamp(-s2,1-s2,Ln(p2/2)*p2/.185),j2=s2+(y.inertia===!1?0:I2),B2,k2,w2=y,Ue=w2.onStart,V2=w2.onInterrupt,Oe=w2.onComplete;if(B2=U1(j2,k),Zi(B2)||(B2=j2),k2=Math.max(0,Math.round(M+B2*o1)),F1<=$&&F1>=M&&k2!==F1){if(Z1&&!Z1._initted&&Z1.data<=Ln(k2-F1))return;y.inertia===!1&&(I2=B2-s2),L1(k2,{duration:S1(Ln(Math.max(Ln(j2-D2),Ln(B2-D2))*.185/p2/.05||0)),ease:y.ease||"power3",data:Ln(k2-F1),onInterrupt:function(){return O1.restart(!0)&&V2&&V2(k)},onComplete:function(){k.update(),j1=d1(),r&&!F&&(B?B.resetTo("totalProgress",B2,r._tTime/r._tDur):r.progress(B2)),C1=t2=r&&!F?r.totalProgress():k.progress,b&&b(k),Oe&&Oe(k)}},F1,I2*o1,k2-F1-I2*o1),Ue&&Ue(k,L1.tween)}}else k.isActive&&j1!==F1&&O1.restart(!0)}).pause()),l&&(F4[l]=k),h=k.trigger=vt(h||d!==!0&&d),W1=h&&h._gsap&&h._gsap.stRevert,W1&&(W1=W1(k)),d=d===!0?h:vt(d),Lt(o)&&(o={targets:h,className:o}),d&&(g===!1||g===Wt||(g=!g&&d.parentNode&&d.parentNode.style&&Xt(d.parentNode).display==="flex"?!1:_e),k.pin=d,D1=q1.core.getCache(d),D1.spacer?w1=D1.pinState:(A&&(A=vt(A),A&&!A.nodeType&&(A=A.current||A.nativeElement),D1.spacerIsNative=!!A,A&&(D1.spacerState=ls(A))),D1.spacer=z=A||K2.createElement("div"),z.classList.add("pin-spacer"),l&&z.classList.add("pin-spacer-"+l),D1.pinState=w1=ls(d)),n.force3D!==!1&&q1.set(d,{force3D:!0}),k.spacer=z=D1.spacer,N1=Xt(d),I1=N1[g+T.os2],s1=q1.getProperty(d),Z=q1.quickSetter(d,T.a,Me),xo(d,z,N1),S=ls(d)),G){X=Q0(G)?Rc(G,Pc):Pc,D=os("scroller-start",l,H,T,X,0),f1=os("scroller-end",l,H,T,X,0,D),Q=D["offset"+T.op.d2];var b2=vt(T0(H,"content")||H);J=this.markerStart=os("start",l,b2,T,X,Q,0,L),t1=this.markerEnd=os("end",l,b2,T,X,Q,0,L),L&&(G1=q1.quickSetter([J,t1],T.a,Me)),!i1&&!(A3.length&&T0(H,"fixedMarkers")===!0)&&(cm(e1?F2:H),q1.set([D,f1],{force3D:!0}),y1=q1.quickSetter(D,T.a,Me),V1=q1.quickSetter(f1,T.a,Me))}if(L){var k1=L.vars.onUpdate,$1=L.vars.onUpdateParams;L.eventCallback("onUpdate",function(){k.update(0,0,1),k1&&k1.apply(L,$1||[])})}if(k.previous=function(){return y2[y2.indexOf(k)-1]},k.next=function(){return y2[y2.indexOf(k)+1]},k.revert=function(F1,e2){if(!e2)return k.kill(!0);var Z1=F1!==!1||!k.enabled,s2=$e;Z1!==k.isReverted&&(Z1&&(p1=Math.max(d1(),k.scroll.rec||0),x1=k.progress,h1=r&&r.progress()),J&&[J,t1,D,f1].forEach(function(D2){return D2.style.display=Z1?"none":"block"}),Z1&&($e=k,k.update(Z1)),d&&(!C||!k.isActive)&&(Z1?pm(d,z,w1):xo(d,z,Xt(d),b1)),Z1||k.update(Z1),$e=s2,k.isReverted=Z1)},k.refresh=function(F1,e2,Z1,s2){if(!(($e||!k.enabled)&&!e2)){if(d&&F1&&Qt){Le(i,"scrollEnd",pf);return}!ot&&E1&&E1(k),$e=k,L1.tween&&!Z1&&(L1.tween.kill(),L1.tween=0),B&&B.pause(),_&&r&&(r.revert({kill:!1}).invalidate(),r.getChildren&&r.getChildren(!0,!0,!1).forEach(function(v2){return v2.vars.immediateRender&&v2.render(0,!0,!0)})),k.isReverted||k.revert(!0,!0),k._subPinOffset=!1;var D2=z1(),p2=c2(),I2=L?L.duration():S3(H,T),j2=o1<=.01||!o1,B2=0,k2=s2||0,w2=Q0(Z1)?Z1.end:n.end,Ue=n.endTrigger||h,V2=Q0(Z1)?Z1.start:n.start||(n.start===0||!h?0:d?"0 0":"0 100%"),Oe=k.pinnedContainer=n.pinnedContainer&&vt(n.pinnedContainer,k),pt=h&&Math.max(0,y2.indexOf(k))||0,se=pt,R,V,n1,a1,W,g1,P1,X1,H1,Q1,K1,Y1,u2;for(G&&Q0(Z1)&&(Y1=q1.getProperty(D,T.p),u2=q1.getProperty(f1,T.p));se-- >0;)g1=y2[se],g1.end||g1.refresh(0,1)||($e=k),P1=g1.pin,P1&&(P1===h||P1===d||P1===Oe)&&!g1.isReverted&&(Q1||(Q1=[]),Q1.unshift(g1),g1.revert(!0,!0)),g1!==y2[se]&&(pt--,se--);for(Ze(V2)&&(V2=V2(k)),V2=Tc(V2,"start",k),M=Uc(V2,h,D2,T,d1(),J,D,k,p2,m1,i1,I2,L,k._startClamp&&"_startClamp")||(d?-.001:0),Ze(w2)&&(w2=w2(k)),Lt(w2)&&!w2.indexOf("+=")&&(~w2.indexOf(" ")?w2=(Lt(V2)?V2.split(" ")[0]:"")+w2:(B2=Xs(w2.substr(2),D2),w2=Lt(V2)?V2:(L?q1.utils.mapRange(0,L.duration(),L.scrollTrigger.start,L.scrollTrigger.end,M):M)+B2,Ue=h)),w2=Tc(w2,"end",k),$=Math.max(M,Uc(w2||(Ue?"100% 0":I2),Ue,D2,T,d1()+B2,t1,f1,k,p2,m1,i1,I2,L,k._endClamp&&"_endClamp"))||-.001,B2=0,se=pt;se--;)g1=y2[se],P1=g1.pin,P1&&g1.start-g1._pinPush<=M&&!L&&g1.end>0&&(R=g1.end-(k._startClamp?Math.max(0,g1.start):g1.start),(P1===h&&g1.start-g1._pinPush<M||P1===Oe)&&isNaN(V2)&&(B2+=R*(1-g1.progress)),P1===d&&(k2+=R));if(M+=B2,$+=B2,k._startClamp&&(k._startClamp+=B2),k._endClamp&&!ot&&(k._endClamp=$||-.001,$=Math.min($,S3(H,T))),o1=$-M||(M-=.01)&&.001,j2&&(x1=q1.utils.clamp(0,1,q1.utils.normalize(M,$,p1))),k._pinPush=k2,J&&B2&&(R={},R[T.a]="+="+B2,Oe&&(R[T.p]="-="+d1()),q1.set([J,t1],R)),d&&!(O4&&k.end>=S3(H,T)))R=Xt(d),a1=T===be,n1=d1(),A1=parseFloat(s1(T.a))+k2,!I2&&$>1&&(K1=(e1?K2.scrollingElement||It:H).style,K1={style:K1,value:K1["overflow"+T.a.toUpperCase()]},e1&&Xt(F2)["overflow"+T.a.toUpperCase()]!=="scroll"&&(K1.style["overflow"+T.a.toUpperCase()]="scroll")),xo(d,z,R),S=ls(d),V=G3(d,!0),X1=i1&&U0(H,a1?ft:be)(),g?(b1=[g+T.os2,o1+k2+Me],b1.t=z,se=g===_e?Sa(d,T)+o1+k2:0,se&&(b1.push(T.d,se+Me),z.style.flexBasis!=="auto"&&(z.style.flexBasis=se+Me)),ui(b1),Oe&&y2.forEach(function(v2){v2.pin===Oe&&v2.vars.pinSpacing!==!1&&(v2._subPinOffset=!0)}),i1&&d1(p1)):(se=Sa(d,T),se&&z.style.flexBasis!=="auto"&&(z.style.flexBasis=se+Me)),i1&&(W={top:V.top+(a1?n1-M:X1)+Me,left:V.left+(a1?X1:n1-M)+Me,boxSizing:"border-box",position:"fixed"},W[gn]=W["max"+bi]=Math.ceil(V.width)+Me,W[vn]=W["max"+gl]=Math.ceil(V.height)+Me,W[Wt]=W[Wt+_r]=W[Wt+pr]=W[Wt+gr]=W[Wt+mr]="0",W[_e]=R[_e],W[_e+_r]=R[_e+_r],W[_e+pr]=R[_e+pr],W[_e+gr]=R[_e+gr],W[_e+mr]=R[_e+mr],P=_m(w1,W,C),ot&&d1(0)),r?(H1=r._initted,po(1),r.render(r.duration(),!0,!0),_1=s1(T.a)-A1+o1+k2,R1=Math.abs(o1-_1)>1,i1&&R1&&P.splice(P.length-2,2),r.render(0,!0,!0),H1||r.invalidate(!0),r.parent||r.totalTime(r.totalTime()),po(0)):_1=o1,K1&&(K1.value?K1.style["overflow"+T.a.toUpperCase()]=K1.value:K1.style.removeProperty("overflow-"+T.a));else if(h&&d1()&&!L)for(V=h.parentNode;V&&V!==F2;)V._pinOffset&&(M-=V._pinOffset,$-=V._pinOffset),V=V.parentNode;Q1&&Q1.forEach(function(v2){return v2.revert(!1,!0)}),k.start=M,k.end=$,d2=U=ot?p1:d1(),!L&&!ot&&(d2<p1&&d1(p1),k.scroll.rec=0),k.revert(!1,!0),r1=Ye(),O1&&(j1=-1,O1.restart(!0)),$e=0,r&&F&&(r._initted||h1)&&r.progress()!==h1&&r.progress(h1||0,!0).render(r.time(),!0,!0),(j2||x1!==k.progress||L||_||r&&!r._initted)&&(r&&!F&&(r._initted||x1||r.vars.immediateRender!==!1)&&r.totalProgress(L&&M<-.001&&!x1?q1.utils.normalize(M,$,0):x1,!0),k.progress=j2||(d2-M)/o1===x1?0:x1),d&&g&&(z._pinOffset=Math.round(k.progress*_1)),B&&B.invalidate(),isNaN(Y1)||(Y1-=q1.getProperty(D,T.p),u2-=q1.getProperty(f1,T.p),cs(D,T,Y1),cs(J,T,Y1-(s2||0)),cs(f1,T,u2),cs(t1,T,u2-(s2||0))),j2&&!ot&&k.update(),u&&!ot&&!u1&&(u1=!0,u(k),u1=!1)}},k.getVelocity=function(){return(d1()-U)/(Ye()-Yi)*1e3||0},k.endAnimation=function(){Bi(k.callbackAnimation),r&&(B?B.progress(1):r.paused()?F||Bi(r,k.direction<0,1):Bi(r,r.reversed()))},k.labelToScroll=function(F1){return r&&r.labels&&(M||k.refresh()||M)+r.labels[F1]/r.duration()*o1||0},k.getTrailing=function(F1){var e2=y2.indexOf(k),Z1=k.direction>0?y2.slice(0,e2).reverse():y2.slice(e2+1);return(Lt(F1)?Z1.filter(function(s2){return s2.vars.preventOverlaps===F1}):Z1).filter(function(s2){return k.direction>0?s2.end<=M:s2.start>=$})},k.update=function(F1,e2,Z1){if(!(L&&!Z1&&!F1)){var s2=ot===!0?p1:k.scroll(),D2=F1?0:(s2-M)/o1,p2=D2<0?0:D2>1?1:D2||0,I2=k.progress,j2,B2,k2,w2,Ue,V2,Oe,pt;if(e2&&(U=d2,d2=L?d1():s2,y&&(t2=C1,C1=r&&!F?r.totalProgress():p2)),m&&d&&!$e&&!ns&&Qt&&(!p2&&M<s2+(s2-U)/(Ye()-Yi)*m?p2=1e-4:p2===1&&$>s2+(s2-U)/(Ye()-Yi)*m&&(p2=.9999)),p2!==I2&&k.enabled){if(j2=k.isActive=!!p2&&p2<1,B2=!!I2&&I2<1,V2=j2!==B2,Ue=V2||!!p2!=!!I2,k.direction=p2>I2?1:-1,k.progress=p2,Ue&&!$e&&(k2=p2&&!I2?0:p2===1?1:I2===1?2:3,F&&(w2=!V2&&j[k2+1]!=="none"&&j[k2+1]||j[k2],pt=r&&(w2==="complete"||w2==="reset"||w2 in r))),E&&(V2||pt)&&(pt||f||!r)&&(Ze(E)?E(k):k.getTrailing(E).forEach(function(n1){return n1.endAnimation()})),F||(B&&!$e&&!ns?(B._dp._time-B._start!==B._time&&B.render(B._dp._time-B._start),B.resetTo?B.resetTo("totalProgress",p2,r._tTime/r._tDur):(B.vars.totalProgress=p2,B.invalidate().restart())):r&&r.totalProgress(p2,!!($e&&(r1||F1)))),d){if(F1&&g&&(z.style[g+T.os2]=I1),!i1)Z(Ki(A1+_1*p2));else if(Ue){if(Oe=!F1&&p2>I2&&$+1>s2&&s2+1>=S3(H,T),C)if(!F1&&(j2||Oe)){var se=G3(d,!0),R=s2-M;Oc(d,F2,se.top+(T===be?R:0)+Me,se.left+(T===be?0:R)+Me)}else Oc(d,z);ui(j2||Oe?P:S),R1&&p2<1&&j2||Z(A1+(p2===1&&!Oe?_1:0))}}y&&!L1.tween&&!$e&&!ns&&O1.restart(!0),o&&(V2||w&&p2&&(p2<1||!mo))&&Lr(o.targets).forEach(function(n1){return n1.classList[j2||w?"add":"remove"](o.className)}),a&&!F&&!F1&&a(k),Ue&&!$e?(F&&(pt&&(w2==="complete"?r.pause().totalProgress(1):w2==="reset"?r.restart(!0).pause():w2==="restart"?r.restart(!0):r[w2]()),a&&a(k)),(V2||!mo)&&(c&&V2&&go(k,c),K[k2]&&go(k,K[k2]),w&&(p2===1?k.kill(!1,1):K[k2]=0),V2||(k2=p2===1?1:3,K[k2]&&go(k,K[k2]))),N&&!j2&&Math.abs(k.getVelocity())>(Zi(N)?N:2500)&&(Bi(k.callbackAnimation),B?B.progress(1):Bi(r,w2==="reverse"?1:!p2,1))):F&&a&&!$e&&a(k)}if(V1){var V=L?s2/L.duration()*(L._caScrollDist||0):s2;y1(V+(D._isFlipped?1:0)),V1(V)}G1&&G1(-s2/L.duration()*(L._caScrollDist||0))}},k.enable=function(F1,e2){k.enabled||(k.enabled=!0,Le(H,"resize",Ji),e1||Le(H,"scroll",Dn),E1&&Le(i,"refreshInit",E1),F1!==!1&&(k.progress=x1=0,d2=U=j1=d1()),e2!==!1&&k.refresh())},k.getTween=function(F1){return F1&&L1?L1.tween:B},k.setPositions=function(F1,e2,Z1,s2){if(L){var D2=L.scrollTrigger,p2=L.duration(),I2=D2.end-D2.start;F1=D2.start+I2*F1/p2,e2=D2.start+I2*e2/p2}k.refresh(!1,!1,{start:wc(F1,Z1&&!!k._startClamp),end:wc(e2,Z1&&!!k._endClamp)},s2),k.update()},k.adjustPinSpacing=function(F1){if(b1&&F1){var e2=b1.indexOf(T.d)+1;b1[e2]=parseFloat(b1[e2])+F1+Me,b1[1]=parseFloat(b1[1])+F1+Me,ui(b1)}},k.disable=function(F1,e2){if(k.enabled&&(F1!==!1&&k.revert(!0,!0),k.enabled=k.isActive=!1,e2||B&&B.pause(),p1=0,D1&&(D1.uncache=1),E1&&Pe(i,"refreshInit",E1),O1&&(O1.pause(),L1.tween&&L1.tween.kill()&&(L1.tween=0)),!e1)){for(var Z1=y2.length;Z1--;)if(y2[Z1].scroller===H&&y2[Z1]!==k)return;Pe(H,"resize",Ji),e1||Pe(H,"scroll",Dn)}},k.kill=function(F1,e2){k.disable(F1,e2),B&&!e2&&B.kill(),l&&delete F4[l];var Z1=y2.indexOf(k);Z1>=0&&y2.splice(Z1,1),Z1===at&&$s>0&&at--,Z1=0,y2.forEach(function(s2){return s2.scroller===k.scroller&&(Z1=1)}),Z1||ot||(k.scroll.rec=0),r&&(r.scrollTrigger=null,F1&&r.revert({kill:!1}),e2||r.kill()),J&&[J,t1,D,f1].forEach(function(s2){return s2.parentNode&&s2.parentNode.removeChild(s2)}),vr===k&&(vr=0),d&&(D1&&(D1.uncache=1),Z1=0,y2.forEach(function(s2){return s2.pin===d&&Z1++}),Z1||(D1.spacer=0)),n.onKill&&n.onKill(k)},y2.push(k),k.enable(!1,!1),W1&&W1(k),r&&r.add&&!o1){var f2=k.update;k.update=function(){k.update=f2,S2.cache++,M||$||k.refresh()},q1.delayedCall(.01,k.update),o1=.01,M=$=0}else k.refresh();d&&dm()},i.register=function(n){return Yn||(q1=n||lf(),of()&&window.document&&i.enable(),Yn=ji),Yn},i.defaults=function(n){if(n)for(var r in n)as[r]=n[r];return as},i.disable=function(n,r){ji=0,y2.forEach(function(a){return a[r?"kill":"disable"](n)}),Pe(M2,"wheel",Dn),Pe(K2,"scroll",Dn),clearInterval(ts),Pe(K2,"touchcancel",g3),Pe(F2,"touchstart",g3),rs(Pe,K2,"pointerdown,touchstart,mousedown",Ac),rs(Pe,K2,"pointerup,touchend,mouseup",Cc),ya.kill(),is(Pe);for(var s=0;s<S2.length;s+=3)ss(Pe,S2[s],S2[s+1]),ss(Pe,S2[s],S2[s+2])},i.enable=function(){if(M2=window,K2=document,It=K2.documentElement,F2=K2.body,q1&&(Lr=q1.utils.toArray,dr=q1.utils.clamp,U4=q1.core.context||g3,po=q1.core.suppressOverwrites||g3,dl=M2.history.scrollRestoration||"auto",N4=M2.pageYOffset||0,q1.core.globals("ScrollTrigger",i),F2)){ji=1,ci=document.createElement("div"),ci.style.height="100vh",ci.style.position="absolute",gf(),am(),de.register(q1),i.isTouch=de.isTouch,h0=de.isTouch&&/(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent),I4=de.isTouch===1,Le(M2,"wheel",Dn),hl=[M2,K2,It,F2],q1.matchMedia?(i.matchMedia=function(c){var u=q1.matchMedia(),f;for(f in c)u.add(f,c[f]);return u},q1.addEventListener("matchMediaInit",function(){return xl()}),q1.addEventListener("matchMediaRevert",function(){return mf()}),q1.addEventListener("matchMedia",function(){ln(0,1),En("matchMedia")}),q1.matchMedia().add("(orientation: portrait)",function(){return vo(),vo})):console.warn("Requires GSAP 3.11.0 or later"),vo(),Le(K2,"scroll",Dn);var n=F2.hasAttribute("style"),r=F2.style,s=r.borderTopStyle,a=q1.core.Animation.prototype,o,l;for(a.revert||Object.defineProperty(a,"revert",{value:function(){return this.time(-.01,!0)}}),r.borderTopStyle="solid",o=G3(F2),be.m=Math.round(o.top+be.sc())||0,ft.m=Math.round(o.left+ft.sc())||0,s?r.borderTopStyle=s:r.removeProperty("border-top-style"),n||(F2.setAttribute("style",""),F2.removeAttribute("style")),ts=setInterval(Lc,250),q1.delayedCall(.5,function(){return ns=0}),Le(K2,"touchcancel",g3),Le(F2,"touchstart",g3),rs(Le,K2,"pointerdown,touchstart,mousedown",Ac),rs(Le,K2,"pointerup,touchend,mouseup",Cc),D4=q1.utils.checkPrefix("transform"),Ys.push(D4),Yn=Ye(),ya=q1.delayedCall(.2,ln).pause(),jn=[K2,"visibilitychange",function(){var c=M2.innerWidth,u=M2.innerHeight;K2.hidden?(bc=c,Ec=u):(bc!==c||Ec!==u)&&Ji()},K2,"DOMContentLoaded",ln,M2,"load",ln,M2,"resize",Ji],is(Le),y2.forEach(function(c){return c.enable(0,1)}),l=0;l<S2.length;l+=3)ss(Pe,S2[l],S2[l+1]),ss(Pe,S2[l],S2[l+2])}},i.config=function(n){"limitCallbacks"in n&&(mo=!!n.limitCallbacks);var r=n.syncInterval;r&&clearInterval(ts)||(ts=r)&&setInterval(Lc,r),"ignoreMobileResize"in n&&(I4=i.isTouch===1&&n.ignoreMobileResize),"autoRefreshEvents"in n&&(is(Pe)||is(Le,n.autoRefreshEvents||"none"),rf=(n.autoRefreshEvents+"").indexOf("resize")===-1)},i.scrollerProxy=function(n,r){var s=vt(n),a=S2.indexOf(s),o=Sn(s);~a&&S2.splice(a,o?6:2),r&&(o?A3.unshift(M2,r,F2,r,It,r):A3.unshift(s,r))},i.clearMatchMedia=function(n){y2.forEach(function(r){return r._ctx&&r._ctx.query===n&&r._ctx.kill(!0,!0)})},i.isInViewport=function(n,r,s){var a=(Lt(n)?vt(n):n).getBoundingClientRect(),o=a[s?gn:vn]*r||0;return s?a.right-o>0&&a.left+o<M2.innerWidth:a.bottom-o>0&&a.top+o<M2.innerHeight},i.positionInViewport=function(n,r,s){Lt(n)&&(n=vt(n));var a=n.getBoundingClientRect(),o=a[s?gn:vn],l=r==null?o/2:r in ba?ba[r]*o:~r.indexOf("%")?parseFloat(r)*o/100:parseFloat(r)||0;return s?(a.left+l)/M2.innerWidth:(a.top+l)/M2.innerHeight},i.killAll=function(n){if(y2.slice(0).forEach(function(s){return s.vars.id!=="ScrollSmoother"&&s.kill()}),n!==!0){var r=bn.killAll||[];bn={},r.forEach(function(s){return s()})}},i})();_2.version="3.13.0";_2.saveStyles=function(i){return i?Lr(i).forEach(function(e){if(e&&e.style){var t=Pt.indexOf(e);t>=0&&Pt.splice(t,5),Pt.push(e,e.style.cssText,e.getBBox&&e.getAttribute("transform"),q1.core.getCache(e),U4())}}):Pt};_2.revert=function(i,e){return xl(!i,e)};_2.create=function(i,e){return new _2(i,e)};_2.refresh=function(i){return i?Ji(!0):(Yn||_2.register())&&ln(!0)};_2.update=function(i){return++S2.cache&&Y3(i===!0?2:0)};_2.clearScrollMemory=_f;_2.maxScroll=function(i,e){return S3(i,e?ft:be)};_2.getScrollFunc=function(i,e){return U0(vt(i),e?ft:be)};_2.getById=function(i){return F4[i]};_2.getAll=function(){return y2.filter(function(i){return i.vars.id!=="ScrollSmoother"})};_2.isScrolling=function(){return!!Qt};_2.snapDirectional=vl;_2.addEventListener=function(i,e){var t=bn[i]||(bn[i]=[]);~t.indexOf(e)||t.push(e)};_2.removeEventListener=function(i,e){var t=bn[i],n=t&&t.indexOf(e);n>=0&&t.splice(n,1)};_2.batch=function(i,e){var t=[],n={},r=e.interval||.016,s=e.batchMax||1e9,a=function(c,u){var f=[],h=[],d=q1.delayedCall(r,function(){u(f,h),f=[],h=[]}).pause();return function(g){f.length||d.restart(!0),f.push(g.trigger),h.push(g),s<=f.length&&d.progress(1)}},o;for(o in e)n[o]=o.substr(0,2)==="on"&&Ze(e[o])&&o!=="onRefreshInit"?a(o,e[o]):e[o];return Ze(s)&&(s=s(),Le(_2,"refresh",function(){return s=e.batchMax()})),Lr(i).forEach(function(l){var c={};for(o in n)c[o]=n[o];c.trigger=l,t.push(_2.create(c))}),t};var Nc=function(e,t,n,r){return t>r?e(r):t<0&&e(0),n>r?(r-t)/(n-t):n<0?t/(t-n):1},yo=function i(e,t){t===!0?e.style.removeProperty("touch-action"):e.style.touchAction=t===!0?"auto":t?"pan-"+t+(de.isTouch?" pinch-zoom":""):"none",e===It&&i(F2,t)},us={auto:1,scroll:1},vm=function(e){var t=e.event,n=e.target,r=e.axis,s=(t.changedTouches?t.changedTouches[0]:t).target,a=s._gsap||q1.core.getCache(s),o=Ye(),l;if(!a._isScrollT||o-a._isScrollT>2e3){for(;s&&s!==F2&&(s.scrollHeight<=s.clientHeight&&s.scrollWidth<=s.clientWidth||!(us[(l=Xt(s)).overflowY]||us[l.overflowX]));)s=s.parentNode;a._isScroll=s&&s!==n&&!Sn(s)&&(us[(l=Xt(s)).overflowY]||us[l.overflowX]),a._isScrollT=o}(a._isScroll||r==="x")&&(t.stopPropagation(),t._gsapAllow=!0)},xf=function(e,t,n,r){return de.create({target:e,capture:!0,debounce:!1,lockAxis:!0,type:t,onWheel:r=r&&vm,onPress:r,onDrag:r,onScroll:r,onEnable:function(){return n&&Le(K2,de.eventTypes[0],Bc,!1,!0)},onDisable:function(){return Pe(K2,de.eventTypes[0],Bc,!0)}})},xm=/(input|label|select|textarea)/i,kc,Bc=function(e){var t=xm.test(e.target.tagName);(t||kc)&&(e._gsapAllow=!0,kc=t)},ym=function(e){Q0(e)||(e={}),e.preventDefault=e.isNormalizer=e.allowClicks=!0,e.type||(e.type="wheel,touch"),e.debounce=!!e.debounce,e.id=e.id||"normalizer";var t=e,n=t.normalizeScrollX,r=t.momentum,s=t.allowNestedScroll,a=t.onRelease,o,l,c=vt(e.target)||It,u=q1.core.globals().ScrollSmoother,f=u&&u.get(),h=h0&&(e.content&&vt(e.content)||f&&e.content!==!1&&!f.smooth()&&f.content()),d=U0(c,be),g=U0(c,ft),_=1,m=(de.isTouch&&M2.visualViewport?M2.visualViewport.scale*M2.visualViewport.width:M2.outerWidth)/M2.innerWidth,p=0,b=Ze(r)?function(){return r(o)}:function(){return r||2.8},w,y,C=xf(c,e.type,!0,s),A=function(){return y=!1},L=g3,N=g3,E=function(){l=S3(c,be),N=dr(h0?1:0,l),n&&(L=dr(0,S3(c,ft))),w=xn},T=function(){h._gsap.y=Ki(parseFloat(h._gsap.y)+d.offset)+"px",h.style.transform="matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, "+parseFloat(h._gsap.y)+", 0, 1)",d.offset=d.cacheID=0},F=function(){if(y){requestAnimationFrame(A);var G=Ki(o.deltaY/2),m1=N(d.v-G);if(h&&m1!==d.v+d.offset){d.offset=m1-d.v;var k=Ki((parseFloat(h&&h._gsap.y)||0)-d.offset);h.style.transform="matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, "+k+", 0, 1)",h._gsap.y=k+"px",d.cacheID=S2.cache,Y3()}return!0}d.offset&&T(),y=!0},H,Y,e1,i1,K=function(){E(),H.isActive()&&H.vars.scrollY>l&&(d()>l?H.progress(1)&&d(l):H.resetTo("scrollY",l))};return h&&q1.set(h,{y:"+=0"}),e.ignoreCheck=function(j){return h0&&j.type==="touchmove"&&F()||_>1.05&&j.type!=="touchstart"||o.isGesturing||j.touches&&j.touches.length>1},e.onPress=function(){y=!1;var j=_;_=Ki((M2.visualViewport&&M2.visualViewport.scale||1)/m),H.pause(),j!==_&&yo(c,_>1.01?!0:n?!1:"x"),Y=g(),e1=d(),E(),w=xn},e.onRelease=e.onGestureStart=function(j,G){if(d.offset&&T(),!G)i1.restart(!0);else{S2.cache++;var m1=b(),k,E1;n&&(k=g(),E1=k+m1*.05*-j.velocityX/.227,m1*=Nc(g,k,E1,S3(c,ft)),H.vars.scrollX=L(E1)),k=d(),E1=k+m1*.05*-j.velocityY/.227,m1*=Nc(d,k,E1,S3(c,be)),H.vars.scrollY=N(E1),H.invalidate().duration(m1).play(.01),(h0&&H.vars.scrollY>=l||k>=l-1)&&q1.to({},{onUpdate:K,duration:m1})}a&&a(j)},e.onWheel=function(){H._ts&&H.pause(),Ye()-p>1e3&&(w=0,p=Ye())},e.onChange=function(j,G,m1,k,E1){if(xn!==w&&E(),G&&n&&g(L(k[2]===G?Y+(j.startX-j.x):g()+G-k[1])),m1){d.offset&&T();var z1=E1[2]===m1,c2=z1?e1+j.startY-j.y:d()+m1-E1[1],j1=N(c2);z1&&c2!==j1&&(e1+=j1-c2),d(j1)}(m1||G)&&Y3()},e.onEnable=function(){yo(c,n?!1:"x"),_2.addEventListener("refresh",K),Le(M2,"resize",K),d.smooth&&(d.target.style.scrollBehavior="auto",d.smooth=g.smooth=!1),C.enable()},e.onDisable=function(){yo(c,!0),Pe(M2,"resize",K),_2.removeEventListener("refresh",K),C.kill()},e.lockAxis=e.lockAxis!==!1,o=new de(e),o.iOS=h0,h0&&!d()&&d(1),h0&&q1.ticker.add(g3),i1=o._dc,H=q1.to(o,{ease:"power4",paused:!0,inherit:!1,scrollX:n?"+=0.1":"+=0",scrollY:"+=0.1",modifiers:{scrollY:vf(d,d(),function(){return H.pause()})},onUpdate:Y3,onComplete:i1.vars.onComplete}),o};_2.sort=function(i){if(Ze(i))return y2.sort(i);var e=M2.pageYOffset||0;return _2.getAll().forEach(function(t){return t._sortY=t.trigger?e+t.trigger.getBoundingClientRect().top:t.start+M2.innerHeight}),y2.sort(i||function(t,n){return(t.vars.refreshPriority||0)*-1e6+(t.vars.containerAnimation?1e6:t._sortY)-((n.vars.containerAnimation?1e6:n._sortY)+(n.vars.refreshPriority||0)*-1e6)})};_2.observe=function(i){return new de(i)};_2.normalizeScroll=function(i){if(typeof i>"u")return st;if(i===!0&&st)return st.enable();if(i===!1){st&&st.kill(),st=i;return}var e=i instanceof de?i:ym(i);return st&&st.target===e.target&&st.kill(),Sn(e.target)&&(st=e),e};_2.core={_getVelocityProp:L4,_inputObserver:xf,_scrollers:S2,_proxies:A3,bridge:{ss:function(){Qt||En("scrollStart"),Qt=Ye()},ref:function(){return $e}}};lf()&&q1.registerPlugin(_2);const Mm="/assets/profile-AvdsdmVk.jpg",Sm={class:"hero",id:"home"},bm={class:"hero-wrapper"},Em={class:"hero-content"},Tm=["src"],wm={class:"text-content"},Am={__name:"Home",setup(i){Q2.registerPlugin(_2);const e=Be(null),t=Be(null),n=Be(null),r=Be(null);return r0(()=>{Q2.timeline({scrollTrigger:{trigger:".hero-wrapper",start:"top 80%",end:"bottom 20%",toggleActions:"play reverse play reverse"}}).fromTo(r.value,{x:-100,opacity:0},{x:0,opacity:1,duration:1}).fromTo(e.value,{x:50,opacity:0},{x:0,opacity:1,duration:1},"-=0.5").fromTo(t.value,{x:50,opacity:0},{x:0,opacity:1,duration:.8},"-=0.5").fromTo(n.value,{x:50,opacity:0},{x:0,opacity:1,duration:.8},"-=0.5")}),(s,a)=>(ne(),ce("section",Sm,[r2("div",bm,[r2("div",Em,[r2("div",{class:"hero-image",ref_key:"heroImage",ref:r},[r2("img",{src:ra(Mm),alt:"Profile"},null,8,Tm)],512),r2("div",wm,[r2("h1",{ref_key:"title",ref:e},a[0]||(a[0]=[W6("Halo, Saya ",-1),r2("span",null,"Muhammad Rizqi Kurniawan",-1)]),512),r2("p",{ref_key:"role",ref:t},"Seorang Website Developer",512),r2("p",{ref_key:"description",ref:n},a[1]||(a[1]=[Bs(" Saya membangun antarmuka web modern, responsif, dan interaktif menggunakan teknologi seperti <strong>Vue.js</strong>, <strong>HTML</strong>, <strong>CSS</strong>, dan <strong>JavaScript</strong> untuk <strong>Front-end</strong>. Selain itu, saya menggunakan <strong>PHP Laravel</strong> untuk <strong>Back-end</strong> dan database menggunakan <strong>MySQL</strong> dan <strong>PostgreSQL</strong>",18)]),512)])])])]))}},Cm="/assets/logo1-DvzqMviy.png",Rm="/assets/logo2--6AzuqwK.png",Pm="/assets/logo3-DSY_MYYz.png",Lm="/assets/logo4-DZubB_ou.png",Dm="/assets/logo5-ClxAYN_R.png",Im="/assets/logo6-CMVGadOG.png",Um="/assets/logo7-CV2xO7mx.png",Om={class:"skill",id:"skill"},Fm={class:"skill-content"},Nm=["src","alt"],km={class:"skill-content"},Bm=["src","alt"],zm={__name:"Skill",setup(i){Q2.registerPlugin(_2);const e=Be(null),t=Be(null),n=Be(null),r=[{name:"Laravel",logo:Lm},{name:"Vue.js",logo:Dm},{name:"HTML",logo:Im},{name:"CSS",logo:Um}],s=[{name:"After Effect",logo:Cm},{name:"Adobe Illustrator",logo:Rm},{name:"Premiere Pro",logo:Pm}];return r0(()=>{Q2.from(n.value,{y:-50,opacity:0,duration:.8,ease:"power2.out",scrollTrigger:{trigger:n.value,start:"top 90%",end:"bottom 10%",toggleActions:"play reverse play reverse"}}),Q2.from(e.value.querySelector("h1"),{y:-30,opacity:0,duration:.6,ease:"power2.out",scrollTrigger:{trigger:e.value,start:"top 85%",end:"bottom 20%",toggleActions:"play reverse play reverse"}}),Q2.from(e.value.querySelectorAll(".skill-item"),{y:40,opacity:0,scale:.85,duration:.8,stagger:.2,ease:"back.out(1.5)",scrollTrigger:{trigger:e.value,start:"top 85%",end:"bottom 20%",toggleActions:"play reverse play reverse"}}),Q2.from(t.value.querySelector("h1"),{y:-30,opacity:0,duration:.6,ease:"power2.out",scrollTrigger:{trigger:t.value,start:"top 85%",end:"bottom 20%",toggleActions:"play reverse play reverse"}}),Q2.from(t.value.querySelectorAll(".skill-item"),{y:40,opacity:0,scale:.85,duration:.8,stagger:.2,ease:"back.out(1.5)",scrollTrigger:{trigger:t.value,start:"top 85%",end:"bottom 20%",toggleActions:"play reverse play reverse"}})}),(a,o)=>(ne(),ce("section",Om,[r2("div",{class:"skill-wrapper",ref_key:"webSkills",ref:e},[o[0]||(o[0]=r2("h1",null,"Web Developer",-1)),r2("div",Fm,[(ne(),ce(ke,null,hn(r,(l,c)=>r2("div",{class:"skill-item",key:c},[r2("img",{src:l.logo,alt:l.name},null,8,Nm),r2("p",null,S0(l.name),1)])),64))])],512),r2("div",{class:"skill-wrapper",ref_key:"creativeSkills",ref:t},[o[1]||(o[1]=r2("h1",null,"Design & Creative Tools",-1)),r2("div",km,[(ne(),ce(ke,null,hn(s,(l,c)=>r2("div",{class:"skill-item",key:c},[r2("img",{src:l.logo,alt:l.name},null,8,Bm),r2("p",null,S0(l.name),1)])),64))])],512)]))}},Hm="/assets/2-C63z_wXN.jpg",Vm="/assets/3-CiytTz2C.png",Gm="/assets/4-tRWgu72C.png",Wm="/assets/5-B0jMog8d.jpg",Xm="/assets/6-B8kFe6SM.png",qm="/assets/7-BfrJzdMg.png",$m="/assets/8-BDspBybI.jpg",Ym={class:"experience",id:"gallery"},jm={class:"minitask"},Km={class:"task-group-wrapper"},Zm={class:"task-group-container"},Jm={key:0,class:"desain"},Qm=["src"],e_={class:"text-content"},t_={__name:"Project",setup(i){Q2.registerPlugin(_2);const e=[{title:"Desain Poster",image:Xm,items:["Desain untuk Sosialisasi Vaksin Lansia"]},{title:"Desain Vector",image:Hm,items:["Desain pribadi dengan Adobe Illustrator"]},{title:"Desain WPAP",image:Vm,items:["Desain pribadi dengan Adobe Illustrator"]},{title:"Desain Vector",image:Gm,items:["Desain pribadi dengan Adobe Illustrator"]},{title:"Desain Logo",image:Wm,items:["Desain pribadi dengan Adobe Illustrator"]},{title:"Desain Logo",image:qm,items:["Desain pribadi dengan Adobe Illustrator"]},{title:"Desain Logo",image:$m,items:["Desain pribadi dengan Adobe Illustrator"]}],t=Be(window.innerWidth>768?2:1),n=$9(()=>{const s=[];for(let a=0;a<e.length;a+=t.value)s.push(e.slice(a,a+t.value));return s}),r=()=>{Oa(()=>{const s=document.querySelector(".task-group-container"),a=Q2.utils.toArray(".task-slide"),o=a.length;Q2.set(s,{display:"flex",width:`${o*100}vw`}),Q2.set(a,{flex:"0 0 100vw"}),Q2.to(a,{xPercent:-100*(o-1),ease:"none",scrollTrigger:{trigger:s,start:"top top",end:()=>`+=${o*window.innerWidth}`,scrub:!0,pin:!0,anticipatePin:1,snap:1/(o-1)}})})};return r0(()=>r()),Se(n,()=>r()),window.addEventListener("resize",()=>{t.value=window.innerWidth>768?2:1}),(s,a)=>(ne(),ce("section",Ym,[r2("div",jm,[r2("div",Km,[r2("div",Zm,[(ne(!0),ce(ke,null,hn(n.value,(o,l)=>(ne(),ce("div",{class:"task-slide",key:l},[(ne(!0),ce(ke,null,hn(o,c=>(ne(),ce("div",{class:"task-card",key:c.title},[c.image?(ne(),ce("div",Jm,[r2("img",{src:c.image,alt:"Gambar Project"},null,8,Qm)])):X6("",!0),r2("div",e_,[r2("h3",null,S0(c.title),1),r2("ul",null,[(ne(!0),ce(ke,null,hn(c.items,(u,f)=>(ne(),ce("li",{key:f},S0(u),1))),128))])])]))),128))]))),128))])])])]))}};/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const yl="179",n_=0,zc=1,i_=2,yf=1,r_=2,N3=3,O0=0,bt=1,W3=2,w0=0,fi=1,B4=2,Hc=3,Vc=4,s_=5,rn=100,a_=101,o_=102,l_=103,c_=104,u_=200,f_=201,h_=202,d_=203,z4=204,H4=205,p_=206,m_=207,__=208,g_=209,v_=210,x_=211,y_=212,M_=213,S_=214,V4=0,G4=1,W4=2,Ei=3,X4=4,q4=5,$4=6,Y4=7,Mf=0,b_=1,E_=2,A0=0,T_=1,w_=2,A_=3,C_=4,R_=5,P_=6,L_=7,Sf=300,Ti=301,wi=302,j4=303,K4=304,Wa=306,Z4=1e3,cn=1001,J4=1002,f3=1003,D_=1004,fs=1005,b3=1006,Mo=1007,un=1008,t0=1009,bf=1010,Ef=1011,Ir=1012,Ml=1013,Tn=1014,q3=1015,Vr=1016,Sl=1017,bl=1018,Ur=1020,Tf=35902,wf=1021,Af=1022,c3=1023,Or=1026,Fr=1027,Cf=1028,El=1029,Rf=1030,Tl=1031,wl=1033,Ks=33776,Zs=33777,Js=33778,Qs=33779,Q4=35840,e9=35841,t9=35842,n9=35843,i9=36196,r9=37492,s9=37496,a9=37808,o9=37809,l9=37810,c9=37811,u9=37812,f9=37813,h9=37814,d9=37815,p9=37816,m9=37817,_9=37818,g9=37819,v9=37820,x9=37821,ea=36492,y9=36494,M9=36495,Pf=36283,S9=36284,b9=36285,E9=36286,I_=3200,U_=3201,O_=0,F_=1,m0="",Gt="srgb",Ai="srgb-linear",Ea="linear",z2="srgb",In=7680,Gc=519,N_=512,k_=513,B_=514,Lf=515,z_=516,H_=517,V_=518,G_=519,Wc=35044,Xc="300 es",E3=2e3,Ta=2001;class Ri{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const r=n[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,a=r.length;s<a;s++)r[s].call(this,e);e.target=null}}}const Xe=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],So=Math.PI/180,T9=180/Math.PI;function Gr(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Xe[i&255]+Xe[i>>8&255]+Xe[i>>16&255]+Xe[i>>24&255]+"-"+Xe[e&255]+Xe[e>>8&255]+"-"+Xe[e>>16&15|64]+Xe[e>>24&255]+"-"+Xe[t&63|128]+Xe[t>>8&255]+"-"+Xe[t>>16&255]+Xe[t>>24&255]+Xe[n&255]+Xe[n>>8&255]+Xe[n>>16&255]+Xe[n>>24&255]).toLowerCase()}function E2(i,e,t){return Math.max(e,Math.min(t,i))}function W_(i,e){return(i%e+e)%e}function bo(i,e,t){return(1-t)*i+t*e}function zi(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function _t(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}class H2{constructor(e=0,t=0){H2.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=E2(this.x,e.x,t.x),this.y=E2(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=E2(this.x,e,t),this.y=E2(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(E2(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(E2(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*r+e.x,this.y=s*r+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Wr{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,a,o){let l=n[r+0],c=n[r+1],u=n[r+2],f=n[r+3];const h=s[a+0],d=s[a+1],g=s[a+2],_=s[a+3];if(o===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f;return}if(o===1){e[t+0]=h,e[t+1]=d,e[t+2]=g,e[t+3]=_;return}if(f!==_||l!==h||c!==d||u!==g){let m=1-o;const p=l*h+c*d+u*g+f*_,b=p>=0?1:-1,w=1-p*p;if(w>Number.EPSILON){const C=Math.sqrt(w),A=Math.atan2(C,p*b);m=Math.sin(m*A)/C,o=Math.sin(o*A)/C}const y=o*b;if(l=l*m+h*y,c=c*m+d*y,u=u*m+g*y,f=f*m+_*y,m===1-o){const C=1/Math.sqrt(l*l+c*c+u*u+f*f);l*=C,c*=C,u*=C,f*=C}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f}static multiplyQuaternionsFlat(e,t,n,r,s,a){const o=n[r],l=n[r+1],c=n[r+2],u=n[r+3],f=s[a],h=s[a+1],d=s[a+2],g=s[a+3];return e[t]=o*g+u*f+l*d-c*h,e[t+1]=l*g+u*h+c*f-o*d,e[t+2]=c*g+u*d+o*h-l*f,e[t+3]=u*g-o*f-l*h-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,r=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(n/2),u=o(r/2),f=o(s/2),h=l(n/2),d=l(r/2),g=l(s/2);switch(a){case"XYZ":this._x=h*u*f+c*d*g,this._y=c*d*f-h*u*g,this._z=c*u*g+h*d*f,this._w=c*u*f-h*d*g;break;case"YXZ":this._x=h*u*f+c*d*g,this._y=c*d*f-h*u*g,this._z=c*u*g-h*d*f,this._w=c*u*f+h*d*g;break;case"ZXY":this._x=h*u*f-c*d*g,this._y=c*d*f+h*u*g,this._z=c*u*g+h*d*f,this._w=c*u*f-h*d*g;break;case"ZYX":this._x=h*u*f-c*d*g,this._y=c*d*f+h*u*g,this._z=c*u*g-h*d*f,this._w=c*u*f+h*d*g;break;case"YZX":this._x=h*u*f+c*d*g,this._y=c*d*f+h*u*g,this._z=c*u*g-h*d*f,this._w=c*u*f-h*d*g;break;case"XZY":this._x=h*u*f-c*d*g,this._y=c*d*f-h*u*g,this._z=c*u*g+h*d*f,this._w=c*u*f+h*d*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],a=t[1],o=t[5],l=t[9],c=t[2],u=t[6],f=t[10],h=n+o+f;if(h>0){const d=.5/Math.sqrt(h+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(a-r)*d}else if(n>o&&n>f){const d=2*Math.sqrt(1+n-o-f);this._w=(u-l)/d,this._x=.25*d,this._y=(r+a)/d,this._z=(s+c)/d}else if(o>f){const d=2*Math.sqrt(1+o-n-f);this._w=(s-c)/d,this._x=(r+a)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+f-n-o);this._w=(a-r)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(E2(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,a=e._w,o=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+a*o+r*c-s*l,this._y=r*u+a*l+s*o-n*c,this._z=s*u+a*c+n*l-r*o,this._w=a*u-n*o-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,a=this._w;let o=a*e._w+n*e._x+r*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=r,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const d=1-t;return this._w=d*a+t*this._w,this._x=d*n+t*this._x,this._y=d*r+t*this._y,this._z=d*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,o),f=Math.sin((1-t)*u)/c,h=Math.sin(t*u)/c;return this._w=a*f+this._w*h,this._x=n*f+this._x*h,this._y=r*f+this._y*h,this._z=s*f+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),r=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class c1{constructor(e=0,t=0,n=0){c1.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(qc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(qc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,a=e.y,o=e.z,l=e.w,c=2*(a*r-o*n),u=2*(o*t-s*r),f=2*(s*n-a*t);return this.x=t+l*c+a*f-o*u,this.y=n+l*u+o*c-s*f,this.z=r+l*f+s*u-a*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=E2(this.x,e.x,t.x),this.y=E2(this.y,e.y,t.y),this.z=E2(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=E2(this.x,e,t),this.y=E2(this.y,e,t),this.z=E2(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(E2(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,a=t.x,o=t.y,l=t.z;return this.x=r*l-s*o,this.y=s*a-n*l,this.z=n*o-r*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Eo.copy(this).projectOnVector(e),this.sub(Eo)}reflect(e){return this.sub(Eo.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(E2(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Eo=new c1,qc=new Wr;class g2{constructor(e,t,n,r,s,a,o,l,c){g2.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,a,o,l,c)}set(e,t,n,r,s,a,o,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=o,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=a,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,a=n[0],o=n[3],l=n[6],c=n[1],u=n[4],f=n[7],h=n[2],d=n[5],g=n[8],_=r[0],m=r[3],p=r[6],b=r[1],w=r[4],y=r[7],C=r[2],A=r[5],L=r[8];return s[0]=a*_+o*b+l*C,s[3]=a*m+o*w+l*A,s[6]=a*p+o*y+l*L,s[1]=c*_+u*b+f*C,s[4]=c*m+u*w+f*A,s[7]=c*p+u*y+f*L,s[2]=h*_+d*b+g*C,s[5]=h*m+d*w+g*A,s[8]=h*p+d*y+g*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8];return t*a*u-t*o*c-n*s*u+n*o*l+r*s*c-r*a*l}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8],f=u*a-o*c,h=o*l-u*s,d=c*s-a*l,g=t*f+n*h+r*d;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/g;return e[0]=f*_,e[1]=(r*c-u*n)*_,e[2]=(o*n-r*a)*_,e[3]=h*_,e[4]=(u*t-r*l)*_,e[5]=(r*s-o*t)*_,e[6]=d*_,e[7]=(n*l-c*t)*_,e[8]=(a*t-n*s)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,a,o){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*a+c*o)+a+e,-r*c,r*l,-r*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(To.makeScale(e,t)),this}rotate(e){return this.premultiply(To.makeRotation(-e)),this}translate(e,t){return this.premultiply(To.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const To=new g2;function Df(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function wa(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function X_(){const i=wa("canvas");return i.style.display="block",i}const $c={};function hi(i){i in $c||($c[i]=!0,console.warn(i))}function q_(i,e,t){return new Promise(function(n,r){function s(){switch(i.clientWaitSync(e,i.SYNC_FLUSH_COMMANDS_BIT,0)){case i.WAIT_FAILED:r();break;case i.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}const Yc=new g2().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),jc=new g2().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function $_(){const i={enabled:!0,workingColorSpace:Ai,spaces:{},convert:function(r,s,a){return this.enabled===!1||s===a||!s||!a||(this.spaces[s].transfer===z2&&(r.r=j3(r.r),r.g=j3(r.g),r.b=j3(r.b)),this.spaces[s].primaries!==this.spaces[a].primaries&&(r.applyMatrix3(this.spaces[s].toXYZ),r.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===z2&&(r.r=di(r.r),r.g=di(r.g),r.b=di(r.b))),r},workingToColorSpace:function(r,s){return this.convert(r,this.workingColorSpace,s)},colorSpaceToWorking:function(r,s){return this.convert(r,s,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===m0?Ea:this.spaces[r].transfer},getLuminanceCoefficients:function(r,s=this.workingColorSpace){return r.fromArray(this.spaces[s].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,s,a){return r.copy(this.spaces[s].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(r,s){return hi("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),i.workingToColorSpace(r,s)},toWorkingColorSpace:function(r,s){return hi("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),i.colorSpaceToWorking(r,s)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return i.define({[Ai]:{primaries:e,whitePoint:n,transfer:Ea,toXYZ:Yc,fromXYZ:jc,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Gt},outputColorSpaceConfig:{drawingBufferColorSpace:Gt}},[Gt]:{primaries:e,whitePoint:n,transfer:z2,toXYZ:Yc,fromXYZ:jc,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Gt}}}),i}const L2=$_();function j3(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function di(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let Un;class Y_{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{Un===void 0&&(Un=wa("canvas")),Un.width=e.width,Un.height=e.height;const r=Un.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),n=Un}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=wa("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let a=0;a<s.length;a++)s[a]=j3(s[a]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(j3(t[n]/255)*255):t[n]=j3(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let j_=0;class Al{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:j_++}),this.uuid=Gr(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let a=0,o=r.length;a<o;a++)r[a].isDataTexture?s.push(wo(r[a].image)):s.push(wo(r[a]))}else s=wo(r);n.url=s}return t||(e.images[this.uuid]=n),n}}function wo(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?Y_.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let K_=0;const Ao=new c1;class ht extends Ri{constructor(e=ht.DEFAULT_IMAGE,t=ht.DEFAULT_MAPPING,n=cn,r=cn,s=b3,a=un,o=c3,l=t0,c=ht.DEFAULT_ANISOTROPY,u=m0){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:K_++}),this.uuid=Gr(),this.name="",this.source=new Al(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new H2(0,0),this.repeat=new H2(1,1),this.center=new H2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new g2,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Ao).x}get height(){return this.source.getSize(Ao).y}get depth(){return this.source.getSize(Ao).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}r&&n&&r.isVector2&&n.isVector2||r&&n&&r.isVector3&&n.isVector3||r&&n&&r.isMatrix3&&n.isMatrix3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Sf)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Z4:e.x=e.x-Math.floor(e.x);break;case cn:e.x=e.x<0?0:1;break;case J4:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Z4:e.y=e.y-Math.floor(e.y);break;case cn:e.y=e.y<0?0:1;break;case J4:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}ht.DEFAULT_IMAGE=null;ht.DEFAULT_MAPPING=Sf;ht.DEFAULT_ANISOTROPY=1;class he{constructor(e=0,t=0,n=0,r=1){he.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const l=e.elements,c=l[0],u=l[4],f=l[8],h=l[1],d=l[5],g=l[9],_=l[2],m=l[6],p=l[10];if(Math.abs(u-h)<.01&&Math.abs(f-_)<.01&&Math.abs(g-m)<.01){if(Math.abs(u+h)<.1&&Math.abs(f+_)<.1&&Math.abs(g+m)<.1&&Math.abs(c+d+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(c+1)/2,y=(d+1)/2,C=(p+1)/2,A=(u+h)/4,L=(f+_)/4,N=(g+m)/4;return w>y&&w>C?w<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(w),r=A/n,s=L/n):y>C?y<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(y),n=A/r,s=N/r):C<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(C),n=L/s,r=N/s),this.set(n,r,s,t),this}let b=Math.sqrt((m-g)*(m-g)+(f-_)*(f-_)+(h-u)*(h-u));return Math.abs(b)<.001&&(b=1),this.x=(m-g)/b,this.y=(f-_)/b,this.z=(h-u)/b,this.w=Math.acos((c+d+p-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=E2(this.x,e.x,t.x),this.y=E2(this.y,e.y,t.y),this.z=E2(this.z,e.z,t.z),this.w=E2(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=E2(this.x,e,t),this.y=E2(this.y,e,t),this.z=E2(this.z,e,t),this.w=E2(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(E2(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Z_ extends Ri{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:b3,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new he(0,0,e,t),this.scissorTest=!1,this.viewport=new he(0,0,e,t);const r={width:e,height:t,depth:n.depth},s=new ht(r);this.textures=[];const a=n.count;for(let o=0;o<a;o++)this.textures[o]=s.clone(),this.textures[o].isRenderTargetTexture=!0,this.textures[o].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:b3,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=n,this.textures[r].isArrayTexture=this.textures[r].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const r=Object.assign({},e.textures[t].image);this.textures[t].source=new Al(r)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class wn extends Z_{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class If extends ht{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=f3,this.minFilter=f3,this.wrapR=cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class J_ extends ht{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=f3,this.minFilter=f3,this.wrapR=cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Xr{constructor(e=new c1(1/0,1/0,1/0),t=new c1(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(n3.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(n3.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=n3.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=s.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,n3):n3.fromBufferAttribute(s,a),n3.applyMatrix4(e.matrixWorld),this.expandByPoint(n3);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),hs.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),hs.copy(n.boundingBox)),hs.applyMatrix4(e.matrixWorld),this.union(hs)}const r=e.children;for(let s=0,a=r.length;s<a;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,n3),n3.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Hi),ds.subVectors(this.max,Hi),On.subVectors(e.a,Hi),Fn.subVectors(e.b,Hi),Nn.subVectors(e.c,Hi),a0.subVectors(Fn,On),o0.subVectors(Nn,Fn),W0.subVectors(On,Nn);let t=[0,-a0.z,a0.y,0,-o0.z,o0.y,0,-W0.z,W0.y,a0.z,0,-a0.x,o0.z,0,-o0.x,W0.z,0,-W0.x,-a0.y,a0.x,0,-o0.y,o0.x,0,-W0.y,W0.x,0];return!Co(t,On,Fn,Nn,ds)||(t=[1,0,0,0,1,0,0,0,1],!Co(t,On,Fn,Nn,ds))?!1:(ps.crossVectors(a0,o0),t=[ps.x,ps.y,ps.z],Co(t,On,Fn,Nn,ds))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,n3).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(n3).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(D3[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),D3[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),D3[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),D3[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),D3[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),D3[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),D3[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),D3[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(D3),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const D3=[new c1,new c1,new c1,new c1,new c1,new c1,new c1,new c1],n3=new c1,hs=new Xr,On=new c1,Fn=new c1,Nn=new c1,a0=new c1,o0=new c1,W0=new c1,Hi=new c1,ds=new c1,ps=new c1,X0=new c1;function Co(i,e,t,n,r){for(let s=0,a=i.length-3;s<=a;s+=3){X0.fromArray(i,s);const o=r.x*Math.abs(X0.x)+r.y*Math.abs(X0.y)+r.z*Math.abs(X0.z),l=e.dot(X0),c=t.dot(X0),u=n.dot(X0);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>o)return!1}return!0}const Q_=new Xr,Vi=new c1,Ro=new c1;class Xa{constructor(e=new c1,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Q_.setFromPoints(e).getCenter(n);let r=0;for(let s=0,a=e.length;s<a;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Vi.subVectors(e,this.center);const t=Vi.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.addScaledVector(Vi,r/n),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Ro.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Vi.copy(e.center).add(Ro)),this.expandByPoint(Vi.copy(e.center).sub(Ro))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const I3=new c1,Po=new c1,ms=new c1,l0=new c1,Lo=new c1,_s=new c1,Do=new c1;class Uf{constructor(e=new c1,t=new c1(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,I3)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=I3.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(I3.copy(this.origin).addScaledVector(this.direction,t),I3.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){Po.copy(e).add(t).multiplyScalar(.5),ms.copy(t).sub(e).normalize(),l0.copy(this.origin).sub(Po);const s=e.distanceTo(t)*.5,a=-this.direction.dot(ms),o=l0.dot(this.direction),l=-l0.dot(ms),c=l0.lengthSq(),u=Math.abs(1-a*a);let f,h,d,g;if(u>0)if(f=a*l-o,h=a*o-l,g=s*u,f>=0)if(h>=-g)if(h<=g){const _=1/u;f*=_,h*=_,d=f*(f+a*h+2*o)+h*(a*f+h+2*l)+c}else h=s,f=Math.max(0,-(a*h+o)),d=-f*f+h*(h+2*l)+c;else h=-s,f=Math.max(0,-(a*h+o)),d=-f*f+h*(h+2*l)+c;else h<=-g?(f=Math.max(0,-(-a*s+o)),h=f>0?-s:Math.min(Math.max(-s,-l),s),d=-f*f+h*(h+2*l)+c):h<=g?(f=0,h=Math.min(Math.max(-s,-l),s),d=h*(h+2*l)+c):(f=Math.max(0,-(a*s+o)),h=f>0?s:Math.min(Math.max(-s,-l),s),d=-f*f+h*(h+2*l)+c);else h=a>0?-s:s,f=Math.max(0,-(a*h+o)),d=-f*f+h*(h+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,f),r&&r.copy(Po).addScaledVector(ms,h),d}intersectSphere(e,t){I3.subVectors(e.center,this.origin);const n=I3.dot(this.direction),r=I3.dot(I3)-n*n,s=e.radius*e.radius;if(r>s)return null;const a=Math.sqrt(s-r),o=n-a,l=n+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,a,o,l;const c=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,h=this.origin;return c>=0?(n=(e.min.x-h.x)*c,r=(e.max.x-h.x)*c):(n=(e.max.x-h.x)*c,r=(e.min.x-h.x)*c),u>=0?(s=(e.min.y-h.y)*u,a=(e.max.y-h.y)*u):(s=(e.max.y-h.y)*u,a=(e.min.y-h.y)*u),n>a||s>r||((s>n||isNaN(n))&&(n=s),(a<r||isNaN(r))&&(r=a),f>=0?(o=(e.min.z-h.z)*f,l=(e.max.z-h.z)*f):(o=(e.max.z-h.z)*f,l=(e.min.z-h.z)*f),n>l||o>r)||((o>n||n!==n)&&(n=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,I3)!==null}intersectTriangle(e,t,n,r,s){Lo.subVectors(t,e),_s.subVectors(n,e),Do.crossVectors(Lo,_s);let a=this.direction.dot(Do),o;if(a>0){if(r)return null;o=1}else if(a<0)o=-1,a=-a;else return null;l0.subVectors(this.origin,e);const l=o*this.direction.dot(_s.crossVectors(l0,_s));if(l<0)return null;const c=o*this.direction.dot(Lo.cross(l0));if(c<0||l+c>a)return null;const u=-o*l0.dot(Do);return u<0?null:this.at(u/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class xe{constructor(e,t,n,r,s,a,o,l,c,u,f,h,d,g,_,m){xe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,a,o,l,c,u,f,h,d,g,_,m)}set(e,t,n,r,s,a,o,l,c,u,f,h,d,g,_,m){const p=this.elements;return p[0]=e,p[4]=t,p[8]=n,p[12]=r,p[1]=s,p[5]=a,p[9]=o,p[13]=l,p[2]=c,p[6]=u,p[10]=f,p[14]=h,p[3]=d,p[7]=g,p[11]=_,p[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new xe().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/kn.setFromMatrixColumn(e,0).length(),s=1/kn.setFromMatrixColumn(e,1).length(),a=1/kn.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),f=Math.sin(s);if(e.order==="XYZ"){const h=a*u,d=a*f,g=o*u,_=o*f;t[0]=l*u,t[4]=-l*f,t[8]=c,t[1]=d+g*c,t[5]=h-_*c,t[9]=-o*l,t[2]=_-h*c,t[6]=g+d*c,t[10]=a*l}else if(e.order==="YXZ"){const h=l*u,d=l*f,g=c*u,_=c*f;t[0]=h+_*o,t[4]=g*o-d,t[8]=a*c,t[1]=a*f,t[5]=a*u,t[9]=-o,t[2]=d*o-g,t[6]=_+h*o,t[10]=a*l}else if(e.order==="ZXY"){const h=l*u,d=l*f,g=c*u,_=c*f;t[0]=h-_*o,t[4]=-a*f,t[8]=g+d*o,t[1]=d+g*o,t[5]=a*u,t[9]=_-h*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const h=a*u,d=a*f,g=o*u,_=o*f;t[0]=l*u,t[4]=g*c-d,t[8]=h*c+_,t[1]=l*f,t[5]=_*c+h,t[9]=d*c-g,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const h=a*l,d=a*c,g=o*l,_=o*c;t[0]=l*u,t[4]=_-h*f,t[8]=g*f+d,t[1]=f,t[5]=a*u,t[9]=-o*u,t[2]=-c*u,t[6]=d*f+g,t[10]=h-_*f}else if(e.order==="XZY"){const h=a*l,d=a*c,g=o*l,_=o*c;t[0]=l*u,t[4]=-f,t[8]=c*u,t[1]=h*f+_,t[5]=a*u,t[9]=d*f-g,t[2]=g*f-d,t[6]=o*u,t[10]=_*f+h}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(eg,e,tg)}lookAt(e,t,n){const r=this.elements;return At.subVectors(e,t),At.lengthSq()===0&&(At.z=1),At.normalize(),c0.crossVectors(n,At),c0.lengthSq()===0&&(Math.abs(n.z)===1?At.x+=1e-4:At.z+=1e-4,At.normalize(),c0.crossVectors(n,At)),c0.normalize(),gs.crossVectors(At,c0),r[0]=c0.x,r[4]=gs.x,r[8]=At.x,r[1]=c0.y,r[5]=gs.y,r[9]=At.y,r[2]=c0.z,r[6]=gs.z,r[10]=At.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,a=n[0],o=n[4],l=n[8],c=n[12],u=n[1],f=n[5],h=n[9],d=n[13],g=n[2],_=n[6],m=n[10],p=n[14],b=n[3],w=n[7],y=n[11],C=n[15],A=r[0],L=r[4],N=r[8],E=r[12],T=r[1],F=r[5],H=r[9],Y=r[13],e1=r[2],i1=r[6],K=r[10],j=r[14],G=r[3],m1=r[7],k=r[11],E1=r[15];return s[0]=a*A+o*T+l*e1+c*G,s[4]=a*L+o*F+l*i1+c*m1,s[8]=a*N+o*H+l*K+c*k,s[12]=a*E+o*Y+l*j+c*E1,s[1]=u*A+f*T+h*e1+d*G,s[5]=u*L+f*F+h*i1+d*m1,s[9]=u*N+f*H+h*K+d*k,s[13]=u*E+f*Y+h*j+d*E1,s[2]=g*A+_*T+m*e1+p*G,s[6]=g*L+_*F+m*i1+p*m1,s[10]=g*N+_*H+m*K+p*k,s[14]=g*E+_*Y+m*j+p*E1,s[3]=b*A+w*T+y*e1+C*G,s[7]=b*L+w*F+y*i1+C*m1,s[11]=b*N+w*H+y*K+C*k,s[15]=b*E+w*Y+y*j+C*E1,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],a=e[1],o=e[5],l=e[9],c=e[13],u=e[2],f=e[6],h=e[10],d=e[14],g=e[3],_=e[7],m=e[11],p=e[15];return g*(+s*l*f-r*c*f-s*o*h+n*c*h+r*o*d-n*l*d)+_*(+t*l*d-t*c*h+s*a*h-r*a*d+r*c*u-s*l*u)+m*(+t*c*f-t*o*d-s*a*f+n*a*d+s*o*u-n*c*u)+p*(-r*o*u-t*l*f+t*o*h+r*a*f-n*a*h+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8],f=e[9],h=e[10],d=e[11],g=e[12],_=e[13],m=e[14],p=e[15],b=f*m*c-_*h*c+_*l*d-o*m*d-f*l*p+o*h*p,w=g*h*c-u*m*c-g*l*d+a*m*d+u*l*p-a*h*p,y=u*_*c-g*f*c+g*o*d-a*_*d-u*o*p+a*f*p,C=g*f*l-u*_*l-g*o*h+a*_*h+u*o*m-a*f*m,A=t*b+n*w+r*y+s*C;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/A;return e[0]=b*L,e[1]=(_*h*s-f*m*s-_*r*d+n*m*d+f*r*p-n*h*p)*L,e[2]=(o*m*s-_*l*s+_*r*c-n*m*c-o*r*p+n*l*p)*L,e[3]=(f*l*s-o*h*s-f*r*c+n*h*c+o*r*d-n*l*d)*L,e[4]=w*L,e[5]=(u*m*s-g*h*s+g*r*d-t*m*d-u*r*p+t*h*p)*L,e[6]=(g*l*s-a*m*s-g*r*c+t*m*c+a*r*p-t*l*p)*L,e[7]=(a*h*s-u*l*s+u*r*c-t*h*c-a*r*d+t*l*d)*L,e[8]=y*L,e[9]=(g*f*s-u*_*s-g*n*d+t*_*d+u*n*p-t*f*p)*L,e[10]=(a*_*s-g*o*s+g*n*c-t*_*c-a*n*p+t*o*p)*L,e[11]=(u*o*s-a*f*s-u*n*c+t*f*c+a*n*d-t*o*d)*L,e[12]=C*L,e[13]=(u*_*r-g*f*r+g*n*h-t*_*h-u*n*m+t*f*m)*L,e[14]=(g*o*r-a*_*r-g*n*l+t*_*l+a*n*m-t*o*m)*L,e[15]=(a*f*r-u*o*r+u*n*l-t*f*l-a*n*h+t*o*h)*L,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,a=e.x,o=e.y,l=e.z,c=s*a,u=s*o;return this.set(c*a+n,c*o-r*l,c*l+r*o,0,c*o+r*l,u*o+n,u*l-r*a,0,c*l-r*o,u*l+r*a,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,a){return this.set(1,n,s,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,a=t._y,o=t._z,l=t._w,c=s+s,u=a+a,f=o+o,h=s*c,d=s*u,g=s*f,_=a*u,m=a*f,p=o*f,b=l*c,w=l*u,y=l*f,C=n.x,A=n.y,L=n.z;return r[0]=(1-(_+p))*C,r[1]=(d+y)*C,r[2]=(g-w)*C,r[3]=0,r[4]=(d-y)*A,r[5]=(1-(h+p))*A,r[6]=(m+b)*A,r[7]=0,r[8]=(g+w)*L,r[9]=(m-b)*L,r[10]=(1-(h+_))*L,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=kn.set(r[0],r[1],r[2]).length();const a=kn.set(r[4],r[5],r[6]).length(),o=kn.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],i3.copy(this);const c=1/s,u=1/a,f=1/o;return i3.elements[0]*=c,i3.elements[1]*=c,i3.elements[2]*=c,i3.elements[4]*=u,i3.elements[5]*=u,i3.elements[6]*=u,i3.elements[8]*=f,i3.elements[9]*=f,i3.elements[10]*=f,t.setFromRotationMatrix(i3),n.x=s,n.y=a,n.z=o,this}makePerspective(e,t,n,r,s,a,o=E3,l=!1){const c=this.elements,u=2*s/(t-e),f=2*s/(n-r),h=(t+e)/(t-e),d=(n+r)/(n-r);let g,_;if(l)g=s/(a-s),_=a*s/(a-s);else if(o===E3)g=-(a+s)/(a-s),_=-2*a*s/(a-s);else if(o===Ta)g=-a/(a-s),_=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return c[0]=u,c[4]=0,c[8]=h,c[12]=0,c[1]=0,c[5]=f,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=g,c[14]=_,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,r,s,a,o=E3,l=!1){const c=this.elements,u=2/(t-e),f=2/(n-r),h=-(t+e)/(t-e),d=-(n+r)/(n-r);let g,_;if(l)g=1/(a-s),_=a/(a-s);else if(o===E3)g=-2/(a-s),_=-(a+s)/(a-s);else if(o===Ta)g=-1/(a-s),_=-s/(a-s);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return c[0]=u,c[4]=0,c[8]=0,c[12]=h,c[1]=0,c[5]=f,c[9]=0,c[13]=d,c[2]=0,c[6]=0,c[10]=g,c[14]=_,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const kn=new c1,i3=new xe,eg=new c1(0,0,0),tg=new c1(1,1,1),c0=new c1,gs=new c1,At=new c1,Kc=new xe,Zc=new Wr;class n0{constructor(e=0,t=0,n=0,r=n0.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],a=r[4],o=r[8],l=r[1],c=r[5],u=r[9],f=r[2],h=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(E2(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(h,c),this._z=0);break;case"YXZ":this._x=Math.asin(-E2(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-f,s),this._z=0);break;case"ZXY":this._x=Math.asin(E2(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-f,d),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-E2(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(E2(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-f,s)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-E2(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Kc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Kc,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Zc.setFromEuler(this),this.setFromQuaternion(Zc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}n0.DEFAULT_ORDER="XYZ";class Of{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ng=0;const Jc=new c1,Bn=new Wr,U3=new xe,vs=new c1,Gi=new c1,ig=new c1,rg=new Wr,Qc=new c1(1,0,0),eu=new c1(0,1,0),tu=new c1(0,0,1),nu={type:"added"},sg={type:"removed"},zn={type:"childadded",child:null},Io={type:"childremoved",child:null};class dt extends Ri{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ng++}),this.uuid=Gr(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=dt.DEFAULT_UP.clone();const e=new c1,t=new n0,n=new Wr,r=new c1(1,1,1);function s(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new xe},normalMatrix:{value:new g2}}),this.matrix=new xe,this.matrixWorld=new xe,this.matrixAutoUpdate=dt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=dt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Of,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Bn.setFromAxisAngle(e,t),this.quaternion.multiply(Bn),this}rotateOnWorldAxis(e,t){return Bn.setFromAxisAngle(e,t),this.quaternion.premultiply(Bn),this}rotateX(e){return this.rotateOnAxis(Qc,e)}rotateY(e){return this.rotateOnAxis(eu,e)}rotateZ(e){return this.rotateOnAxis(tu,e)}translateOnAxis(e,t){return Jc.copy(e).applyQuaternion(this.quaternion),this.position.add(Jc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Qc,e)}translateY(e){return this.translateOnAxis(eu,e)}translateZ(e){return this.translateOnAxis(tu,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(U3.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?vs.copy(e):vs.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Gi.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?U3.lookAt(Gi,vs,this.up):U3.lookAt(vs,Gi,this.up),this.quaternion.setFromRotationMatrix(U3),r&&(U3.extractRotation(r.matrixWorld),Bn.setFromRotationMatrix(U3),this.quaternion.premultiply(Bn.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(nu),zn.child=e,this.dispatchEvent(zn),zn.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(sg),Io.child=e,this.dispatchEvent(Io),Io.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),U3.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),U3.multiply(e.parent.matrixWorld)),e.applyMatrix4(U3),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(nu),zn.child=e,this.dispatchEvent(zn),zn.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const r=this.children;for(let s=0,a=r.length;s<a;s++)r[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gi,e,ig),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gi,rg,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let s=0,a=r.length;s<a;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.geometryInfo=this._geometryInfo.map(o=>({...o,boundingBox:o.boundingBox?o.boundingBox.toJSON():void 0,boundingSphere:o.boundingSphere?o.boundingSphere.toJSON():void 0})),r.instanceInfo=this._instanceInfo.map(o=>({...o})),r.availableInstanceIds=this._availableInstanceIds.slice(),r.availableGeometryIds=this._availableGeometryIds.slice(),r.nextIndexStart=this._nextIndexStart,r.nextVertexStart=this._nextVertexStart,r.geometryCount=this._geometryCount,r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.matricesTexture=this._matricesTexture.toJSON(e),r.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(r.boundingBox=this.boundingBox.toJSON()));function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const f=l[c];s(e.shapes,f)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(s(e.materials,this.material[l]));r.material=o}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(s(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),u=a(e.images),f=a(e.shapes),h=a(e.skeletons),d=a(e.animations),g=a(e.nodes);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),f.length>0&&(n.shapes=f),h.length>0&&(n.skeletons=h),d.length>0&&(n.animations=d),g.length>0&&(n.nodes=g)}return n.object=r,n;function a(o){const l=[];for(const c in o){const u=o[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}dt.DEFAULT_UP=new c1(0,1,0);dt.DEFAULT_MATRIX_AUTO_UPDATE=!0;dt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const r3=new c1,O3=new c1,Uo=new c1,F3=new c1,Hn=new c1,Vn=new c1,iu=new c1,Oo=new c1,Fo=new c1,No=new c1,ko=new he,Bo=new he,zo=new he;class a3{constructor(e=new c1,t=new c1,n=new c1){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),r3.subVectors(e,t),r.cross(r3);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){r3.subVectors(r,t),O3.subVectors(n,t),Uo.subVectors(e,t);const a=r3.dot(r3),o=r3.dot(O3),l=r3.dot(Uo),c=O3.dot(O3),u=O3.dot(Uo),f=a*c-o*o;if(f===0)return s.set(0,0,0),null;const h=1/f,d=(c*l-o*u)*h,g=(a*u-o*l)*h;return s.set(1-d-g,g,d)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,F3)===null?!1:F3.x>=0&&F3.y>=0&&F3.x+F3.y<=1}static getInterpolation(e,t,n,r,s,a,o,l){return this.getBarycoord(e,t,n,r,F3)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,F3.x),l.addScaledVector(a,F3.y),l.addScaledVector(o,F3.z),l)}static getInterpolatedAttribute(e,t,n,r,s,a){return ko.setScalar(0),Bo.setScalar(0),zo.setScalar(0),ko.fromBufferAttribute(e,t),Bo.fromBufferAttribute(e,n),zo.fromBufferAttribute(e,r),a.setScalar(0),a.addScaledVector(ko,s.x),a.addScaledVector(Bo,s.y),a.addScaledVector(zo,s.z),a}static isFrontFacing(e,t,n,r){return r3.subVectors(n,t),O3.subVectors(e,t),r3.cross(O3).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return r3.subVectors(this.c,this.b),O3.subVectors(this.a,this.b),r3.cross(O3).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return a3.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return a3.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,r,s){return a3.getInterpolation(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return a3.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return a3.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let a,o;Hn.subVectors(r,n),Vn.subVectors(s,n),Oo.subVectors(e,n);const l=Hn.dot(Oo),c=Vn.dot(Oo);if(l<=0&&c<=0)return t.copy(n);Fo.subVectors(e,r);const u=Hn.dot(Fo),f=Vn.dot(Fo);if(u>=0&&f<=u)return t.copy(r);const h=l*f-u*c;if(h<=0&&l>=0&&u<=0)return a=l/(l-u),t.copy(n).addScaledVector(Hn,a);No.subVectors(e,s);const d=Hn.dot(No),g=Vn.dot(No);if(g>=0&&d<=g)return t.copy(s);const _=d*c-l*g;if(_<=0&&c>=0&&g<=0)return o=c/(c-g),t.copy(n).addScaledVector(Vn,o);const m=u*g-d*f;if(m<=0&&f-u>=0&&d-g>=0)return iu.subVectors(s,r),o=(f-u)/(f-u+(d-g)),t.copy(r).addScaledVector(iu,o);const p=1/(m+_+h);return a=_*p,o=h*p,t.copy(n).addScaledVector(Hn,a).addScaledVector(Vn,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Ff={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},u0={h:0,s:0,l:0},xs={h:0,s:0,l:0};function Ho(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}class R2{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Gt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,L2.colorSpaceToWorking(this,t),this}setRGB(e,t,n,r=L2.workingColorSpace){return this.r=e,this.g=t,this.b=n,L2.colorSpaceToWorking(this,r),this}setHSL(e,t,n,r=L2.workingColorSpace){if(e=W_(e,1),t=E2(t,0,1),n=E2(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,a=2*n-s;this.r=Ho(a,s,e+1/3),this.g=Ho(a,s,e),this.b=Ho(a,s,e-1/3)}return L2.colorSpaceToWorking(this,r),this}setStyle(e,t=Gt){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=r[1],o=r[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Gt){const n=Ff[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=j3(e.r),this.g=j3(e.g),this.b=j3(e.b),this}copyLinearToSRGB(e){return this.r=di(e.r),this.g=di(e.g),this.b=di(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Gt){return L2.workingToColorSpace(qe.copy(this),e),Math.round(E2(qe.r*255,0,255))*65536+Math.round(E2(qe.g*255,0,255))*256+Math.round(E2(qe.b*255,0,255))}getHexString(e=Gt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=L2.workingColorSpace){L2.workingToColorSpace(qe.copy(this),t);const n=qe.r,r=qe.g,s=qe.b,a=Math.max(n,r,s),o=Math.min(n,r,s);let l,c;const u=(o+a)/2;if(o===a)l=0,c=0;else{const f=a-o;switch(c=u<=.5?f/(a+o):f/(2-a-o),a){case n:l=(r-s)/f+(r<s?6:0);break;case r:l=(s-n)/f+2;break;case s:l=(n-r)/f+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=L2.workingColorSpace){return L2.workingToColorSpace(qe.copy(this),t),e.r=qe.r,e.g=qe.g,e.b=qe.b,e}getStyle(e=Gt){L2.workingToColorSpace(qe.copy(this),e);const t=qe.r,n=qe.g,r=qe.b;return e!==Gt?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(r*255)})`}offsetHSL(e,t,n){return this.getHSL(u0),this.setHSL(u0.h+e,u0.s+t,u0.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(u0),e.getHSL(xs);const n=bo(u0.h,xs.h,t),r=bo(u0.s,xs.s,t),s=bo(u0.l,xs.l,t);return this.setHSL(n,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*r,this.g=s[1]*t+s[4]*n+s[7]*r,this.b=s[2]*t+s[5]*n+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const qe=new R2;R2.NAMES=Ff;let ag=0;class qr extends Ri{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ag++}),this.uuid=Gr(),this.name="",this.type="Material",this.blending=fi,this.side=O0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=z4,this.blendDst=H4,this.blendEquation=rn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new R2(0,0,0),this.blendAlpha=0,this.depthFunc=Ei,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Gc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=In,this.stencilZFail=In,this.stencilZPass=In,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==fi&&(n.blending=this.blending),this.side!==O0&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==z4&&(n.blendSrc=this.blendSrc),this.blendDst!==H4&&(n.blendDst=this.blendDst),this.blendEquation!==rn&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Ei&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Gc&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==In&&(n.stencilFail=this.stencilFail),this.stencilZFail!==In&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==In&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function r(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(t){const s=r(e.textures),a=r(e.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Nf extends qr{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new R2(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new n0,this.combine=Mf,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const me=new c1,ys=new H2;let og=0;class e3{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:og++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Wc,this.updateRanges=[],this.gpuType=q3,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)ys.fromBufferAttribute(this,t),ys.applyMatrix3(e),this.setXY(t,ys.x,ys.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)me.fromBufferAttribute(this,t),me.applyMatrix3(e),this.setXYZ(t,me.x,me.y,me.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)me.fromBufferAttribute(this,t),me.applyMatrix4(e),this.setXYZ(t,me.x,me.y,me.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)me.fromBufferAttribute(this,t),me.applyNormalMatrix(e),this.setXYZ(t,me.x,me.y,me.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)me.fromBufferAttribute(this,t),me.transformDirection(e),this.setXYZ(t,me.x,me.y,me.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=zi(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=_t(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=zi(t,this.array)),t}setX(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=zi(t,this.array)),t}setY(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=zi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=zi(t,this.array)),t}setW(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array),r=_t(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array),r=_t(r,this.array),s=_t(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Wc&&(e.usage=this.usage),e}}class kf extends e3{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Bf extends e3{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class yn extends e3{constructor(e,t,n){super(new Float32Array(e),t,n)}}let lg=0;const Ht=new xe,Vo=new dt,Gn=new c1,Ct=new Xr,Wi=new Xr,Re=new c1;class s0 extends Ri{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:lg++}),this.uuid=Gr(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Df(e)?Bf:kf)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new g2().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ht.makeRotationFromQuaternion(e),this.applyMatrix4(Ht),this}rotateX(e){return Ht.makeRotationX(e),this.applyMatrix4(Ht),this}rotateY(e){return Ht.makeRotationY(e),this.applyMatrix4(Ht),this}rotateZ(e){return Ht.makeRotationZ(e),this.applyMatrix4(Ht),this}translate(e,t,n){return Ht.makeTranslation(e,t,n),this.applyMatrix4(Ht),this}scale(e,t,n){return Ht.makeScale(e,t,n),this.applyMatrix4(Ht),this}lookAt(e){return Vo.lookAt(e),Vo.updateMatrix(),this.applyMatrix4(Vo.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Gn).negate(),this.translate(Gn.x,Gn.y,Gn.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let r=0,s=e.length;r<s;r++){const a=e[r];n.push(a.x,a.y,a.z||0)}this.setAttribute("position",new yn(n,3))}else{const n=Math.min(e.length,t.count);for(let r=0;r<n;r++){const s=e[r];t.setXYZ(r,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Xr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new c1(-1/0,-1/0,-1/0),new c1(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];Ct.setFromBufferAttribute(s),this.morphTargetsRelative?(Re.addVectors(this.boundingBox.min,Ct.min),this.boundingBox.expandByPoint(Re),Re.addVectors(this.boundingBox.max,Ct.max),this.boundingBox.expandByPoint(Re)):(this.boundingBox.expandByPoint(Ct.min),this.boundingBox.expandByPoint(Ct.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Xa);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new c1,1/0);return}if(e){const n=this.boundingSphere.center;if(Ct.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const o=t[s];Wi.setFromBufferAttribute(o),this.morphTargetsRelative?(Re.addVectors(Ct.min,Wi.min),Ct.expandByPoint(Re),Re.addVectors(Ct.max,Wi.max),Ct.expandByPoint(Re)):(Ct.expandByPoint(Wi.min),Ct.expandByPoint(Wi.max))}Ct.getCenter(n);let r=0;for(let s=0,a=e.count;s<a;s++)Re.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(Re));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],l=this.morphTargetsRelative;for(let c=0,u=o.count;c<u;c++)Re.fromBufferAttribute(o,c),l&&(Gn.fromBufferAttribute(e,c),Re.add(Gn)),r=Math.max(r,n.distanceToSquared(Re))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new e3(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),o=[],l=[];for(let N=0;N<n.count;N++)o[N]=new c1,l[N]=new c1;const c=new c1,u=new c1,f=new c1,h=new H2,d=new H2,g=new H2,_=new c1,m=new c1;function p(N,E,T){c.fromBufferAttribute(n,N),u.fromBufferAttribute(n,E),f.fromBufferAttribute(n,T),h.fromBufferAttribute(s,N),d.fromBufferAttribute(s,E),g.fromBufferAttribute(s,T),u.sub(c),f.sub(c),d.sub(h),g.sub(h);const F=1/(d.x*g.y-g.x*d.y);isFinite(F)&&(_.copy(u).multiplyScalar(g.y).addScaledVector(f,-d.y).multiplyScalar(F),m.copy(f).multiplyScalar(d.x).addScaledVector(u,-g.x).multiplyScalar(F),o[N].add(_),o[E].add(_),o[T].add(_),l[N].add(m),l[E].add(m),l[T].add(m))}let b=this.groups;b.length===0&&(b=[{start:0,count:e.count}]);for(let N=0,E=b.length;N<E;++N){const T=b[N],F=T.start,H=T.count;for(let Y=F,e1=F+H;Y<e1;Y+=3)p(e.getX(Y+0),e.getX(Y+1),e.getX(Y+2))}const w=new c1,y=new c1,C=new c1,A=new c1;function L(N){C.fromBufferAttribute(r,N),A.copy(C);const E=o[N];w.copy(E),w.sub(C.multiplyScalar(C.dot(E))).normalize(),y.crossVectors(A,E);const F=y.dot(l[N])<0?-1:1;a.setXYZW(N,w.x,w.y,w.z,F)}for(let N=0,E=b.length;N<E;++N){const T=b[N],F=T.start,H=T.count;for(let Y=F,e1=F+H;Y<e1;Y+=3)L(e.getX(Y+0)),L(e.getX(Y+1)),L(e.getX(Y+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new e3(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let h=0,d=n.count;h<d;h++)n.setXYZ(h,0,0,0);const r=new c1,s=new c1,a=new c1,o=new c1,l=new c1,c=new c1,u=new c1,f=new c1;if(e)for(let h=0,d=e.count;h<d;h+=3){const g=e.getX(h+0),_=e.getX(h+1),m=e.getX(h+2);r.fromBufferAttribute(t,g),s.fromBufferAttribute(t,_),a.fromBufferAttribute(t,m),u.subVectors(a,s),f.subVectors(r,s),u.cross(f),o.fromBufferAttribute(n,g),l.fromBufferAttribute(n,_),c.fromBufferAttribute(n,m),o.add(u),l.add(u),c.add(u),n.setXYZ(g,o.x,o.y,o.z),n.setXYZ(_,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let h=0,d=t.count;h<d;h+=3)r.fromBufferAttribute(t,h+0),s.fromBufferAttribute(t,h+1),a.fromBufferAttribute(t,h+2),u.subVectors(a,s),f.subVectors(r,s),u.cross(f),n.setXYZ(h+0,u.x,u.y,u.z),n.setXYZ(h+1,u.x,u.y,u.z),n.setXYZ(h+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Re.fromBufferAttribute(e,t),Re.normalize(),e.setXYZ(t,Re.x,Re.y,Re.z)}toNonIndexed(){function e(o,l){const c=o.array,u=o.itemSize,f=o.normalized,h=new c.constructor(l.length*u);let d=0,g=0;for(let _=0,m=l.length;_<m;_++){o.isInterleavedBufferAttribute?d=l[_]*o.data.stride+o.offset:d=l[_]*u;for(let p=0;p<u;p++)h[g++]=c[d++]}return new e3(h,u,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new s0,n=this.index.array,r=this.attributes;for(const o in r){const l=r[o],c=e(l,n);t.setAttribute(o,c)}const s=this.morphAttributes;for(const o in s){const l=[],c=s[o];for(let u=0,f=c.length;u<f;u++){const h=c[u],d=e(h,n);l.push(d)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let f=0,h=c.length;f<h;f++){const d=c[f];u.push(d.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere=o.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],f=s[c];for(let h=0,d=f.length;h<d;h++)u.push(f[h].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,u=a.length;c<u;c++){const f=a[c];this.addGroup(f.start,f.count,f.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ru=new xe,q0=new Uf,Ms=new Xa,su=new c1,Ss=new c1,bs=new c1,Es=new c1,Go=new c1,Ts=new c1,au=new c1,ws=new c1;class $3 extends dt{constructor(e=new s0,t=new Nf){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}getVertexPosition(e,t){const n=this.geometry,r=n.attributes.position,s=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(r,e);const o=this.morphTargetInfluences;if(s&&o){Ts.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=o[l],f=s[l];u!==0&&(Go.fromBufferAttribute(f,e),a?Ts.addScaledVector(Go,u):Ts.addScaledVector(Go.sub(t),u))}t.add(Ts)}return t}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Ms.copy(n.boundingSphere),Ms.applyMatrix4(s),q0.copy(e.ray).recast(e.near),!(Ms.containsPoint(q0.origin)===!1&&(q0.intersectSphere(Ms,su)===null||q0.origin.distanceToSquared(su)>(e.far-e.near)**2))&&(ru.copy(s).invert(),q0.copy(e.ray).applyMatrix4(ru),!(n.boundingBox!==null&&q0.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,q0)))}_computeIntersections(e,t,n){let r;const s=this.geometry,a=this.material,o=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,f=s.attributes.normal,h=s.groups,d=s.drawRange;if(o!==null)if(Array.isArray(a))for(let g=0,_=h.length;g<_;g++){const m=h[g],p=a[m.materialIndex],b=Math.max(m.start,d.start),w=Math.min(o.count,Math.min(m.start+m.count,d.start+d.count));for(let y=b,C=w;y<C;y+=3){const A=o.getX(y),L=o.getX(y+1),N=o.getX(y+2);r=As(this,p,e,n,c,u,f,A,L,N),r&&(r.faceIndex=Math.floor(y/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const g=Math.max(0,d.start),_=Math.min(o.count,d.start+d.count);for(let m=g,p=_;m<p;m+=3){const b=o.getX(m),w=o.getX(m+1),y=o.getX(m+2);r=As(this,a,e,n,c,u,f,b,w,y),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(a))for(let g=0,_=h.length;g<_;g++){const m=h[g],p=a[m.materialIndex],b=Math.max(m.start,d.start),w=Math.min(l.count,Math.min(m.start+m.count,d.start+d.count));for(let y=b,C=w;y<C;y+=3){const A=y,L=y+1,N=y+2;r=As(this,p,e,n,c,u,f,A,L,N),r&&(r.faceIndex=Math.floor(y/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const g=Math.max(0,d.start),_=Math.min(l.count,d.start+d.count);for(let m=g,p=_;m<p;m+=3){const b=m,w=m+1,y=m+2;r=As(this,a,e,n,c,u,f,b,w,y),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}}}function cg(i,e,t,n,r,s,a,o){let l;if(e.side===bt?l=n.intersectTriangle(a,s,r,!0,o):l=n.intersectTriangle(r,s,a,e.side===O0,o),l===null)return null;ws.copy(o),ws.applyMatrix4(i.matrixWorld);const c=t.ray.origin.distanceTo(ws);return c<t.near||c>t.far?null:{distance:c,point:ws.clone(),object:i}}function As(i,e,t,n,r,s,a,o,l,c){i.getVertexPosition(o,Ss),i.getVertexPosition(l,bs),i.getVertexPosition(c,Es);const u=cg(i,e,t,n,Ss,bs,Es,au);if(u){const f=new c1;a3.getBarycoord(au,Ss,bs,Es,f),r&&(u.uv=a3.getInterpolatedAttribute(r,o,l,c,f,new H2)),s&&(u.uv1=a3.getInterpolatedAttribute(s,o,l,c,f,new H2)),a&&(u.normal=a3.getInterpolatedAttribute(a,o,l,c,f,new c1),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const h={a:o,b:l,c,normal:new c1,materialIndex:0};a3.getNormal(Ss,bs,Es,h.normal),u.face=h,u.barycoord=f}return u}class $r extends s0{constructor(e=1,t=1,n=1,r=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:a};const o=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const l=[],c=[],u=[],f=[];let h=0,d=0;g("z","y","x",-1,-1,n,t,e,a,s,0),g("z","y","x",1,-1,n,t,-e,a,s,1),g("x","z","y",1,1,e,n,t,r,a,2),g("x","z","y",1,-1,e,n,-t,r,a,3),g("x","y","z",1,-1,e,t,n,r,s,4),g("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(l),this.setAttribute("position",new yn(c,3)),this.setAttribute("normal",new yn(u,3)),this.setAttribute("uv",new yn(f,2));function g(_,m,p,b,w,y,C,A,L,N,E){const T=y/L,F=C/N,H=y/2,Y=C/2,e1=A/2,i1=L+1,K=N+1;let j=0,G=0;const m1=new c1;for(let k=0;k<K;k++){const E1=k*F-Y;for(let z1=0;z1<i1;z1++){const c2=z1*T-H;m1[_]=c2*b,m1[m]=E1*w,m1[p]=e1,c.push(m1.x,m1.y,m1.z),m1[_]=0,m1[m]=0,m1[p]=A>0?1:-1,u.push(m1.x,m1.y,m1.z),f.push(z1/L),f.push(1-k/N),j+=1}}for(let k=0;k<N;k++)for(let E1=0;E1<L;E1++){const z1=h+E1+i1*k,c2=h+E1+i1*(k+1),j1=h+(E1+1)+i1*(k+1),r1=h+(E1+1)+i1*k;l.push(z1,c2,r1),l.push(c2,j1,r1),G+=6}o.addGroup(d,G,E),d+=G,h+=j}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new $r(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ci(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function rt(i){const e={};for(let t=0;t<i.length;t++){const n=Ci(i[t]);for(const r in n)e[r]=n[r]}return e}function ug(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function zf(i){const e=i.getRenderTarget();return e===null?i.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:L2.workingColorSpace}const fg={clone:Ci,merge:rt};var hg=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,dg=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class F0 extends qr{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=hg,this.fragmentShader=dg,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ci(e.uniforms),this.uniformsGroups=ug(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const a=this.uniforms[r].value;a&&a.isTexture?t.uniforms[r]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[r]={type:"m4",value:a.toArray()}:t.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Hf extends dt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new xe,this.projectionMatrix=new xe,this.projectionMatrixInverse=new xe,this.coordinateSystem=E3,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const f0=new c1,ou=new H2,lu=new H2;class qt extends Hf{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=T9*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(So*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return T9*2*Math.atan(Math.tan(So*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){f0.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(f0.x,f0.y).multiplyScalar(-e/f0.z),f0.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(f0.x,f0.y).multiplyScalar(-e/f0.z)}getViewSize(e,t){return this.getViewBounds(e,ou,lu),t.subVectors(lu,ou)}setViewOffset(e,t,n,r,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(So*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;s+=a.offsetX*r/l,t-=a.offsetY*n/c,r*=a.width/l,n*=a.height/c}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Wn=-90,Xn=1;class pg extends dt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new qt(Wn,Xn,e,t);r.layers=this.layers,this.add(r);const s=new qt(Wn,Xn,e,t);s.layers=this.layers,this.add(s);const a=new qt(Wn,Xn,e,t);a.layers=this.layers,this.add(a);const o=new qt(Wn,Xn,e,t);o.layers=this.layers,this.add(o);const l=new qt(Wn,Xn,e,t);l.layers=this.layers,this.add(l);const c=new qt(Wn,Xn,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,r,s,a,o,l]=t;for(const c of t)this.remove(c);if(e===E3)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Ta)n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,o,l,c,u]=this.children,f=e.getRenderTarget(),h=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),g=e.xr.enabled;e.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,s),e.setRenderTarget(n,1,r),e.render(t,a),e.setRenderTarget(n,2,r),e.render(t,o),e.setRenderTarget(n,3,r),e.render(t,l),e.setRenderTarget(n,4,r),e.render(t,c),n.texture.generateMipmaps=_,e.setRenderTarget(n,5,r),e.render(t,u),e.setRenderTarget(f,h,d),e.xr.enabled=g,n.texture.needsPMREMUpdate=!0}}class Vf extends ht{constructor(e=[],t=Ti,n,r,s,a,o,l,c,u){super(e,t,n,r,s,a,o,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class mg extends wn{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new Vf(r),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new $r(5,5,5),s=new F0({name:"CubemapFromEquirect",uniforms:Ci(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:bt,blending:w0});s.uniforms.tEquirect.value=t;const a=new $3(r,s),o=t.minFilter;return t.minFilter===un&&(t.minFilter=b3),new pg(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t=!0,n=!0,r=!0){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,r);e.setRenderTarget(s)}}class Cs extends dt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const _g={type:"move"};class Wo{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Cs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Cs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new c1,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new c1),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Cs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new c1,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new c1),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const _ of e.hand.values()){const m=t.getJointPose(_,n),p=this._getHandJoint(c,_);m!==null&&(p.matrix.fromArray(m.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=m.radius),p.visible=m!==null}const u=c.joints["index-finger-tip"],f=c.joints["thumb-tip"],h=u.position.distanceTo(f.position),d=.02,g=.005;c.inputState.pinching&&h>d+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&h<=d-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(r=t.getPose(e.targetRaySpace,n),r===null&&s!==null&&(r=s),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(_g)))}return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Cs;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class gg extends dt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new n0,this.environmentIntensity=1,this.environmentRotation=new n0,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}const Xo=new c1,vg=new c1,xg=new g2;class en{constructor(e=new c1(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=Xo.subVectors(n,t).cross(vg.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Xo),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||xg.getNormalMatrix(e),r=this.coplanarPoint(Xo).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const $0=new Xa,yg=new H2(.5,.5),Rs=new c1;class Gf{constructor(e=new en,t=new en,n=new en,r=new en,s=new en,a=new en){this.planes=[e,t,n,r,s,a]}set(e,t,n,r,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=E3,n=!1){const r=this.planes,s=e.elements,a=s[0],o=s[1],l=s[2],c=s[3],u=s[4],f=s[5],h=s[6],d=s[7],g=s[8],_=s[9],m=s[10],p=s[11],b=s[12],w=s[13],y=s[14],C=s[15];if(r[0].setComponents(c-a,d-u,p-g,C-b).normalize(),r[1].setComponents(c+a,d+u,p+g,C+b).normalize(),r[2].setComponents(c+o,d+f,p+_,C+w).normalize(),r[3].setComponents(c-o,d-f,p-_,C-w).normalize(),n)r[4].setComponents(l,h,m,y).normalize(),r[5].setComponents(c-l,d-h,p-m,C-y).normalize();else if(r[4].setComponents(c-l,d-h,p-m,C-y).normalize(),t===E3)r[5].setComponents(c+l,d+h,p+m,C+y).normalize();else if(t===Ta)r[5].setComponents(l,h,m,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),$0.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),$0.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere($0)}intersectsSprite(e){$0.center.set(0,0,0);const t=yg.distanceTo(e.center);return $0.radius=.7071067811865476+t,$0.applyMatrix4(e.matrixWorld),this.intersectsSphere($0)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Rs.x=r.normal.x>0?e.max.x:e.min.x,Rs.y=r.normal.y>0?e.max.y:e.min.y,Rs.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Rs)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class Wf extends qr{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new R2(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const cu=new xe,w9=new Uf,Ps=new Xa,Ls=new c1;class Mg extends dt{constructor(e=new s0,t=new Wf){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ps.copy(n.boundingSphere),Ps.applyMatrix4(r),Ps.radius+=s,e.ray.intersectsSphere(Ps)===!1)return;cu.copy(r).invert(),w9.copy(e.ray).applyMatrix4(cu);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=n.index,f=n.attributes.position;if(c!==null){const h=Math.max(0,a.start),d=Math.min(c.count,a.start+a.count);for(let g=h,_=d;g<_;g++){const m=c.getX(g);Ls.fromBufferAttribute(f,m),uu(Ls,m,l,r,e,t,this)}}else{const h=Math.max(0,a.start),d=Math.min(f.count,a.start+a.count);for(let g=h,_=d;g<_;g++)Ls.fromBufferAttribute(f,g),uu(Ls,g,l,r,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}function uu(i,e,t,n,r,s,a){const o=w9.distanceSqToPoint(i);if(o<t){const l=new c1;w9.closestPointToPoint(i,l),l.applyMatrix4(n);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class Xf extends ht{constructor(e,t,n=Tn,r,s,a,o=f3,l=f3,c,u=Or,f=1){if(u!==Or&&u!==Fr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const h={width:e,height:t,depth:f};super(h,r,s,a,o,l,u,n,c),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Al(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class qa extends s0{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,a=t/2,o=Math.floor(n),l=Math.floor(r),c=o+1,u=l+1,f=e/o,h=t/l,d=[],g=[],_=[],m=[];for(let p=0;p<u;p++){const b=p*h-a;for(let w=0;w<c;w++){const y=w*f-s;g.push(y,-b,0),_.push(0,0,1),m.push(w/o),m.push(1-p/l)}}for(let p=0;p<l;p++)for(let b=0;b<o;b++){const w=b+c*p,y=b+c*(p+1),C=b+1+c*(p+1),A=b+1+c*p;d.push(w,y,A),d.push(y,C,A)}this.setIndex(d),this.setAttribute("position",new yn(g,3)),this.setAttribute("normal",new yn(_,3)),this.setAttribute("uv",new yn(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qa(e.width,e.height,e.widthSegments,e.heightSegments)}}class Sg extends qr{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=I_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class bg extends qr{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class Eg extends dt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new R2(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class Tg extends Hf{constructor(e=-1,t=1,n=1,r=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,a=n+e,o=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,a=s+c*this.view.width,o-=u*this.view.offsetY,l=o-u*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class wg extends Eg{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Ag extends qt{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}function fu(i,e,t,n){const r=Cg(n);switch(t){case wf:return i*e;case Cf:return i*e/r.components*r.byteLength;case El:return i*e/r.components*r.byteLength;case Rf:return i*e*2/r.components*r.byteLength;case Tl:return i*e*2/r.components*r.byteLength;case Af:return i*e*3/r.components*r.byteLength;case c3:return i*e*4/r.components*r.byteLength;case wl:return i*e*4/r.components*r.byteLength;case Ks:case Zs:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case Js:case Qs:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case e9:case n9:return Math.max(i,16)*Math.max(e,8)/4;case Q4:case t9:return Math.max(i,8)*Math.max(e,8)/2;case i9:case r9:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case s9:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case a9:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case o9:return Math.floor((i+4)/5)*Math.floor((e+3)/4)*16;case l9:return Math.floor((i+4)/5)*Math.floor((e+4)/5)*16;case c9:return Math.floor((i+5)/6)*Math.floor((e+4)/5)*16;case u9:return Math.floor((i+5)/6)*Math.floor((e+5)/6)*16;case f9:return Math.floor((i+7)/8)*Math.floor((e+4)/5)*16;case h9:return Math.floor((i+7)/8)*Math.floor((e+5)/6)*16;case d9:return Math.floor((i+7)/8)*Math.floor((e+7)/8)*16;case p9:return Math.floor((i+9)/10)*Math.floor((e+4)/5)*16;case m9:return Math.floor((i+9)/10)*Math.floor((e+5)/6)*16;case _9:return Math.floor((i+9)/10)*Math.floor((e+7)/8)*16;case g9:return Math.floor((i+9)/10)*Math.floor((e+9)/10)*16;case v9:return Math.floor((i+11)/12)*Math.floor((e+9)/10)*16;case x9:return Math.floor((i+11)/12)*Math.floor((e+11)/12)*16;case ea:case y9:case M9:return Math.ceil(i/4)*Math.ceil(e/4)*16;case Pf:case S9:return Math.ceil(i/4)*Math.ceil(e/4)*8;case b9:case E9:return Math.ceil(i/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function Cg(i){switch(i){case t0:case bf:return{byteLength:1,components:1};case Ir:case Ef:case Vr:return{byteLength:2,components:1};case Sl:case bl:return{byteLength:2,components:4};case Tn:case Ml:case q3:return{byteLength:4,components:1};case Tf:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${i}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:yl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=yl);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function qf(){let i=null,e=!1,t=null,n=null;function r(s,a){t(s,a),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function Rg(i){const e=new WeakMap;function t(o,l){const c=o.array,u=o.usage,f=c.byteLength,h=i.createBuffer();i.bindBuffer(l,h),i.bufferData(l,c,u),o.onUploadCallback();let d;if(c instanceof Float32Array)d=i.FLOAT;else if(typeof Float16Array<"u"&&c instanceof Float16Array)d=i.HALF_FLOAT;else if(c instanceof Uint16Array)o.isFloat16BufferAttribute?d=i.HALF_FLOAT:d=i.UNSIGNED_SHORT;else if(c instanceof Int16Array)d=i.SHORT;else if(c instanceof Uint32Array)d=i.UNSIGNED_INT;else if(c instanceof Int32Array)d=i.INT;else if(c instanceof Int8Array)d=i.BYTE;else if(c instanceof Uint8Array)d=i.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)d=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:h,type:d,bytesPerElement:c.BYTES_PER_ELEMENT,version:o.version,size:f}}function n(o,l,c){const u=l.array,f=l.updateRanges;if(i.bindBuffer(c,o),f.length===0)i.bufferSubData(c,0,u);else{f.sort((d,g)=>d.start-g.start);let h=0;for(let d=1;d<f.length;d++){const g=f[h],_=f[d];_.start<=g.start+g.count+1?g.count=Math.max(g.count,_.start+_.count-g.start):(++h,f[h]=_)}f.length=h+1;for(let d=0,g=f.length;d<g;d++){const _=f[d];i.bufferSubData(c,_.start*u.BYTES_PER_ELEMENT,u,_.start,_.count)}l.clearUpdateRanges()}l.onUploadCallback()}function r(o){return o.isInterleavedBufferAttribute&&(o=o.data),e.get(o)}function s(o){o.isInterleavedBufferAttribute&&(o=o.data);const l=e.get(o);l&&(i.deleteBuffer(l.buffer),e.delete(o))}function a(o,l){if(o.isInterleavedBufferAttribute&&(o=o.data),o.isGLBufferAttribute){const u=e.get(o);(!u||u.version<o.version)&&e.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}const c=e.get(o);if(c===void 0)e.set(o,t(o,l));else if(c.version<o.version){if(c.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(c.buffer,o,l),c.version=o.version}}return{get:r,remove:s,update:a}}var Pg=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,Lg=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Dg=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Ig=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Ug=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,Og=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Fg=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Ng=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,kg=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,Bg=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,zg=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Hg=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Vg=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Gg=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Wg=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Xg=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,qg=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,$g=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Yg=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,jg=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Kg=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Zg=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,Jg=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Qg=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,e8=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,t8=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,n8=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,i8=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,r8=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,s8=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,a8="gl_FragColor = linearToOutputTexel( gl_FragColor );",o8=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,l8=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,c8=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,u8=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,f8=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,h8=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,d8=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,p8=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,m8=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,_8=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,g8=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,v8=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,x8=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,y8=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,M8=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,S8=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,b8=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,E8=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,T8=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,w8=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,A8=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,C8=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,R8=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,P8=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,L8=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,D8=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,I8=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,U8=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,O8=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,F8=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,N8=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,k8=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,B8=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,z8=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,H8=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,V8=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,G8=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,W8=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,X8=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,q8=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,$8=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Y8=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,j8=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,K8=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Z8=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,J8=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Q8=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,ev=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,tv=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,nv=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,iv=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,rv=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,sv=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,av=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,ov=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,lv=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,cv=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,uv=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,fv=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSEDEPTHBUF
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSEDEPTHBUF
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare , distribution.x );
		#endif
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,hv=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,dv=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,pv=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,mv=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,_v=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,gv=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,vv=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,xv=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,yv=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Mv=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Sv=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,bv=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Ev=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Tv=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,wv=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Av=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Cv=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Rv=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Pv=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Lv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Dv=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Iv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Uv=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Ov=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Fv=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSEDEPTHBUF
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,Nv=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,kv=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Bv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,zv=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Hv=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Vv=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Gv=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Wv=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Xv=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qv=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$v=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Yv=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jv=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Kv=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Zv=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Jv=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Qv=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,ex=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tx=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,nx=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ix=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,rx=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,sx=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ax=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ox=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,lx=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,x2={alphahash_fragment:Pg,alphahash_pars_fragment:Lg,alphamap_fragment:Dg,alphamap_pars_fragment:Ig,alphatest_fragment:Ug,alphatest_pars_fragment:Og,aomap_fragment:Fg,aomap_pars_fragment:Ng,batching_pars_vertex:kg,batching_vertex:Bg,begin_vertex:zg,beginnormal_vertex:Hg,bsdfs:Vg,iridescence_fragment:Gg,bumpmap_pars_fragment:Wg,clipping_planes_fragment:Xg,clipping_planes_pars_fragment:qg,clipping_planes_pars_vertex:$g,clipping_planes_vertex:Yg,color_fragment:jg,color_pars_fragment:Kg,color_pars_vertex:Zg,color_vertex:Jg,common:Qg,cube_uv_reflection_fragment:e8,defaultnormal_vertex:t8,displacementmap_pars_vertex:n8,displacementmap_vertex:i8,emissivemap_fragment:r8,emissivemap_pars_fragment:s8,colorspace_fragment:a8,colorspace_pars_fragment:o8,envmap_fragment:l8,envmap_common_pars_fragment:c8,envmap_pars_fragment:u8,envmap_pars_vertex:f8,envmap_physical_pars_fragment:S8,envmap_vertex:h8,fog_vertex:d8,fog_pars_vertex:p8,fog_fragment:m8,fog_pars_fragment:_8,gradientmap_pars_fragment:g8,lightmap_pars_fragment:v8,lights_lambert_fragment:x8,lights_lambert_pars_fragment:y8,lights_pars_begin:M8,lights_toon_fragment:b8,lights_toon_pars_fragment:E8,lights_phong_fragment:T8,lights_phong_pars_fragment:w8,lights_physical_fragment:A8,lights_physical_pars_fragment:C8,lights_fragment_begin:R8,lights_fragment_maps:P8,lights_fragment_end:L8,logdepthbuf_fragment:D8,logdepthbuf_pars_fragment:I8,logdepthbuf_pars_vertex:U8,logdepthbuf_vertex:O8,map_fragment:F8,map_pars_fragment:N8,map_particle_fragment:k8,map_particle_pars_fragment:B8,metalnessmap_fragment:z8,metalnessmap_pars_fragment:H8,morphinstance_vertex:V8,morphcolor_vertex:G8,morphnormal_vertex:W8,morphtarget_pars_vertex:X8,morphtarget_vertex:q8,normal_fragment_begin:$8,normal_fragment_maps:Y8,normal_pars_fragment:j8,normal_pars_vertex:K8,normal_vertex:Z8,normalmap_pars_fragment:J8,clearcoat_normal_fragment_begin:Q8,clearcoat_normal_fragment_maps:ev,clearcoat_pars_fragment:tv,iridescence_pars_fragment:nv,opaque_fragment:iv,packing:rv,premultiplied_alpha_fragment:sv,project_vertex:av,dithering_fragment:ov,dithering_pars_fragment:lv,roughnessmap_fragment:cv,roughnessmap_pars_fragment:uv,shadowmap_pars_fragment:fv,shadowmap_pars_vertex:hv,shadowmap_vertex:dv,shadowmask_pars_fragment:pv,skinbase_vertex:mv,skinning_pars_vertex:_v,skinning_vertex:gv,skinnormal_vertex:vv,specularmap_fragment:xv,specularmap_pars_fragment:yv,tonemapping_fragment:Mv,tonemapping_pars_fragment:Sv,transmission_fragment:bv,transmission_pars_fragment:Ev,uv_pars_fragment:Tv,uv_pars_vertex:wv,uv_vertex:Av,worldpos_vertex:Cv,background_vert:Rv,background_frag:Pv,backgroundCube_vert:Lv,backgroundCube_frag:Dv,cube_vert:Iv,cube_frag:Uv,depth_vert:Ov,depth_frag:Fv,distanceRGBA_vert:Nv,distanceRGBA_frag:kv,equirect_vert:Bv,equirect_frag:zv,linedashed_vert:Hv,linedashed_frag:Vv,meshbasic_vert:Gv,meshbasic_frag:Wv,meshlambert_vert:Xv,meshlambert_frag:qv,meshmatcap_vert:$v,meshmatcap_frag:Yv,meshnormal_vert:jv,meshnormal_frag:Kv,meshphong_vert:Zv,meshphong_frag:Jv,meshphysical_vert:Qv,meshphysical_frag:ex,meshtoon_vert:tx,meshtoon_frag:nx,points_vert:ix,points_frag:rx,shadow_vert:sx,shadow_frag:ax,sprite_vert:ox,sprite_frag:lx},B1={common:{diffuse:{value:new R2(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new g2},alphaMap:{value:null},alphaMapTransform:{value:new g2},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new g2}},envmap:{envMap:{value:null},envMapRotation:{value:new g2},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new g2}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new g2}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new g2},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new g2},normalScale:{value:new H2(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new g2},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new g2}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new g2}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new g2}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new R2(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new R2(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new g2},alphaTest:{value:0},uvTransform:{value:new g2}},sprite:{diffuse:{value:new R2(16777215)},opacity:{value:1},center:{value:new H2(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new g2},alphaMap:{value:null},alphaMapTransform:{value:new g2},alphaTest:{value:0}}},x3={basic:{uniforms:rt([B1.common,B1.specularmap,B1.envmap,B1.aomap,B1.lightmap,B1.fog]),vertexShader:x2.meshbasic_vert,fragmentShader:x2.meshbasic_frag},lambert:{uniforms:rt([B1.common,B1.specularmap,B1.envmap,B1.aomap,B1.lightmap,B1.emissivemap,B1.bumpmap,B1.normalmap,B1.displacementmap,B1.fog,B1.lights,{emissive:{value:new R2(0)}}]),vertexShader:x2.meshlambert_vert,fragmentShader:x2.meshlambert_frag},phong:{uniforms:rt([B1.common,B1.specularmap,B1.envmap,B1.aomap,B1.lightmap,B1.emissivemap,B1.bumpmap,B1.normalmap,B1.displacementmap,B1.fog,B1.lights,{emissive:{value:new R2(0)},specular:{value:new R2(1118481)},shininess:{value:30}}]),vertexShader:x2.meshphong_vert,fragmentShader:x2.meshphong_frag},standard:{uniforms:rt([B1.common,B1.envmap,B1.aomap,B1.lightmap,B1.emissivemap,B1.bumpmap,B1.normalmap,B1.displacementmap,B1.roughnessmap,B1.metalnessmap,B1.fog,B1.lights,{emissive:{value:new R2(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:x2.meshphysical_vert,fragmentShader:x2.meshphysical_frag},toon:{uniforms:rt([B1.common,B1.aomap,B1.lightmap,B1.emissivemap,B1.bumpmap,B1.normalmap,B1.displacementmap,B1.gradientmap,B1.fog,B1.lights,{emissive:{value:new R2(0)}}]),vertexShader:x2.meshtoon_vert,fragmentShader:x2.meshtoon_frag},matcap:{uniforms:rt([B1.common,B1.bumpmap,B1.normalmap,B1.displacementmap,B1.fog,{matcap:{value:null}}]),vertexShader:x2.meshmatcap_vert,fragmentShader:x2.meshmatcap_frag},points:{uniforms:rt([B1.points,B1.fog]),vertexShader:x2.points_vert,fragmentShader:x2.points_frag},dashed:{uniforms:rt([B1.common,B1.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:x2.linedashed_vert,fragmentShader:x2.linedashed_frag},depth:{uniforms:rt([B1.common,B1.displacementmap]),vertexShader:x2.depth_vert,fragmentShader:x2.depth_frag},normal:{uniforms:rt([B1.common,B1.bumpmap,B1.normalmap,B1.displacementmap,{opacity:{value:1}}]),vertexShader:x2.meshnormal_vert,fragmentShader:x2.meshnormal_frag},sprite:{uniforms:rt([B1.sprite,B1.fog]),vertexShader:x2.sprite_vert,fragmentShader:x2.sprite_frag},background:{uniforms:{uvTransform:{value:new g2},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:x2.background_vert,fragmentShader:x2.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new g2}},vertexShader:x2.backgroundCube_vert,fragmentShader:x2.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:x2.cube_vert,fragmentShader:x2.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:x2.equirect_vert,fragmentShader:x2.equirect_frag},distanceRGBA:{uniforms:rt([B1.common,B1.displacementmap,{referencePosition:{value:new c1},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:x2.distanceRGBA_vert,fragmentShader:x2.distanceRGBA_frag},shadow:{uniforms:rt([B1.lights,B1.fog,{color:{value:new R2(0)},opacity:{value:1}}]),vertexShader:x2.shadow_vert,fragmentShader:x2.shadow_frag}};x3.physical={uniforms:rt([x3.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new g2},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new g2},clearcoatNormalScale:{value:new H2(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new g2},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new g2},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new g2},sheen:{value:0},sheenColor:{value:new R2(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new g2},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new g2},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new g2},transmissionSamplerSize:{value:new H2},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new g2},attenuationDistance:{value:0},attenuationColor:{value:new R2(0)},specularColor:{value:new R2(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new g2},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new g2},anisotropyVector:{value:new H2},anisotropyMap:{value:null},anisotropyMapTransform:{value:new g2}}]),vertexShader:x2.meshphysical_vert,fragmentShader:x2.meshphysical_frag};const Ds={r:0,b:0,g:0},Y0=new n0,cx=new xe;function ux(i,e,t,n,r,s,a){const o=new R2(0);let l=s===!0?0:1,c,u,f=null,h=0,d=null;function g(w){let y=w.isScene===!0?w.background:null;return y&&y.isTexture&&(y=(w.backgroundBlurriness>0?t:e).get(y)),y}function _(w){let y=!1;const C=g(w);C===null?p(o,l):C&&C.isColor&&(p(C,1),y=!0);const A=i.xr.getEnvironmentBlendMode();A==="additive"?n.buffers.color.setClear(0,0,0,1,a):A==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(i.autoClear||y)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil))}function m(w,y){const C=g(y);C&&(C.isCubeTexture||C.mapping===Wa)?(u===void 0&&(u=new $3(new $r(1,1,1),new F0({name:"BackgroundCubeMaterial",uniforms:Ci(x3.backgroundCube.uniforms),vertexShader:x3.backgroundCube.vertexShader,fragmentShader:x3.backgroundCube.fragmentShader,side:bt,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(A,L,N){this.matrixWorld.copyPosition(N.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),Y0.copy(y.backgroundRotation),Y0.x*=-1,Y0.y*=-1,Y0.z*=-1,C.isCubeTexture&&C.isRenderTargetTexture===!1&&(Y0.y*=-1,Y0.z*=-1),u.material.uniforms.envMap.value=C,u.material.uniforms.flipEnvMap.value=C.isCubeTexture&&C.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(cx.makeRotationFromEuler(Y0)),u.material.toneMapped=L2.getTransfer(C.colorSpace)!==z2,(f!==C||h!==C.version||d!==i.toneMapping)&&(u.material.needsUpdate=!0,f=C,h=C.version,d=i.toneMapping),u.layers.enableAll(),w.unshift(u,u.geometry,u.material,0,0,null)):C&&C.isTexture&&(c===void 0&&(c=new $3(new qa(2,2),new F0({name:"BackgroundMaterial",uniforms:Ci(x3.background.uniforms),vertexShader:x3.background.vertexShader,fragmentShader:x3.background.fragmentShader,side:O0,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=C,c.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,c.material.toneMapped=L2.getTransfer(C.colorSpace)!==z2,C.matrixAutoUpdate===!0&&C.updateMatrix(),c.material.uniforms.uvTransform.value.copy(C.matrix),(f!==C||h!==C.version||d!==i.toneMapping)&&(c.material.needsUpdate=!0,f=C,h=C.version,d=i.toneMapping),c.layers.enableAll(),w.unshift(c,c.geometry,c.material,0,0,null))}function p(w,y){w.getRGB(Ds,zf(i)),n.buffers.color.setClear(Ds.r,Ds.g,Ds.b,y,a)}function b(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return o},setClearColor:function(w,y=1){o.set(w),l=y,p(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(w){l=w,p(o,l)},render:_,addToRenderList:m,dispose:b}}function fx(i,e){const t=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},r=h(null);let s=r,a=!1;function o(T,F,H,Y,e1){let i1=!1;const K=f(Y,H,F);s!==K&&(s=K,c(s.object)),i1=d(T,Y,H,e1),i1&&g(T,Y,H,e1),e1!==null&&e.update(e1,i.ELEMENT_ARRAY_BUFFER),(i1||a)&&(a=!1,y(T,F,H,Y),e1!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(e1).buffer))}function l(){return i.createVertexArray()}function c(T){return i.bindVertexArray(T)}function u(T){return i.deleteVertexArray(T)}function f(T,F,H){const Y=H.wireframe===!0;let e1=n[T.id];e1===void 0&&(e1={},n[T.id]=e1);let i1=e1[F.id];i1===void 0&&(i1={},e1[F.id]=i1);let K=i1[Y];return K===void 0&&(K=h(l()),i1[Y]=K),K}function h(T){const F=[],H=[],Y=[];for(let e1=0;e1<t;e1++)F[e1]=0,H[e1]=0,Y[e1]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:H,attributeDivisors:Y,object:T,attributes:{},index:null}}function d(T,F,H,Y){const e1=s.attributes,i1=F.attributes;let K=0;const j=H.getAttributes();for(const G in j)if(j[G].location>=0){const k=e1[G];let E1=i1[G];if(E1===void 0&&(G==="instanceMatrix"&&T.instanceMatrix&&(E1=T.instanceMatrix),G==="instanceColor"&&T.instanceColor&&(E1=T.instanceColor)),k===void 0||k.attribute!==E1||E1&&k.data!==E1.data)return!0;K++}return s.attributesNum!==K||s.index!==Y}function g(T,F,H,Y){const e1={},i1=F.attributes;let K=0;const j=H.getAttributes();for(const G in j)if(j[G].location>=0){let k=i1[G];k===void 0&&(G==="instanceMatrix"&&T.instanceMatrix&&(k=T.instanceMatrix),G==="instanceColor"&&T.instanceColor&&(k=T.instanceColor));const E1={};E1.attribute=k,k&&k.data&&(E1.data=k.data),e1[G]=E1,K++}s.attributes=e1,s.attributesNum=K,s.index=Y}function _(){const T=s.newAttributes;for(let F=0,H=T.length;F<H;F++)T[F]=0}function m(T){p(T,0)}function p(T,F){const H=s.newAttributes,Y=s.enabledAttributes,e1=s.attributeDivisors;H[T]=1,Y[T]===0&&(i.enableVertexAttribArray(T),Y[T]=1),e1[T]!==F&&(i.vertexAttribDivisor(T,F),e1[T]=F)}function b(){const T=s.newAttributes,F=s.enabledAttributes;for(let H=0,Y=F.length;H<Y;H++)F[H]!==T[H]&&(i.disableVertexAttribArray(H),F[H]=0)}function w(T,F,H,Y,e1,i1,K){K===!0?i.vertexAttribIPointer(T,F,H,e1,i1):i.vertexAttribPointer(T,F,H,Y,e1,i1)}function y(T,F,H,Y){_();const e1=Y.attributes,i1=H.getAttributes(),K=F.defaultAttributeValues;for(const j in i1){const G=i1[j];if(G.location>=0){let m1=e1[j];if(m1===void 0&&(j==="instanceMatrix"&&T.instanceMatrix&&(m1=T.instanceMatrix),j==="instanceColor"&&T.instanceColor&&(m1=T.instanceColor)),m1!==void 0){const k=m1.normalized,E1=m1.itemSize,z1=e.get(m1);if(z1===void 0)continue;const c2=z1.buffer,j1=z1.type,r1=z1.bytesPerElement,x1=j1===i.INT||j1===i.UNSIGNED_INT||m1.gpuType===Ml;if(m1.isInterleavedBufferAttribute){const d1=m1.data,L1=d1.stride,D1=m1.offset;if(d1.isInstancedInterleavedBuffer){for(let U1=0;U1<G.locationSize;U1++)p(G.location+U1,d1.meshPerAttribute);T.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=d1.meshPerAttribute*d1.count)}else for(let U1=0;U1<G.locationSize;U1++)m(G.location+U1);i.bindBuffer(i.ARRAY_BUFFER,c2);for(let U1=0;U1<G.locationSize;U1++)w(G.location+U1,E1/G.locationSize,j1,k,L1*r1,(D1+E1/G.locationSize*U1)*r1,x1)}else{if(m1.isInstancedBufferAttribute){for(let d1=0;d1<G.locationSize;d1++)p(G.location+d1,m1.meshPerAttribute);T.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=m1.meshPerAttribute*m1.count)}else for(let d1=0;d1<G.locationSize;d1++)m(G.location+d1);i.bindBuffer(i.ARRAY_BUFFER,c2);for(let d1=0;d1<G.locationSize;d1++)w(G.location+d1,E1/G.locationSize,j1,k,E1*r1,E1/G.locationSize*d1*r1,x1)}}else if(K!==void 0){const k=K[j];if(k!==void 0)switch(k.length){case 2:i.vertexAttrib2fv(G.location,k);break;case 3:i.vertexAttrib3fv(G.location,k);break;case 4:i.vertexAttrib4fv(G.location,k);break;default:i.vertexAttrib1fv(G.location,k)}}}}b()}function C(){N();for(const T in n){const F=n[T];for(const H in F){const Y=F[H];for(const e1 in Y)u(Y[e1].object),delete Y[e1];delete F[H]}delete n[T]}}function A(T){if(n[T.id]===void 0)return;const F=n[T.id];for(const H in F){const Y=F[H];for(const e1 in Y)u(Y[e1].object),delete Y[e1];delete F[H]}delete n[T.id]}function L(T){for(const F in n){const H=n[F];if(H[T.id]===void 0)continue;const Y=H[T.id];for(const e1 in Y)u(Y[e1].object),delete Y[e1];delete H[T.id]}}function N(){E(),a=!0,s!==r&&(s=r,c(s.object))}function E(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:o,reset:N,resetDefaultState:E,dispose:C,releaseStatesOfGeometry:A,releaseStatesOfProgram:L,initAttributes:_,enableAttribute:m,disableUnusedAttributes:b}}function hx(i,e,t){let n;function r(c){n=c}function s(c,u){i.drawArrays(n,c,u),t.update(u,n,1)}function a(c,u,f){f!==0&&(i.drawArraysInstanced(n,c,u,f),t.update(u,n,f))}function o(c,u,f){if(f===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,c,0,u,0,f);let d=0;for(let g=0;g<f;g++)d+=u[g];t.update(d,n,1)}function l(c,u,f,h){if(f===0)return;const d=e.get("WEBGL_multi_draw");if(d===null)for(let g=0;g<c.length;g++)a(c[g],u[g],h[g]);else{d.multiDrawArraysInstancedWEBGL(n,c,0,u,0,h,0,f);let g=0;for(let _=0;_<f;_++)g+=u[_]*h[_];t.update(g,n,1)}}this.setMode=r,this.render=s,this.renderInstances=a,this.renderMultiDraw=o,this.renderMultiDrawInstances=l}function dx(i,e,t,n){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");r=i.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function a(L){return!(L!==c3&&n.convert(L)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_FORMAT))}function o(L){const N=L===Vr&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(L!==t0&&n.convert(L)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_TYPE)&&L!==q3&&!N)}function l(L){if(L==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";L="mediump"}return L==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const u=l(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const f=t.logarithmicDepthBuffer===!0,h=t.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),d=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),g=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=i.getParameter(i.MAX_TEXTURE_SIZE),m=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),p=i.getParameter(i.MAX_VERTEX_ATTRIBS),b=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),w=i.getParameter(i.MAX_VARYING_VECTORS),y=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),C=g>0,A=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:a,textureTypeReadable:o,precision:c,logarithmicDepthBuffer:f,reversedDepthBuffer:h,maxTextures:d,maxVertexTextures:g,maxTextureSize:_,maxCubemapSize:m,maxAttributes:p,maxVertexUniforms:b,maxVaryings:w,maxFragmentUniforms:y,vertexTextures:C,maxSamples:A}}function px(i){const e=this;let t=null,n=0,r=!1,s=!1;const a=new en,o=new g2,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,h){const d=f.length!==0||h||n!==0||r;return r=h,n=f.length,d},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(f,h){t=u(f,h,0)},this.setState=function(f,h,d){const g=f.clippingPlanes,_=f.clipIntersection,m=f.clipShadows,p=i.get(f);if(!r||g===null||g.length===0||s&&!m)s?u(null):c();else{const b=s?0:n,w=b*4;let y=p.clippingState||null;l.value=y,y=u(g,h,w,d);for(let C=0;C!==w;++C)y[C]=t[C];p.clippingState=y,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=b}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(f,h,d,g){const _=f!==null?f.length:0;let m=null;if(_!==0){if(m=l.value,g!==!0||m===null){const p=d+_*4,b=h.matrixWorldInverse;o.getNormalMatrix(b),(m===null||m.length<p)&&(m=new Float32Array(p));for(let w=0,y=d;w!==_;++w,y+=4)a.copy(f[w]).applyMatrix4(b,o),a.normal.toArray(m,y),m[y+3]=a.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,m}}function mx(i){let e=new WeakMap;function t(a,o){return o===j4?a.mapping=Ti:o===K4&&(a.mapping=wi),a}function n(a){if(a&&a.isTexture){const o=a.mapping;if(o===j4||o===K4)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new mg(l.height);return c.fromEquirectangularTexture(i,a),e.set(a,c),a.addEventListener("dispose",r),t(c.texture,a.mapping)}else return null}}return a}function r(a){const o=a.target;o.removeEventListener("dispose",r);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}const Qn=4,hu=[.125,.215,.35,.446,.526,.582],sn=20,qo=new Tg,du=new R2;let $o=null,Yo=0,jo=0,Ko=!1;const tn=(1+Math.sqrt(5))/2,qn=1/tn,pu=[new c1(-tn,qn,0),new c1(tn,qn,0),new c1(-qn,0,tn),new c1(qn,0,tn),new c1(0,tn,-qn),new c1(0,tn,qn),new c1(-1,1,-1),new c1(1,1,-1),new c1(-1,1,1),new c1(1,1,1)],_x=new c1;class mu{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100,s={}){const{size:a=256,position:o=_x}=s;$o=this._renderer.getRenderTarget(),Yo=this._renderer.getActiveCubeFace(),jo=this._renderer.getActiveMipmapLevel(),Ko=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,n,r,l,o),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=vu(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=gu(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget($o,Yo,jo),this._renderer.xr.enabled=Ko,e.scissorTest=!1,Is(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Ti||e.mapping===wi?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),$o=this._renderer.getRenderTarget(),Yo=this._renderer.getActiveCubeFace(),jo=this._renderer.getActiveMipmapLevel(),Ko=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:b3,minFilter:b3,generateMipmaps:!1,type:Vr,format:c3,colorSpace:Ai,depthBuffer:!1},r=_u(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=_u(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=gx(s)),this._blurMaterial=vx(s,e,t)}return r}_compileMaterial(e){const t=new $3(this._lodPlanes[0],e);this._renderer.compile(t,qo)}_sceneToCubeUV(e,t,n,r,s){const l=new qt(90,1,t,n),c=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],f=this._renderer,h=f.autoClear,d=f.toneMapping;f.getClearColor(du),f.toneMapping=A0,f.autoClear=!1,f.state.buffers.depth.getReversed()&&(f.setRenderTarget(r),f.clearDepth(),f.setRenderTarget(null));const _=new Nf({name:"PMREM.Background",side:bt,depthWrite:!1,depthTest:!1}),m=new $3(new $r,_);let p=!1;const b=e.background;b?b.isColor&&(_.color.copy(b),e.background=null,p=!0):(_.color.copy(du),p=!0);for(let w=0;w<6;w++){const y=w%3;y===0?(l.up.set(0,c[w],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+u[w],s.y,s.z)):y===1?(l.up.set(0,0,c[w]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+u[w],s.z)):(l.up.set(0,c[w],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+u[w]));const C=this._cubeSize;Is(r,y*C,w>2?C:0,C,C),f.setRenderTarget(r),p&&f.render(m,l),f.render(e,l)}m.geometry.dispose(),m.material.dispose(),f.toneMapping=d,f.autoClear=h,e.background=b}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===Ti||e.mapping===wi;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=vu()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=gu());const s=r?this._cubemapMaterial:this._equirectMaterial,a=new $3(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const l=this._cubeSize;Is(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(a,qo)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const a=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=pu[(r-s-1)%pu.length];this._blur(e,s-1,s,a,o)}t.autoClear=n}_blur(e,t,n,r,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,r,"latitudinal",s),this._halfBlur(a,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new $3(this._lodPlanes[r],c),h=c.uniforms,d=this._sizeLods[n]-1,g=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*sn-1),_=s/g,m=isFinite(s)?1+Math.floor(u*_):sn;m>sn&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${sn}`);const p=[];let b=0;for(let L=0;L<sn;++L){const N=L/_,E=Math.exp(-N*N/2);p.push(E),L===0?b+=E:L<m&&(b+=2*E)}for(let L=0;L<p.length;L++)p[L]=p[L]/b;h.envMap.value=e.texture,h.samples.value=m,h.weights.value=p,h.latitudinal.value=a==="latitudinal",o&&(h.poleAxis.value=o);const{_lodMax:w}=this;h.dTheta.value=g,h.mipInt.value=w-n;const y=this._sizeLods[r],C=3*y*(r>w-Qn?r-w+Qn:0),A=4*(this._cubeSize-y);Is(t,C,A,3*y,2*y),l.setRenderTarget(t),l.render(f,qo)}}function gx(i){const e=[],t=[],n=[];let r=i;const s=i-Qn+1+hu.length;for(let a=0;a<s;a++){const o=Math.pow(2,r);t.push(o);let l=1/o;a>i-Qn?l=hu[a-i+Qn-1]:a===0&&(l=0),n.push(l);const c=1/(o-2),u=-c,f=1+c,h=[u,u,f,u,f,f,u,u,f,f,u,f],d=6,g=6,_=3,m=2,p=1,b=new Float32Array(_*g*d),w=new Float32Array(m*g*d),y=new Float32Array(p*g*d);for(let A=0;A<d;A++){const L=A%3*2/3-1,N=A>2?0:-1,E=[L,N,0,L+2/3,N,0,L+2/3,N+1,0,L,N,0,L+2/3,N+1,0,L,N+1,0];b.set(E,_*g*A),w.set(h,m*g*A);const T=[A,A,A,A,A,A];y.set(T,p*g*A)}const C=new s0;C.setAttribute("position",new e3(b,_)),C.setAttribute("uv",new e3(w,m)),C.setAttribute("faceIndex",new e3(y,p)),e.push(C),r>Qn&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function _u(i,e,t){const n=new wn(i,e,t);return n.texture.mapping=Wa,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Is(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function vx(i,e,t){const n=new Float32Array(sn),r=new c1(0,1,0);return new F0({name:"SphericalGaussianBlur",defines:{n:sn,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Cl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:w0,depthTest:!1,depthWrite:!1})}function gu(){return new F0({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Cl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:w0,depthTest:!1,depthWrite:!1})}function vu(){return new F0({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Cl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:w0,depthTest:!1,depthWrite:!1})}function Cl(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function xx(i){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const l=o.mapping,c=l===j4||l===K4,u=l===Ti||l===wi;if(c||u){let f=e.get(o);const h=f!==void 0?f.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==h)return t===null&&(t=new mu(i)),f=c?t.fromEquirectangular(o,f):t.fromCubemap(o,f),f.texture.pmremVersion=o.pmremVersion,e.set(o,f),f.texture;if(f!==void 0)return f.texture;{const d=o.image;return c&&d&&d.height>0||u&&d&&r(d)?(t===null&&(t=new mu(i)),f=c?t.fromEquirectangular(o):t.fromCubemap(o),f.texture.pmremVersion=o.pmremVersion,e.set(o,f),o.addEventListener("dispose",s),f.texture):null}}}return o}function r(o){let l=0;const c=6;for(let u=0;u<c;u++)o[u]!==void 0&&l++;return l===c}function s(o){const l=o.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function yx(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const r=t(n);return r===null&&hi("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function Mx(i,e,t,n){const r={},s=new WeakMap;function a(f){const h=f.target;h.index!==null&&e.remove(h.index);for(const g in h.attributes)e.remove(h.attributes[g]);h.removeEventListener("dispose",a),delete r[h.id];const d=s.get(h);d&&(e.remove(d),s.delete(h)),n.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,t.memory.geometries--}function o(f,h){return r[h.id]===!0||(h.addEventListener("dispose",a),r[h.id]=!0,t.memory.geometries++),h}function l(f){const h=f.attributes;for(const d in h)e.update(h[d],i.ARRAY_BUFFER)}function c(f){const h=[],d=f.index,g=f.attributes.position;let _=0;if(d!==null){const b=d.array;_=d.version;for(let w=0,y=b.length;w<y;w+=3){const C=b[w+0],A=b[w+1],L=b[w+2];h.push(C,A,A,L,L,C)}}else if(g!==void 0){const b=g.array;_=g.version;for(let w=0,y=b.length/3-1;w<y;w+=3){const C=w+0,A=w+1,L=w+2;h.push(C,A,A,L,L,C)}}else return;const m=new(Df(h)?Bf:kf)(h,1);m.version=_;const p=s.get(f);p&&e.remove(p),s.set(f,m)}function u(f){const h=s.get(f);if(h){const d=f.index;d!==null&&h.version<d.version&&c(f)}else c(f);return s.get(f)}return{get:o,update:l,getWireframeAttribute:u}}function Sx(i,e,t){let n;function r(h){n=h}let s,a;function o(h){s=h.type,a=h.bytesPerElement}function l(h,d){i.drawElements(n,d,s,h*a),t.update(d,n,1)}function c(h,d,g){g!==0&&(i.drawElementsInstanced(n,d,s,h*a,g),t.update(d,n,g))}function u(h,d,g){if(g===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,d,0,s,h,0,g);let m=0;for(let p=0;p<g;p++)m+=d[p];t.update(m,n,1)}function f(h,d,g,_){if(g===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let p=0;p<h.length;p++)c(h[p]/a,d[p],_[p]);else{m.multiDrawElementsInstancedWEBGL(n,d,0,s,h,0,_,0,g);let p=0;for(let b=0;b<g;b++)p+=d[b]*_[b];t.update(p,n,1)}}this.setMode=r,this.setIndex=o,this.render=l,this.renderInstances=c,this.renderMultiDraw=u,this.renderMultiDrawInstances=f}function bx(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,o){switch(t.calls++,a){case i.TRIANGLES:t.triangles+=o*(s/3);break;case i.LINES:t.lines+=o*(s/2);break;case i.LINE_STRIP:t.lines+=o*(s-1);break;case i.LINE_LOOP:t.lines+=o*s;break;case i.POINTS:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function Ex(i,e,t){const n=new WeakMap,r=new he;function s(a,o,l){const c=a.morphTargetInfluences,u=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,f=u!==void 0?u.length:0;let h=n.get(o);if(h===void 0||h.count!==f){let T=function(){N.dispose(),n.delete(o),o.removeEventListener("dispose",T)};var d=T;h!==void 0&&h.texture.dispose();const g=o.morphAttributes.position!==void 0,_=o.morphAttributes.normal!==void 0,m=o.morphAttributes.color!==void 0,p=o.morphAttributes.position||[],b=o.morphAttributes.normal||[],w=o.morphAttributes.color||[];let y=0;g===!0&&(y=1),_===!0&&(y=2),m===!0&&(y=3);let C=o.attributes.position.count*y,A=1;C>e.maxTextureSize&&(A=Math.ceil(C/e.maxTextureSize),C=e.maxTextureSize);const L=new Float32Array(C*A*4*f),N=new If(L,C,A,f);N.type=q3,N.needsUpdate=!0;const E=y*4;for(let F=0;F<f;F++){const H=p[F],Y=b[F],e1=w[F],i1=C*A*4*F;for(let K=0;K<H.count;K++){const j=K*E;g===!0&&(r.fromBufferAttribute(H,K),L[i1+j+0]=r.x,L[i1+j+1]=r.y,L[i1+j+2]=r.z,L[i1+j+3]=0),_===!0&&(r.fromBufferAttribute(Y,K),L[i1+j+4]=r.x,L[i1+j+5]=r.y,L[i1+j+6]=r.z,L[i1+j+7]=0),m===!0&&(r.fromBufferAttribute(e1,K),L[i1+j+8]=r.x,L[i1+j+9]=r.y,L[i1+j+10]=r.z,L[i1+j+11]=e1.itemSize===4?r.w:1)}}h={count:f,texture:N,size:new H2(C,A)},n.set(o,h),o.addEventListener("dispose",T)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)l.getUniforms().setValue(i,"morphTexture",a.morphTexture,t);else{let g=0;for(let m=0;m<c.length;m++)g+=c[m];const _=o.morphTargetsRelative?1:1-g;l.getUniforms().setValue(i,"morphTargetBaseInfluence",_),l.getUniforms().setValue(i,"morphTargetInfluences",c)}l.getUniforms().setValue(i,"morphTargetsTexture",h.texture,t),l.getUniforms().setValue(i,"morphTargetsTextureSize",h.size)}return{update:s}}function Tx(i,e,t,n){let r=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,f=e.get(l,u);if(r.get(f)!==c&&(e.update(f),r.set(f,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),r.get(l)!==c&&(t.update(l.instanceMatrix,i.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,i.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const h=l.skeleton;r.get(h)!==c&&(h.update(),r.set(h,c))}return f}function a(){r=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:a}}const $f=new ht,xu=new Xf(1,1),Yf=new If,jf=new J_,Kf=new Vf,yu=[],Mu=[],Su=new Float32Array(16),bu=new Float32Array(9),Eu=new Float32Array(4);function Pi(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=yu[r];if(s===void 0&&(s=new Float32Array(r),yu[r]=s),e!==0){n.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,i[a].toArray(s,o)}return s}function Ee(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function Te(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function $a(i,e){let t=Mu[e];t===void 0&&(t=new Int32Array(e),Mu[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function wx(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function Ax(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ee(t,e))return;i.uniform2fv(this.addr,e),Te(t,e)}}function Cx(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Ee(t,e))return;i.uniform3fv(this.addr,e),Te(t,e)}}function Rx(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ee(t,e))return;i.uniform4fv(this.addr,e),Te(t,e)}}function Px(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ee(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),Te(t,e)}else{if(Ee(t,n))return;Eu.set(n),i.uniformMatrix2fv(this.addr,!1,Eu),Te(t,n)}}function Lx(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ee(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),Te(t,e)}else{if(Ee(t,n))return;bu.set(n),i.uniformMatrix3fv(this.addr,!1,bu),Te(t,n)}}function Dx(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ee(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),Te(t,e)}else{if(Ee(t,n))return;Su.set(n),i.uniformMatrix4fv(this.addr,!1,Su),Te(t,n)}}function Ix(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function Ux(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ee(t,e))return;i.uniform2iv(this.addr,e),Te(t,e)}}function Ox(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Ee(t,e))return;i.uniform3iv(this.addr,e),Te(t,e)}}function Fx(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ee(t,e))return;i.uniform4iv(this.addr,e),Te(t,e)}}function Nx(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function kx(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ee(t,e))return;i.uniform2uiv(this.addr,e),Te(t,e)}}function Bx(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Ee(t,e))return;i.uniform3uiv(this.addr,e),Te(t,e)}}function zx(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ee(t,e))return;i.uniform4uiv(this.addr,e),Te(t,e)}}function Hx(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r);let s;this.type===i.SAMPLER_2D_SHADOW?(xu.compareFunction=Lf,s=xu):s=$f,t.setTexture2D(e||s,r)}function Vx(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||jf,r)}function Gx(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||Kf,r)}function Wx(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||Yf,r)}function Xx(i){switch(i){case 5126:return wx;case 35664:return Ax;case 35665:return Cx;case 35666:return Rx;case 35674:return Px;case 35675:return Lx;case 35676:return Dx;case 5124:case 35670:return Ix;case 35667:case 35671:return Ux;case 35668:case 35672:return Ox;case 35669:case 35673:return Fx;case 5125:return Nx;case 36294:return kx;case 36295:return Bx;case 36296:return zx;case 35678:case 36198:case 36298:case 36306:case 35682:return Hx;case 35679:case 36299:case 36307:return Vx;case 35680:case 36300:case 36308:case 36293:return Gx;case 36289:case 36303:case 36311:case 36292:return Wx}}function qx(i,e){i.uniform1fv(this.addr,e)}function $x(i,e){const t=Pi(e,this.size,2);i.uniform2fv(this.addr,t)}function Yx(i,e){const t=Pi(e,this.size,3);i.uniform3fv(this.addr,t)}function jx(i,e){const t=Pi(e,this.size,4);i.uniform4fv(this.addr,t)}function Kx(i,e){const t=Pi(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function Zx(i,e){const t=Pi(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function Jx(i,e){const t=Pi(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function Qx(i,e){i.uniform1iv(this.addr,e)}function ey(i,e){i.uniform2iv(this.addr,e)}function ty(i,e){i.uniform3iv(this.addr,e)}function ny(i,e){i.uniform4iv(this.addr,e)}function iy(i,e){i.uniform1uiv(this.addr,e)}function ry(i,e){i.uniform2uiv(this.addr,e)}function sy(i,e){i.uniform3uiv(this.addr,e)}function ay(i,e){i.uniform4uiv(this.addr,e)}function oy(i,e,t){const n=this.cache,r=e.length,s=$a(t,r);Ee(n,s)||(i.uniform1iv(this.addr,s),Te(n,s));for(let a=0;a!==r;++a)t.setTexture2D(e[a]||$f,s[a])}function ly(i,e,t){const n=this.cache,r=e.length,s=$a(t,r);Ee(n,s)||(i.uniform1iv(this.addr,s),Te(n,s));for(let a=0;a!==r;++a)t.setTexture3D(e[a]||jf,s[a])}function cy(i,e,t){const n=this.cache,r=e.length,s=$a(t,r);Ee(n,s)||(i.uniform1iv(this.addr,s),Te(n,s));for(let a=0;a!==r;++a)t.setTextureCube(e[a]||Kf,s[a])}function uy(i,e,t){const n=this.cache,r=e.length,s=$a(t,r);Ee(n,s)||(i.uniform1iv(this.addr,s),Te(n,s));for(let a=0;a!==r;++a)t.setTexture2DArray(e[a]||Yf,s[a])}function fy(i){switch(i){case 5126:return qx;case 35664:return $x;case 35665:return Yx;case 35666:return jx;case 35674:return Kx;case 35675:return Zx;case 35676:return Jx;case 5124:case 35670:return Qx;case 35667:case 35671:return ey;case 35668:case 35672:return ty;case 35669:case 35673:return ny;case 5125:return iy;case 36294:return ry;case 36295:return sy;case 36296:return ay;case 35678:case 36198:case 36298:case 36306:case 35682:return oy;case 35679:case 36299:case 36307:return ly;case 35680:case 36300:case 36308:case 36293:return cy;case 36289:case 36303:case 36311:case 36292:return uy}}class hy{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=Xx(t.type)}}class dy{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=fy(t.type)}}class py{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,a=r.length;s!==a;++s){const o=r[s];o.setValue(e,t[o.id],n)}}}const Zo=/(\w+)(\])?(\[|\.)?/g;function Tu(i,e){i.seq.push(e),i.map[e.id]=e}function my(i,e,t){const n=i.name,r=n.length;for(Zo.lastIndex=0;;){const s=Zo.exec(n),a=Zo.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===r){Tu(t,c===void 0?new hy(o,i,e):new dy(o,i,e));break}else{let f=t.map[o];f===void 0&&(f=new py(o),Tu(t,f)),t=f}}}class ta{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const s=e.getActiveUniform(t,r),a=e.getUniformLocation(t,s.name);my(s,a,this)}}setValue(e,t,n,r){const s=this.map[t];s!==void 0&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];r!==void 0&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,a=t.length;s!==a;++s){const o=t[s],l=n[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const a=e[r];a.id in t&&n.push(a)}return n}}function wu(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}const _y=37297;let gy=0;function vy(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=r;a<s;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}const Au=new g2;function xy(i){L2._getMatrix(Au,L2.workingColorSpace,i);const e=`mat3( ${Au.elements.map(t=>t.toFixed(4))} )`;switch(L2.getTransfer(i)){case Ea:return[e,"LinearTransferOETF"];case z2:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",i),[e,"LinearTransferOETF"]}}function Cu(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),s=(i.getShaderInfoLog(e)||"").trim();if(n&&s==="")return"";const a=/ERROR: 0:(\d+)/.exec(s);if(a){const o=parseInt(a[1]);return t.toUpperCase()+`

`+s+`

`+vy(i.getShaderSource(e),o)}else return s}function yy(i,e){const t=xy(e);return[`vec4 ${i}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function My(i,e){let t;switch(e){case T_:t="Linear";break;case w_:t="Reinhard";break;case A_:t="Cineon";break;case C_:t="ACESFilmic";break;case P_:t="AgX";break;case L_:t="Neutral";break;case R_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Us=new c1;function Sy(){L2.getLuminanceCoefficients(Us);const i=Us.x.toFixed(4),e=Us.y.toFixed(4),t=Us.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${i}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function by(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Qi).join(`
`)}function Ey(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Ty(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),a=s.name;let o=1;s.type===i.FLOAT_MAT2&&(o=2),s.type===i.FLOAT_MAT3&&(o=3),s.type===i.FLOAT_MAT4&&(o=4),t[a]={type:s.type,location:i.getAttribLocation(e,a),locationSize:o}}return t}function Qi(i){return i!==""}function Ru(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Pu(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const wy=/^[ \t]*#include +<([\w\d./]+)>/gm;function A9(i){return i.replace(wy,Cy)}const Ay=new Map;function Cy(i,e){let t=x2[e];if(t===void 0){const n=Ay.get(e);if(n!==void 0)t=x2[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return A9(t)}const Ry=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Lu(i){return i.replace(Ry,Py)}function Py(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Du(i){let e=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Ly(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===yf?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===r_?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===N3&&(e="SHADOWMAP_TYPE_VSM"),e}function Dy(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Ti:case wi:e="ENVMAP_TYPE_CUBE";break;case Wa:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Iy(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case wi:e="ENVMAP_MODE_REFRACTION";break}return e}function Uy(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case Mf:e="ENVMAP_BLENDING_MULTIPLY";break;case b_:e="ENVMAP_BLENDING_MIX";break;case E_:e="ENVMAP_BLENDING_ADD";break}return e}function Oy(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}function Fy(i,e,t,n){const r=i.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=Ly(t),c=Dy(t),u=Iy(t),f=Uy(t),h=Oy(t),d=by(t),g=Ey(s),_=r.createProgram();let m,p,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g].filter(Qi).join(`
`),m.length>0&&(m+=`
`),p=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g].filter(Qi).join(`
`),p.length>0&&(p+=`
`)):(m=[Du(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Qi).join(`
`),p=[Du(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==A0?"#define TONE_MAPPING":"",t.toneMapping!==A0?x2.tonemapping_pars_fragment:"",t.toneMapping!==A0?My("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",x2.colorspace_pars_fragment,yy("linearToOutputTexel",t.outputColorSpace),Sy(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Qi).join(`
`)),a=A9(a),a=Ru(a,t),a=Pu(a,t),o=A9(o),o=Ru(o,t),o=Pu(o,t),a=Lu(a),o=Lu(o),t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,m=[d,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,p=["#define varying in",t.glslVersion===Xc?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Xc?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const w=b+m+a,y=b+p+o,C=wu(r,r.VERTEX_SHADER,w),A=wu(r,r.FRAGMENT_SHADER,y);r.attachShader(_,C),r.attachShader(_,A),t.index0AttributeName!==void 0?r.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(_,0,"position"),r.linkProgram(_);function L(F){if(i.debug.checkShaderErrors){const H=r.getProgramInfoLog(_)||"",Y=r.getShaderInfoLog(C)||"",e1=r.getShaderInfoLog(A)||"",i1=H.trim(),K=Y.trim(),j=e1.trim();let G=!0,m1=!0;if(r.getProgramParameter(_,r.LINK_STATUS)===!1)if(G=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(r,_,C,A);else{const k=Cu(r,C,"vertex"),E1=Cu(r,A,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(_,r.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+i1+`
`+k+`
`+E1)}else i1!==""?console.warn("THREE.WebGLProgram: Program Info Log:",i1):(K===""||j==="")&&(m1=!1);m1&&(F.diagnostics={runnable:G,programLog:i1,vertexShader:{log:K,prefix:m},fragmentShader:{log:j,prefix:p}})}r.deleteShader(C),r.deleteShader(A),N=new ta(r,_),E=Ty(r,_)}let N;this.getUniforms=function(){return N===void 0&&L(this),N};let E;this.getAttributes=function(){return E===void 0&&L(this),E};let T=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return T===!1&&(T=r.getProgramParameter(_,_y)),T},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(_),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=gy++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=C,this.fragmentShader=A,this}let Ny=0;class ky{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(r)===!1&&(a.add(r),r.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new By(e),t.set(e,n)),n}}class By{constructor(e){this.id=Ny++,this.code=e,this.usedTimes=0}}function zy(i,e,t,n,r,s,a){const o=new Of,l=new ky,c=new Set,u=[],f=r.logarithmicDepthBuffer,h=r.vertexTextures;let d=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(E){return c.add(E),E===0?"uv":`uv${E}`}function m(E,T,F,H,Y){const e1=H.fog,i1=Y.geometry,K=E.isMeshStandardMaterial?H.environment:null,j=(E.isMeshStandardMaterial?t:e).get(E.envMap||K),G=j&&j.mapping===Wa?j.image.height:null,m1=g[E.type];E.precision!==null&&(d=r.getMaxPrecision(E.precision),d!==E.precision&&console.warn("THREE.WebGLProgram.getParameters:",E.precision,"not supported, using",d,"instead."));const k=i1.morphAttributes.position||i1.morphAttributes.normal||i1.morphAttributes.color,E1=k!==void 0?k.length:0;let z1=0;i1.morphAttributes.position!==void 0&&(z1=1),i1.morphAttributes.normal!==void 0&&(z1=2),i1.morphAttributes.color!==void 0&&(z1=3);let c2,j1,r1,x1;if(m1){const k1=x3[m1];c2=k1.vertexShader,j1=k1.fragmentShader}else c2=E.vertexShader,j1=E.fragmentShader,l.update(E),r1=l.getVertexShaderID(E),x1=l.getFragmentShaderID(E);const d1=i.getRenderTarget(),L1=i.state.buffers.depth.getReversed(),D1=Y.isInstancedMesh===!0,U1=Y.isBatchedMesh===!0,d2=!!E.map,U=!!E.matcap,M=!!j,$=!!E.aoMap,J=!!E.lightMap,t1=!!E.bumpMap,D=!!E.normalMap,f1=!!E.displacementMap,X=!!E.emissiveMap,u1=!!E.metalnessMap,o1=!!E.roughnessMap,w1=E.anisotropy>0,P=E.clearcoat>0,S=E.dispersion>0,z=E.iridescence>0,Q=E.sheen>0,s1=E.transmission>0,Z=w1&&!!E.anisotropyMap,A1=P&&!!E.clearcoatMap,_1=P&&!!E.clearcoatNormalMap,I1=P&&!!E.clearcoatRoughnessMap,b1=z&&!!E.iridescenceMap,y1=z&&!!E.iridescenceThicknessMap,R1=Q&&!!E.sheenColorMap,V1=Q&&!!E.sheenRoughnessMap,N1=!!E.specularMap,C1=!!E.specularColorMap,t2=!!E.specularIntensityMap,B=s1&&!!E.transmissionMap,M1=s1&&!!E.thicknessMap,S1=!!E.gradientMap,O1=!!E.alphaMap,p1=E.alphaTest>0,h1=!!E.alphaHash,G1=!!E.extensions;let W1=A0;E.toneMapped&&(d1===null||d1.isXRRenderTarget===!0)&&(W1=i.toneMapping);const b2={shaderID:m1,shaderType:E.type,shaderName:E.name,vertexShader:c2,fragmentShader:j1,defines:E.defines,customVertexShaderID:r1,customFragmentShaderID:x1,isRawShaderMaterial:E.isRawShaderMaterial===!0,glslVersion:E.glslVersion,precision:d,batching:U1,batchingColor:U1&&Y._colorsTexture!==null,instancing:D1,instancingColor:D1&&Y.instanceColor!==null,instancingMorph:D1&&Y.morphTexture!==null,supportsVertexTextures:h,outputColorSpace:d1===null?i.outputColorSpace:d1.isXRRenderTarget===!0?d1.texture.colorSpace:Ai,alphaToCoverage:!!E.alphaToCoverage,map:d2,matcap:U,envMap:M,envMapMode:M&&j.mapping,envMapCubeUVHeight:G,aoMap:$,lightMap:J,bumpMap:t1,normalMap:D,displacementMap:h&&f1,emissiveMap:X,normalMapObjectSpace:D&&E.normalMapType===F_,normalMapTangentSpace:D&&E.normalMapType===O_,metalnessMap:u1,roughnessMap:o1,anisotropy:w1,anisotropyMap:Z,clearcoat:P,clearcoatMap:A1,clearcoatNormalMap:_1,clearcoatRoughnessMap:I1,dispersion:S,iridescence:z,iridescenceMap:b1,iridescenceThicknessMap:y1,sheen:Q,sheenColorMap:R1,sheenRoughnessMap:V1,specularMap:N1,specularColorMap:C1,specularIntensityMap:t2,transmission:s1,transmissionMap:B,thicknessMap:M1,gradientMap:S1,opaque:E.transparent===!1&&E.blending===fi&&E.alphaToCoverage===!1,alphaMap:O1,alphaTest:p1,alphaHash:h1,combine:E.combine,mapUv:d2&&_(E.map.channel),aoMapUv:$&&_(E.aoMap.channel),lightMapUv:J&&_(E.lightMap.channel),bumpMapUv:t1&&_(E.bumpMap.channel),normalMapUv:D&&_(E.normalMap.channel),displacementMapUv:f1&&_(E.displacementMap.channel),emissiveMapUv:X&&_(E.emissiveMap.channel),metalnessMapUv:u1&&_(E.metalnessMap.channel),roughnessMapUv:o1&&_(E.roughnessMap.channel),anisotropyMapUv:Z&&_(E.anisotropyMap.channel),clearcoatMapUv:A1&&_(E.clearcoatMap.channel),clearcoatNormalMapUv:_1&&_(E.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:I1&&_(E.clearcoatRoughnessMap.channel),iridescenceMapUv:b1&&_(E.iridescenceMap.channel),iridescenceThicknessMapUv:y1&&_(E.iridescenceThicknessMap.channel),sheenColorMapUv:R1&&_(E.sheenColorMap.channel),sheenRoughnessMapUv:V1&&_(E.sheenRoughnessMap.channel),specularMapUv:N1&&_(E.specularMap.channel),specularColorMapUv:C1&&_(E.specularColorMap.channel),specularIntensityMapUv:t2&&_(E.specularIntensityMap.channel),transmissionMapUv:B&&_(E.transmissionMap.channel),thicknessMapUv:M1&&_(E.thicknessMap.channel),alphaMapUv:O1&&_(E.alphaMap.channel),vertexTangents:!!i1.attributes.tangent&&(D||w1),vertexColors:E.vertexColors,vertexAlphas:E.vertexColors===!0&&!!i1.attributes.color&&i1.attributes.color.itemSize===4,pointsUvs:Y.isPoints===!0&&!!i1.attributes.uv&&(d2||O1),fog:!!e1,useFog:E.fog===!0,fogExp2:!!e1&&e1.isFogExp2,flatShading:E.flatShading===!0&&E.wireframe===!1,sizeAttenuation:E.sizeAttenuation===!0,logarithmicDepthBuffer:f,reversedDepthBuffer:L1,skinning:Y.isSkinnedMesh===!0,morphTargets:i1.morphAttributes.position!==void 0,morphNormals:i1.morphAttributes.normal!==void 0,morphColors:i1.morphAttributes.color!==void 0,morphTargetsCount:E1,morphTextureStride:z1,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numLightProbes:T.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:E.dithering,shadowMapEnabled:i.shadowMap.enabled&&F.length>0,shadowMapType:i.shadowMap.type,toneMapping:W1,decodeVideoTexture:d2&&E.map.isVideoTexture===!0&&L2.getTransfer(E.map.colorSpace)===z2,decodeVideoTextureEmissive:X&&E.emissiveMap.isVideoTexture===!0&&L2.getTransfer(E.emissiveMap.colorSpace)===z2,premultipliedAlpha:E.premultipliedAlpha,doubleSided:E.side===W3,flipSided:E.side===bt,useDepthPacking:E.depthPacking>=0,depthPacking:E.depthPacking||0,index0AttributeName:E.index0AttributeName,extensionClipCullDistance:G1&&E.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(G1&&E.extensions.multiDraw===!0||U1)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:E.customProgramCacheKey()};return b2.vertexUv1s=c.has(1),b2.vertexUv2s=c.has(2),b2.vertexUv3s=c.has(3),c.clear(),b2}function p(E){const T=[];if(E.shaderID?T.push(E.shaderID):(T.push(E.customVertexShaderID),T.push(E.customFragmentShaderID)),E.defines!==void 0)for(const F in E.defines)T.push(F),T.push(E.defines[F]);return E.isRawShaderMaterial===!1&&(b(T,E),w(T,E),T.push(i.outputColorSpace)),T.push(E.customProgramCacheKey),T.join()}function b(E,T){E.push(T.precision),E.push(T.outputColorSpace),E.push(T.envMapMode),E.push(T.envMapCubeUVHeight),E.push(T.mapUv),E.push(T.alphaMapUv),E.push(T.lightMapUv),E.push(T.aoMapUv),E.push(T.bumpMapUv),E.push(T.normalMapUv),E.push(T.displacementMapUv),E.push(T.emissiveMapUv),E.push(T.metalnessMapUv),E.push(T.roughnessMapUv),E.push(T.anisotropyMapUv),E.push(T.clearcoatMapUv),E.push(T.clearcoatNormalMapUv),E.push(T.clearcoatRoughnessMapUv),E.push(T.iridescenceMapUv),E.push(T.iridescenceThicknessMapUv),E.push(T.sheenColorMapUv),E.push(T.sheenRoughnessMapUv),E.push(T.specularMapUv),E.push(T.specularColorMapUv),E.push(T.specularIntensityMapUv),E.push(T.transmissionMapUv),E.push(T.thicknessMapUv),E.push(T.combine),E.push(T.fogExp2),E.push(T.sizeAttenuation),E.push(T.morphTargetsCount),E.push(T.morphAttributeCount),E.push(T.numDirLights),E.push(T.numPointLights),E.push(T.numSpotLights),E.push(T.numSpotLightMaps),E.push(T.numHemiLights),E.push(T.numRectAreaLights),E.push(T.numDirLightShadows),E.push(T.numPointLightShadows),E.push(T.numSpotLightShadows),E.push(T.numSpotLightShadowsWithMaps),E.push(T.numLightProbes),E.push(T.shadowMapType),E.push(T.toneMapping),E.push(T.numClippingPlanes),E.push(T.numClipIntersection),E.push(T.depthPacking)}function w(E,T){o.disableAll(),T.supportsVertexTextures&&o.enable(0),T.instancing&&o.enable(1),T.instancingColor&&o.enable(2),T.instancingMorph&&o.enable(3),T.matcap&&o.enable(4),T.envMap&&o.enable(5),T.normalMapObjectSpace&&o.enable(6),T.normalMapTangentSpace&&o.enable(7),T.clearcoat&&o.enable(8),T.iridescence&&o.enable(9),T.alphaTest&&o.enable(10),T.vertexColors&&o.enable(11),T.vertexAlphas&&o.enable(12),T.vertexUv1s&&o.enable(13),T.vertexUv2s&&o.enable(14),T.vertexUv3s&&o.enable(15),T.vertexTangents&&o.enable(16),T.anisotropy&&o.enable(17),T.alphaHash&&o.enable(18),T.batching&&o.enable(19),T.dispersion&&o.enable(20),T.batchingColor&&o.enable(21),T.gradientMap&&o.enable(22),E.push(o.mask),o.disableAll(),T.fog&&o.enable(0),T.useFog&&o.enable(1),T.flatShading&&o.enable(2),T.logarithmicDepthBuffer&&o.enable(3),T.reversedDepthBuffer&&o.enable(4),T.skinning&&o.enable(5),T.morphTargets&&o.enable(6),T.morphNormals&&o.enable(7),T.morphColors&&o.enable(8),T.premultipliedAlpha&&o.enable(9),T.shadowMapEnabled&&o.enable(10),T.doubleSided&&o.enable(11),T.flipSided&&o.enable(12),T.useDepthPacking&&o.enable(13),T.dithering&&o.enable(14),T.transmission&&o.enable(15),T.sheen&&o.enable(16),T.opaque&&o.enable(17),T.pointsUvs&&o.enable(18),T.decodeVideoTexture&&o.enable(19),T.decodeVideoTextureEmissive&&o.enable(20),T.alphaToCoverage&&o.enable(21),E.push(o.mask)}function y(E){const T=g[E.type];let F;if(T){const H=x3[T];F=fg.clone(H.uniforms)}else F=E.uniforms;return F}function C(E,T){let F;for(let H=0,Y=u.length;H<Y;H++){const e1=u[H];if(e1.cacheKey===T){F=e1,++F.usedTimes;break}}return F===void 0&&(F=new Fy(i,T,E,s),u.push(F)),F}function A(E){if(--E.usedTimes===0){const T=u.indexOf(E);u[T]=u[u.length-1],u.pop(),E.destroy()}}function L(E){l.remove(E)}function N(){l.dispose()}return{getParameters:m,getProgramCacheKey:p,getUniforms:y,acquireProgram:C,releaseProgram:A,releaseShaderCache:L,programs:u,dispose:N}}function Hy(){let i=new WeakMap;function e(a){return i.has(a)}function t(a){let o=i.get(a);return o===void 0&&(o={},i.set(a,o)),o}function n(a){i.delete(a)}function r(a,o,l){i.get(a)[o]=l}function s(){i=new WeakMap}return{has:e,get:t,remove:n,update:r,dispose:s}}function Vy(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function Iu(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function Uu(){const i=[];let e=0;const t=[],n=[],r=[];function s(){e=0,t.length=0,n.length=0,r.length=0}function a(f,h,d,g,_,m){let p=i[e];return p===void 0?(p={id:f.id,object:f,geometry:h,material:d,groupOrder:g,renderOrder:f.renderOrder,z:_,group:m},i[e]=p):(p.id=f.id,p.object=f,p.geometry=h,p.material=d,p.groupOrder=g,p.renderOrder=f.renderOrder,p.z=_,p.group=m),e++,p}function o(f,h,d,g,_,m){const p=a(f,h,d,g,_,m);d.transmission>0?n.push(p):d.transparent===!0?r.push(p):t.push(p)}function l(f,h,d,g,_,m){const p=a(f,h,d,g,_,m);d.transmission>0?n.unshift(p):d.transparent===!0?r.unshift(p):t.unshift(p)}function c(f,h){t.length>1&&t.sort(f||Vy),n.length>1&&n.sort(h||Iu),r.length>1&&r.sort(h||Iu)}function u(){for(let f=e,h=i.length;f<h;f++){const d=i[f];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:n,transparent:r,init:s,push:o,unshift:l,finish:u,sort:c}}function Gy(){let i=new WeakMap;function e(n,r){const s=i.get(n);let a;return s===void 0?(a=new Uu,i.set(n,[a])):r>=s.length?(a=new Uu,s.push(a)):a=s[r],a}function t(){i=new WeakMap}return{get:e,dispose:t}}function Wy(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new c1,color:new R2};break;case"SpotLight":t={position:new c1,direction:new c1,color:new R2,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new c1,color:new R2,distance:0,decay:0};break;case"HemisphereLight":t={direction:new c1,skyColor:new R2,groundColor:new R2};break;case"RectAreaLight":t={color:new R2,position:new c1,halfWidth:new c1,halfHeight:new c1};break}return i[e.id]=t,t}}}function Xy(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new H2};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new H2};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new H2,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let qy=0;function $y(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function Yy(i){const e=new Wy,t=Xy(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)n.probe.push(new c1);const r=new c1,s=new xe,a=new xe;function o(c){let u=0,f=0,h=0;for(let E=0;E<9;E++)n.probe[E].set(0,0,0);let d=0,g=0,_=0,m=0,p=0,b=0,w=0,y=0,C=0,A=0,L=0;c.sort($y);for(let E=0,T=c.length;E<T;E++){const F=c[E],H=F.color,Y=F.intensity,e1=F.distance,i1=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)u+=H.r*Y,f+=H.g*Y,h+=H.b*Y;else if(F.isLightProbe){for(let K=0;K<9;K++)n.probe[K].addScaledVector(F.sh.coefficients[K],Y);L++}else if(F.isDirectionalLight){const K=e.get(F);if(K.color.copy(F.color).multiplyScalar(F.intensity),F.castShadow){const j=F.shadow,G=t.get(F);G.shadowIntensity=j.intensity,G.shadowBias=j.bias,G.shadowNormalBias=j.normalBias,G.shadowRadius=j.radius,G.shadowMapSize=j.mapSize,n.directionalShadow[d]=G,n.directionalShadowMap[d]=i1,n.directionalShadowMatrix[d]=F.shadow.matrix,b++}n.directional[d]=K,d++}else if(F.isSpotLight){const K=e.get(F);K.position.setFromMatrixPosition(F.matrixWorld),K.color.copy(H).multiplyScalar(Y),K.distance=e1,K.coneCos=Math.cos(F.angle),K.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),K.decay=F.decay,n.spot[_]=K;const j=F.shadow;if(F.map&&(n.spotLightMap[C]=F.map,C++,j.updateMatrices(F),F.castShadow&&A++),n.spotLightMatrix[_]=j.matrix,F.castShadow){const G=t.get(F);G.shadowIntensity=j.intensity,G.shadowBias=j.bias,G.shadowNormalBias=j.normalBias,G.shadowRadius=j.radius,G.shadowMapSize=j.mapSize,n.spotShadow[_]=G,n.spotShadowMap[_]=i1,y++}_++}else if(F.isRectAreaLight){const K=e.get(F);K.color.copy(H).multiplyScalar(Y),K.halfWidth.set(F.width*.5,0,0),K.halfHeight.set(0,F.height*.5,0),n.rectArea[m]=K,m++}else if(F.isPointLight){const K=e.get(F);if(K.color.copy(F.color).multiplyScalar(F.intensity),K.distance=F.distance,K.decay=F.decay,F.castShadow){const j=F.shadow,G=t.get(F);G.shadowIntensity=j.intensity,G.shadowBias=j.bias,G.shadowNormalBias=j.normalBias,G.shadowRadius=j.radius,G.shadowMapSize=j.mapSize,G.shadowCameraNear=j.camera.near,G.shadowCameraFar=j.camera.far,n.pointShadow[g]=G,n.pointShadowMap[g]=i1,n.pointShadowMatrix[g]=F.shadow.matrix,w++}n.point[g]=K,g++}else if(F.isHemisphereLight){const K=e.get(F);K.skyColor.copy(F.color).multiplyScalar(Y),K.groundColor.copy(F.groundColor).multiplyScalar(Y),n.hemi[p]=K,p++}}m>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=B1.LTC_FLOAT_1,n.rectAreaLTC2=B1.LTC_FLOAT_2):(n.rectAreaLTC1=B1.LTC_HALF_1,n.rectAreaLTC2=B1.LTC_HALF_2)),n.ambient[0]=u,n.ambient[1]=f,n.ambient[2]=h;const N=n.hash;(N.directionalLength!==d||N.pointLength!==g||N.spotLength!==_||N.rectAreaLength!==m||N.hemiLength!==p||N.numDirectionalShadows!==b||N.numPointShadows!==w||N.numSpotShadows!==y||N.numSpotMaps!==C||N.numLightProbes!==L)&&(n.directional.length=d,n.spot.length=_,n.rectArea.length=m,n.point.length=g,n.hemi.length=p,n.directionalShadow.length=b,n.directionalShadowMap.length=b,n.pointShadow.length=w,n.pointShadowMap.length=w,n.spotShadow.length=y,n.spotShadowMap.length=y,n.directionalShadowMatrix.length=b,n.pointShadowMatrix.length=w,n.spotLightMatrix.length=y+C-A,n.spotLightMap.length=C,n.numSpotLightShadowsWithMaps=A,n.numLightProbes=L,N.directionalLength=d,N.pointLength=g,N.spotLength=_,N.rectAreaLength=m,N.hemiLength=p,N.numDirectionalShadows=b,N.numPointShadows=w,N.numSpotShadows=y,N.numSpotMaps=C,N.numLightProbes=L,n.version=qy++)}function l(c,u){let f=0,h=0,d=0,g=0,_=0;const m=u.matrixWorldInverse;for(let p=0,b=c.length;p<b;p++){const w=c[p];if(w.isDirectionalLight){const y=n.directional[f];y.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(m),f++}else if(w.isSpotLight){const y=n.spot[d];y.position.setFromMatrixPosition(w.matrixWorld),y.position.applyMatrix4(m),y.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(m),d++}else if(w.isRectAreaLight){const y=n.rectArea[g];y.position.setFromMatrixPosition(w.matrixWorld),y.position.applyMatrix4(m),a.identity(),s.copy(w.matrixWorld),s.premultiply(m),a.extractRotation(s),y.halfWidth.set(w.width*.5,0,0),y.halfHeight.set(0,w.height*.5,0),y.halfWidth.applyMatrix4(a),y.halfHeight.applyMatrix4(a),g++}else if(w.isPointLight){const y=n.point[h];y.position.setFromMatrixPosition(w.matrixWorld),y.position.applyMatrix4(m),h++}else if(w.isHemisphereLight){const y=n.hemi[_];y.direction.setFromMatrixPosition(w.matrixWorld),y.direction.transformDirection(m),_++}}}return{setup:o,setupView:l,state:n}}function Ou(i){const e=new Yy(i),t=[],n=[];function r(u){c.camera=u,t.length=0,n.length=0}function s(u){t.push(u)}function a(u){n.push(u)}function o(){e.setup(t)}function l(u){e.setupView(t,u)}const c={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:c,setupLights:o,setupLightsView:l,pushLight:s,pushShadow:a}}function jy(i){let e=new WeakMap;function t(r,s=0){const a=e.get(r);let o;return a===void 0?(o=new Ou(i),e.set(r,[o])):s>=a.length?(o=new Ou(i),a.push(o)):o=a[s],o}function n(){e=new WeakMap}return{get:t,dispose:n}}const Ky=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Zy=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Jy(i,e,t){let n=new Gf;const r=new H2,s=new H2,a=new he,o=new Sg({depthPacking:U_}),l=new bg,c={},u=t.maxTextureSize,f={[O0]:bt,[bt]:O0,[W3]:W3},h=new F0({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new H2},radius:{value:4}},vertexShader:Ky,fragmentShader:Zy}),d=h.clone();d.defines.HORIZONTAL_PASS=1;const g=new s0;g.setAttribute("position",new e3(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new $3(g,h),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=yf;let p=this.type;this.render=function(A,L,N){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||A.length===0)return;const E=i.getRenderTarget(),T=i.getActiveCubeFace(),F=i.getActiveMipmapLevel(),H=i.state;H.setBlending(w0),H.buffers.depth.getReversed()?H.buffers.color.setClear(0,0,0,0):H.buffers.color.setClear(1,1,1,1),H.buffers.depth.setTest(!0),H.setScissorTest(!1);const Y=p!==N3&&this.type===N3,e1=p===N3&&this.type!==N3;for(let i1=0,K=A.length;i1<K;i1++){const j=A[i1],G=j.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",j,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;r.copy(G.mapSize);const m1=G.getFrameExtents();if(r.multiply(m1),s.copy(G.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/m1.x),r.x=s.x*m1.x,G.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/m1.y),r.y=s.y*m1.y,G.mapSize.y=s.y)),G.map===null||Y===!0||e1===!0){const E1=this.type!==N3?{minFilter:f3,magFilter:f3}:{};G.map!==null&&G.map.dispose(),G.map=new wn(r.x,r.y,E1),G.map.texture.name=j.name+".shadowMap",G.camera.updateProjectionMatrix()}i.setRenderTarget(G.map),i.clear();const k=G.getViewportCount();for(let E1=0;E1<k;E1++){const z1=G.getViewport(E1);a.set(s.x*z1.x,s.y*z1.y,s.x*z1.z,s.y*z1.w),H.viewport(a),G.updateMatrices(j,E1),n=G.getFrustum(),y(L,N,G.camera,j,this.type)}G.isPointLightShadow!==!0&&this.type===N3&&b(G,N),G.needsUpdate=!1}p=this.type,m.needsUpdate=!1,i.setRenderTarget(E,T,F)};function b(A,L){const N=e.update(_);h.defines.VSM_SAMPLES!==A.blurSamples&&(h.defines.VSM_SAMPLES=A.blurSamples,d.defines.VSM_SAMPLES=A.blurSamples,h.needsUpdate=!0,d.needsUpdate=!0),A.mapPass===null&&(A.mapPass=new wn(r.x,r.y)),h.uniforms.shadow_pass.value=A.map.texture,h.uniforms.resolution.value=A.mapSize,h.uniforms.radius.value=A.radius,i.setRenderTarget(A.mapPass),i.clear(),i.renderBufferDirect(L,null,N,h,_,null),d.uniforms.shadow_pass.value=A.mapPass.texture,d.uniforms.resolution.value=A.mapSize,d.uniforms.radius.value=A.radius,i.setRenderTarget(A.map),i.clear(),i.renderBufferDirect(L,null,N,d,_,null)}function w(A,L,N,E){let T=null;const F=N.isPointLight===!0?A.customDistanceMaterial:A.customDepthMaterial;if(F!==void 0)T=F;else if(T=N.isPointLight===!0?l:o,i.localClippingEnabled&&L.clipShadows===!0&&Array.isArray(L.clippingPlanes)&&L.clippingPlanes.length!==0||L.displacementMap&&L.displacementScale!==0||L.alphaMap&&L.alphaTest>0||L.map&&L.alphaTest>0||L.alphaToCoverage===!0){const H=T.uuid,Y=L.uuid;let e1=c[H];e1===void 0&&(e1={},c[H]=e1);let i1=e1[Y];i1===void 0&&(i1=T.clone(),e1[Y]=i1,L.addEventListener("dispose",C)),T=i1}if(T.visible=L.visible,T.wireframe=L.wireframe,E===N3?T.side=L.shadowSide!==null?L.shadowSide:L.side:T.side=L.shadowSide!==null?L.shadowSide:f[L.side],T.alphaMap=L.alphaMap,T.alphaTest=L.alphaToCoverage===!0?.5:L.alphaTest,T.map=L.map,T.clipShadows=L.clipShadows,T.clippingPlanes=L.clippingPlanes,T.clipIntersection=L.clipIntersection,T.displacementMap=L.displacementMap,T.displacementScale=L.displacementScale,T.displacementBias=L.displacementBias,T.wireframeLinewidth=L.wireframeLinewidth,T.linewidth=L.linewidth,N.isPointLight===!0&&T.isMeshDistanceMaterial===!0){const H=i.properties.get(T);H.light=N}return T}function y(A,L,N,E,T){if(A.visible===!1)return;if(A.layers.test(L.layers)&&(A.isMesh||A.isLine||A.isPoints)&&(A.castShadow||A.receiveShadow&&T===N3)&&(!A.frustumCulled||n.intersectsObject(A))){A.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,A.matrixWorld);const Y=e.update(A),e1=A.material;if(Array.isArray(e1)){const i1=Y.groups;for(let K=0,j=i1.length;K<j;K++){const G=i1[K],m1=e1[G.materialIndex];if(m1&&m1.visible){const k=w(A,m1,E,T);A.onBeforeShadow(i,A,L,N,Y,k,G),i.renderBufferDirect(N,null,Y,k,A,G),A.onAfterShadow(i,A,L,N,Y,k,G)}}}else if(e1.visible){const i1=w(A,e1,E,T);A.onBeforeShadow(i,A,L,N,Y,i1,null),i.renderBufferDirect(N,null,Y,i1,A,null),A.onAfterShadow(i,A,L,N,Y,i1,null)}}const H=A.children;for(let Y=0,e1=H.length;Y<e1;Y++)y(H[Y],L,N,E,T)}function C(A){A.target.removeEventListener("dispose",C);for(const N in c){const E=c[N],T=A.target.uuid;T in E&&(E[T].dispose(),delete E[T])}}}const Qy={[V4]:G4,[W4]:$4,[X4]:Y4,[Ei]:q4,[G4]:V4,[$4]:W4,[Y4]:X4,[q4]:Ei};function eM(i,e){function t(){let B=!1;const M1=new he;let S1=null;const O1=new he(0,0,0,0);return{setMask:function(p1){S1!==p1&&!B&&(i.colorMask(p1,p1,p1,p1),S1=p1)},setLocked:function(p1){B=p1},setClear:function(p1,h1,G1,W1,b2){b2===!0&&(p1*=W1,h1*=W1,G1*=W1),M1.set(p1,h1,G1,W1),O1.equals(M1)===!1&&(i.clearColor(p1,h1,G1,W1),O1.copy(M1))},reset:function(){B=!1,S1=null,O1.set(-1,0,0,0)}}}function n(){let B=!1,M1=!1,S1=null,O1=null,p1=null;return{setReversed:function(h1){if(M1!==h1){const G1=e.get("EXT_clip_control");h1?G1.clipControlEXT(G1.LOWER_LEFT_EXT,G1.ZERO_TO_ONE_EXT):G1.clipControlEXT(G1.LOWER_LEFT_EXT,G1.NEGATIVE_ONE_TO_ONE_EXT),M1=h1;const W1=p1;p1=null,this.setClear(W1)}},getReversed:function(){return M1},setTest:function(h1){h1?d1(i.DEPTH_TEST):L1(i.DEPTH_TEST)},setMask:function(h1){S1!==h1&&!B&&(i.depthMask(h1),S1=h1)},setFunc:function(h1){if(M1&&(h1=Qy[h1]),O1!==h1){switch(h1){case V4:i.depthFunc(i.NEVER);break;case G4:i.depthFunc(i.ALWAYS);break;case W4:i.depthFunc(i.LESS);break;case Ei:i.depthFunc(i.LEQUAL);break;case X4:i.depthFunc(i.EQUAL);break;case q4:i.depthFunc(i.GEQUAL);break;case $4:i.depthFunc(i.GREATER);break;case Y4:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}O1=h1}},setLocked:function(h1){B=h1},setClear:function(h1){p1!==h1&&(M1&&(h1=1-h1),i.clearDepth(h1),p1=h1)},reset:function(){B=!1,S1=null,O1=null,p1=null,M1=!1}}}function r(){let B=!1,M1=null,S1=null,O1=null,p1=null,h1=null,G1=null,W1=null,b2=null;return{setTest:function(k1){B||(k1?d1(i.STENCIL_TEST):L1(i.STENCIL_TEST))},setMask:function(k1){M1!==k1&&!B&&(i.stencilMask(k1),M1=k1)},setFunc:function(k1,$1,f2){(S1!==k1||O1!==$1||p1!==f2)&&(i.stencilFunc(k1,$1,f2),S1=k1,O1=$1,p1=f2)},setOp:function(k1,$1,f2){(h1!==k1||G1!==$1||W1!==f2)&&(i.stencilOp(k1,$1,f2),h1=k1,G1=$1,W1=f2)},setLocked:function(k1){B=k1},setClear:function(k1){b2!==k1&&(i.clearStencil(k1),b2=k1)},reset:function(){B=!1,M1=null,S1=null,O1=null,p1=null,h1=null,G1=null,W1=null,b2=null}}}const s=new t,a=new n,o=new r,l=new WeakMap,c=new WeakMap;let u={},f={},h=new WeakMap,d=[],g=null,_=!1,m=null,p=null,b=null,w=null,y=null,C=null,A=null,L=new R2(0,0,0),N=0,E=!1,T=null,F=null,H=null,Y=null,e1=null;const i1=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let K=!1,j=0;const G=i.getParameter(i.VERSION);G.indexOf("WebGL")!==-1?(j=parseFloat(/^WebGL (\d)/.exec(G)[1]),K=j>=1):G.indexOf("OpenGL ES")!==-1&&(j=parseFloat(/^OpenGL ES (\d)/.exec(G)[1]),K=j>=2);let m1=null,k={};const E1=i.getParameter(i.SCISSOR_BOX),z1=i.getParameter(i.VIEWPORT),c2=new he().fromArray(E1),j1=new he().fromArray(z1);function r1(B,M1,S1,O1){const p1=new Uint8Array(4),h1=i.createTexture();i.bindTexture(B,h1),i.texParameteri(B,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(B,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let G1=0;G1<S1;G1++)B===i.TEXTURE_3D||B===i.TEXTURE_2D_ARRAY?i.texImage3D(M1,0,i.RGBA,1,1,O1,0,i.RGBA,i.UNSIGNED_BYTE,p1):i.texImage2D(M1+G1,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,p1);return h1}const x1={};x1[i.TEXTURE_2D]=r1(i.TEXTURE_2D,i.TEXTURE_2D,1),x1[i.TEXTURE_CUBE_MAP]=r1(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),x1[i.TEXTURE_2D_ARRAY]=r1(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),x1[i.TEXTURE_3D]=r1(i.TEXTURE_3D,i.TEXTURE_3D,1,1),s.setClear(0,0,0,1),a.setClear(1),o.setClear(0),d1(i.DEPTH_TEST),a.setFunc(Ei),t1(!1),D(zc),d1(i.CULL_FACE),$(w0);function d1(B){u[B]!==!0&&(i.enable(B),u[B]=!0)}function L1(B){u[B]!==!1&&(i.disable(B),u[B]=!1)}function D1(B,M1){return f[B]!==M1?(i.bindFramebuffer(B,M1),f[B]=M1,B===i.DRAW_FRAMEBUFFER&&(f[i.FRAMEBUFFER]=M1),B===i.FRAMEBUFFER&&(f[i.DRAW_FRAMEBUFFER]=M1),!0):!1}function U1(B,M1){let S1=d,O1=!1;if(B){S1=h.get(M1),S1===void 0&&(S1=[],h.set(M1,S1));const p1=B.textures;if(S1.length!==p1.length||S1[0]!==i.COLOR_ATTACHMENT0){for(let h1=0,G1=p1.length;h1<G1;h1++)S1[h1]=i.COLOR_ATTACHMENT0+h1;S1.length=p1.length,O1=!0}}else S1[0]!==i.BACK&&(S1[0]=i.BACK,O1=!0);O1&&i.drawBuffers(S1)}function d2(B){return g!==B?(i.useProgram(B),g=B,!0):!1}const U={[rn]:i.FUNC_ADD,[a_]:i.FUNC_SUBTRACT,[o_]:i.FUNC_REVERSE_SUBTRACT};U[l_]=i.MIN,U[c_]=i.MAX;const M={[u_]:i.ZERO,[f_]:i.ONE,[h_]:i.SRC_COLOR,[z4]:i.SRC_ALPHA,[v_]:i.SRC_ALPHA_SATURATE,[__]:i.DST_COLOR,[p_]:i.DST_ALPHA,[d_]:i.ONE_MINUS_SRC_COLOR,[H4]:i.ONE_MINUS_SRC_ALPHA,[g_]:i.ONE_MINUS_DST_COLOR,[m_]:i.ONE_MINUS_DST_ALPHA,[x_]:i.CONSTANT_COLOR,[y_]:i.ONE_MINUS_CONSTANT_COLOR,[M_]:i.CONSTANT_ALPHA,[S_]:i.ONE_MINUS_CONSTANT_ALPHA};function $(B,M1,S1,O1,p1,h1,G1,W1,b2,k1){if(B===w0){_===!0&&(L1(i.BLEND),_=!1);return}if(_===!1&&(d1(i.BLEND),_=!0),B!==s_){if(B!==m||k1!==E){if((p!==rn||y!==rn)&&(i.blendEquation(i.FUNC_ADD),p=rn,y=rn),k1)switch(B){case fi:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case B4:i.blendFunc(i.ONE,i.ONE);break;case Hc:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case Vc:i.blendFuncSeparate(i.DST_COLOR,i.ONE_MINUS_SRC_ALPHA,i.ZERO,i.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}else switch(B){case fi:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case B4:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE,i.ONE,i.ONE);break;case Hc:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Vc:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}b=null,w=null,C=null,A=null,L.set(0,0,0),N=0,m=B,E=k1}return}p1=p1||M1,h1=h1||S1,G1=G1||O1,(M1!==p||p1!==y)&&(i.blendEquationSeparate(U[M1],U[p1]),p=M1,y=p1),(S1!==b||O1!==w||h1!==C||G1!==A)&&(i.blendFuncSeparate(M[S1],M[O1],M[h1],M[G1]),b=S1,w=O1,C=h1,A=G1),(W1.equals(L)===!1||b2!==N)&&(i.blendColor(W1.r,W1.g,W1.b,b2),L.copy(W1),N=b2),m=B,E=!1}function J(B,M1){B.side===W3?L1(i.CULL_FACE):d1(i.CULL_FACE);let S1=B.side===bt;M1&&(S1=!S1),t1(S1),B.blending===fi&&B.transparent===!1?$(w0):$(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.blendColor,B.blendAlpha,B.premultipliedAlpha),a.setFunc(B.depthFunc),a.setTest(B.depthTest),a.setMask(B.depthWrite),s.setMask(B.colorWrite);const O1=B.stencilWrite;o.setTest(O1),O1&&(o.setMask(B.stencilWriteMask),o.setFunc(B.stencilFunc,B.stencilRef,B.stencilFuncMask),o.setOp(B.stencilFail,B.stencilZFail,B.stencilZPass)),X(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),B.alphaToCoverage===!0?d1(i.SAMPLE_ALPHA_TO_COVERAGE):L1(i.SAMPLE_ALPHA_TO_COVERAGE)}function t1(B){T!==B&&(B?i.frontFace(i.CW):i.frontFace(i.CCW),T=B)}function D(B){B!==n_?(d1(i.CULL_FACE),B!==F&&(B===zc?i.cullFace(i.BACK):B===i_?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):L1(i.CULL_FACE),F=B}function f1(B){B!==H&&(K&&i.lineWidth(B),H=B)}function X(B,M1,S1){B?(d1(i.POLYGON_OFFSET_FILL),(Y!==M1||e1!==S1)&&(i.polygonOffset(M1,S1),Y=M1,e1=S1)):L1(i.POLYGON_OFFSET_FILL)}function u1(B){B?d1(i.SCISSOR_TEST):L1(i.SCISSOR_TEST)}function o1(B){B===void 0&&(B=i.TEXTURE0+i1-1),m1!==B&&(i.activeTexture(B),m1=B)}function w1(B,M1,S1){S1===void 0&&(m1===null?S1=i.TEXTURE0+i1-1:S1=m1);let O1=k[S1];O1===void 0&&(O1={type:void 0,texture:void 0},k[S1]=O1),(O1.type!==B||O1.texture!==M1)&&(m1!==S1&&(i.activeTexture(S1),m1=S1),i.bindTexture(B,M1||x1[B]),O1.type=B,O1.texture=M1)}function P(){const B=k[m1];B!==void 0&&B.type!==void 0&&(i.bindTexture(B.type,null),B.type=void 0,B.texture=void 0)}function S(){try{i.compressedTexImage2D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function z(){try{i.compressedTexImage3D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Q(){try{i.texSubImage2D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function s1(){try{i.texSubImage3D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Z(){try{i.compressedTexSubImage2D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function A1(){try{i.compressedTexSubImage3D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function _1(){try{i.texStorage2D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function I1(){try{i.texStorage3D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function b1(){try{i.texImage2D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function y1(){try{i.texImage3D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function R1(B){c2.equals(B)===!1&&(i.scissor(B.x,B.y,B.z,B.w),c2.copy(B))}function V1(B){j1.equals(B)===!1&&(i.viewport(B.x,B.y,B.z,B.w),j1.copy(B))}function N1(B,M1){let S1=c.get(M1);S1===void 0&&(S1=new WeakMap,c.set(M1,S1));let O1=S1.get(B);O1===void 0&&(O1=i.getUniformBlockIndex(M1,B.name),S1.set(B,O1))}function C1(B,M1){const O1=c.get(M1).get(B);l.get(M1)!==O1&&(i.uniformBlockBinding(M1,O1,B.__bindingPointIndex),l.set(M1,O1))}function t2(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),a.setReversed(!1),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),u={},m1=null,k={},f={},h=new WeakMap,d=[],g=null,_=!1,m=null,p=null,b=null,w=null,y=null,C=null,A=null,L=new R2(0,0,0),N=0,E=!1,T=null,F=null,H=null,Y=null,e1=null,c2.set(0,0,i.canvas.width,i.canvas.height),j1.set(0,0,i.canvas.width,i.canvas.height),s.reset(),a.reset(),o.reset()}return{buffers:{color:s,depth:a,stencil:o},enable:d1,disable:L1,bindFramebuffer:D1,drawBuffers:U1,useProgram:d2,setBlending:$,setMaterial:J,setFlipSided:t1,setCullFace:D,setLineWidth:f1,setPolygonOffset:X,setScissorTest:u1,activeTexture:o1,bindTexture:w1,unbindTexture:P,compressedTexImage2D:S,compressedTexImage3D:z,texImage2D:b1,texImage3D:y1,updateUBOMapping:N1,uniformBlockBinding:C1,texStorage2D:_1,texStorage3D:I1,texSubImage2D:Q,texSubImage3D:s1,compressedTexSubImage2D:Z,compressedTexSubImage3D:A1,scissor:R1,viewport:V1,reset:t2}}function tM(i,e,t,n,r,s,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new H2,u=new WeakMap;let f;const h=new WeakMap;let d=!1;try{d=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(P,S){return d?new OffscreenCanvas(P,S):wa("canvas")}function _(P,S,z){let Q=1;const s1=w1(P);if((s1.width>z||s1.height>z)&&(Q=z/Math.max(s1.width,s1.height)),Q<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const Z=Math.floor(Q*s1.width),A1=Math.floor(Q*s1.height);f===void 0&&(f=g(Z,A1));const _1=S?g(Z,A1):f;return _1.width=Z,_1.height=A1,_1.getContext("2d").drawImage(P,0,0,Z,A1),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+s1.width+"x"+s1.height+") to ("+Z+"x"+A1+")."),_1}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+s1.width+"x"+s1.height+")."),P;return P}function m(P){return P.generateMipmaps}function p(P){i.generateMipmap(P)}function b(P){return P.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?i.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?i.TEXTURE_2D_ARRAY:i.TEXTURE_2D}function w(P,S,z,Q,s1=!1){if(P!==null){if(i[P]!==void 0)return i[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let Z=S;if(S===i.RED&&(z===i.FLOAT&&(Z=i.R32F),z===i.HALF_FLOAT&&(Z=i.R16F),z===i.UNSIGNED_BYTE&&(Z=i.R8)),S===i.RED_INTEGER&&(z===i.UNSIGNED_BYTE&&(Z=i.R8UI),z===i.UNSIGNED_SHORT&&(Z=i.R16UI),z===i.UNSIGNED_INT&&(Z=i.R32UI),z===i.BYTE&&(Z=i.R8I),z===i.SHORT&&(Z=i.R16I),z===i.INT&&(Z=i.R32I)),S===i.RG&&(z===i.FLOAT&&(Z=i.RG32F),z===i.HALF_FLOAT&&(Z=i.RG16F),z===i.UNSIGNED_BYTE&&(Z=i.RG8)),S===i.RG_INTEGER&&(z===i.UNSIGNED_BYTE&&(Z=i.RG8UI),z===i.UNSIGNED_SHORT&&(Z=i.RG16UI),z===i.UNSIGNED_INT&&(Z=i.RG32UI),z===i.BYTE&&(Z=i.RG8I),z===i.SHORT&&(Z=i.RG16I),z===i.INT&&(Z=i.RG32I)),S===i.RGB_INTEGER&&(z===i.UNSIGNED_BYTE&&(Z=i.RGB8UI),z===i.UNSIGNED_SHORT&&(Z=i.RGB16UI),z===i.UNSIGNED_INT&&(Z=i.RGB32UI),z===i.BYTE&&(Z=i.RGB8I),z===i.SHORT&&(Z=i.RGB16I),z===i.INT&&(Z=i.RGB32I)),S===i.RGBA_INTEGER&&(z===i.UNSIGNED_BYTE&&(Z=i.RGBA8UI),z===i.UNSIGNED_SHORT&&(Z=i.RGBA16UI),z===i.UNSIGNED_INT&&(Z=i.RGBA32UI),z===i.BYTE&&(Z=i.RGBA8I),z===i.SHORT&&(Z=i.RGBA16I),z===i.INT&&(Z=i.RGBA32I)),S===i.RGB&&z===i.UNSIGNED_INT_5_9_9_9_REV&&(Z=i.RGB9_E5),S===i.RGBA){const A1=s1?Ea:L2.getTransfer(Q);z===i.FLOAT&&(Z=i.RGBA32F),z===i.HALF_FLOAT&&(Z=i.RGBA16F),z===i.UNSIGNED_BYTE&&(Z=A1===z2?i.SRGB8_ALPHA8:i.RGBA8),z===i.UNSIGNED_SHORT_4_4_4_4&&(Z=i.RGBA4),z===i.UNSIGNED_SHORT_5_5_5_1&&(Z=i.RGB5_A1)}return(Z===i.R16F||Z===i.R32F||Z===i.RG16F||Z===i.RG32F||Z===i.RGBA16F||Z===i.RGBA32F)&&e.get("EXT_color_buffer_float"),Z}function y(P,S){let z;return P?S===null||S===Tn||S===Ur?z=i.DEPTH24_STENCIL8:S===q3?z=i.DEPTH32F_STENCIL8:S===Ir&&(z=i.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):S===null||S===Tn||S===Ur?z=i.DEPTH_COMPONENT24:S===q3?z=i.DEPTH_COMPONENT32F:S===Ir&&(z=i.DEPTH_COMPONENT16),z}function C(P,S){return m(P)===!0||P.isFramebufferTexture&&P.minFilter!==f3&&P.minFilter!==b3?Math.log2(Math.max(S.width,S.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?S.mipmaps.length:1}function A(P){const S=P.target;S.removeEventListener("dispose",A),N(S),S.isVideoTexture&&u.delete(S)}function L(P){const S=P.target;S.removeEventListener("dispose",L),T(S)}function N(P){const S=n.get(P);if(S.__webglInit===void 0)return;const z=P.source,Q=h.get(z);if(Q){const s1=Q[S.__cacheKey];s1.usedTimes--,s1.usedTimes===0&&E(P),Object.keys(Q).length===0&&h.delete(z)}n.remove(P)}function E(P){const S=n.get(P);i.deleteTexture(S.__webglTexture);const z=P.source,Q=h.get(z);delete Q[S.__cacheKey],a.memory.textures--}function T(P){const S=n.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),n.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let Q=0;Q<6;Q++){if(Array.isArray(S.__webglFramebuffer[Q]))for(let s1=0;s1<S.__webglFramebuffer[Q].length;s1++)i.deleteFramebuffer(S.__webglFramebuffer[Q][s1]);else i.deleteFramebuffer(S.__webglFramebuffer[Q]);S.__webglDepthbuffer&&i.deleteRenderbuffer(S.__webglDepthbuffer[Q])}else{if(Array.isArray(S.__webglFramebuffer))for(let Q=0;Q<S.__webglFramebuffer.length;Q++)i.deleteFramebuffer(S.__webglFramebuffer[Q]);else i.deleteFramebuffer(S.__webglFramebuffer);if(S.__webglDepthbuffer&&i.deleteRenderbuffer(S.__webglDepthbuffer),S.__webglMultisampledFramebuffer&&i.deleteFramebuffer(S.__webglMultisampledFramebuffer),S.__webglColorRenderbuffer)for(let Q=0;Q<S.__webglColorRenderbuffer.length;Q++)S.__webglColorRenderbuffer[Q]&&i.deleteRenderbuffer(S.__webglColorRenderbuffer[Q]);S.__webglDepthRenderbuffer&&i.deleteRenderbuffer(S.__webglDepthRenderbuffer)}const z=P.textures;for(let Q=0,s1=z.length;Q<s1;Q++){const Z=n.get(z[Q]);Z.__webglTexture&&(i.deleteTexture(Z.__webglTexture),a.memory.textures--),n.remove(z[Q])}n.remove(P)}let F=0;function H(){F=0}function Y(){const P=F;return P>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+r.maxTextures),F+=1,P}function e1(P){const S=[];return S.push(P.wrapS),S.push(P.wrapT),S.push(P.wrapR||0),S.push(P.magFilter),S.push(P.minFilter),S.push(P.anisotropy),S.push(P.internalFormat),S.push(P.format),S.push(P.type),S.push(P.generateMipmaps),S.push(P.premultiplyAlpha),S.push(P.flipY),S.push(P.unpackAlignment),S.push(P.colorSpace),S.join()}function i1(P,S){const z=n.get(P);if(P.isVideoTexture&&u1(P),P.isRenderTargetTexture===!1&&P.isExternalTexture!==!0&&P.version>0&&z.__version!==P.version){const Q=P.image;if(Q===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Q.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{x1(z,P,S);return}}else P.isExternalTexture&&(z.__webglTexture=P.sourceTexture?P.sourceTexture:null);t.bindTexture(i.TEXTURE_2D,z.__webglTexture,i.TEXTURE0+S)}function K(P,S){const z=n.get(P);if(P.isRenderTargetTexture===!1&&P.version>0&&z.__version!==P.version){x1(z,P,S);return}t.bindTexture(i.TEXTURE_2D_ARRAY,z.__webglTexture,i.TEXTURE0+S)}function j(P,S){const z=n.get(P);if(P.isRenderTargetTexture===!1&&P.version>0&&z.__version!==P.version){x1(z,P,S);return}t.bindTexture(i.TEXTURE_3D,z.__webglTexture,i.TEXTURE0+S)}function G(P,S){const z=n.get(P);if(P.version>0&&z.__version!==P.version){d1(z,P,S);return}t.bindTexture(i.TEXTURE_CUBE_MAP,z.__webglTexture,i.TEXTURE0+S)}const m1={[Z4]:i.REPEAT,[cn]:i.CLAMP_TO_EDGE,[J4]:i.MIRRORED_REPEAT},k={[f3]:i.NEAREST,[D_]:i.NEAREST_MIPMAP_NEAREST,[fs]:i.NEAREST_MIPMAP_LINEAR,[b3]:i.LINEAR,[Mo]:i.LINEAR_MIPMAP_NEAREST,[un]:i.LINEAR_MIPMAP_LINEAR},E1={[N_]:i.NEVER,[G_]:i.ALWAYS,[k_]:i.LESS,[Lf]:i.LEQUAL,[B_]:i.EQUAL,[V_]:i.GEQUAL,[z_]:i.GREATER,[H_]:i.NOTEQUAL};function z1(P,S){if(S.type===q3&&e.has("OES_texture_float_linear")===!1&&(S.magFilter===b3||S.magFilter===Mo||S.magFilter===fs||S.magFilter===un||S.minFilter===b3||S.minFilter===Mo||S.minFilter===fs||S.minFilter===un)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(P,i.TEXTURE_WRAP_S,m1[S.wrapS]),i.texParameteri(P,i.TEXTURE_WRAP_T,m1[S.wrapT]),(P===i.TEXTURE_3D||P===i.TEXTURE_2D_ARRAY)&&i.texParameteri(P,i.TEXTURE_WRAP_R,m1[S.wrapR]),i.texParameteri(P,i.TEXTURE_MAG_FILTER,k[S.magFilter]),i.texParameteri(P,i.TEXTURE_MIN_FILTER,k[S.minFilter]),S.compareFunction&&(i.texParameteri(P,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(P,i.TEXTURE_COMPARE_FUNC,E1[S.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(S.magFilter===f3||S.minFilter!==fs&&S.minFilter!==un||S.type===q3&&e.has("OES_texture_float_linear")===!1)return;if(S.anisotropy>1||n.get(S).__currentAnisotropy){const z=e.get("EXT_texture_filter_anisotropic");i.texParameterf(P,z.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,r.getMaxAnisotropy())),n.get(S).__currentAnisotropy=S.anisotropy}}}function c2(P,S){let z=!1;P.__webglInit===void 0&&(P.__webglInit=!0,S.addEventListener("dispose",A));const Q=S.source;let s1=h.get(Q);s1===void 0&&(s1={},h.set(Q,s1));const Z=e1(S);if(Z!==P.__cacheKey){s1[Z]===void 0&&(s1[Z]={texture:i.createTexture(),usedTimes:0},a.memory.textures++,z=!0),s1[Z].usedTimes++;const A1=s1[P.__cacheKey];A1!==void 0&&(s1[P.__cacheKey].usedTimes--,A1.usedTimes===0&&E(S)),P.__cacheKey=Z,P.__webglTexture=s1[Z].texture}return z}function j1(P,S,z){return Math.floor(Math.floor(P/z)/S)}function r1(P,S,z,Q){const Z=P.updateRanges;if(Z.length===0)t.texSubImage2D(i.TEXTURE_2D,0,0,0,S.width,S.height,z,Q,S.data);else{Z.sort((y1,R1)=>y1.start-R1.start);let A1=0;for(let y1=1;y1<Z.length;y1++){const R1=Z[A1],V1=Z[y1],N1=R1.start+R1.count,C1=j1(V1.start,S.width,4),t2=j1(R1.start,S.width,4);V1.start<=N1+1&&C1===t2&&j1(V1.start+V1.count-1,S.width,4)===C1?R1.count=Math.max(R1.count,V1.start+V1.count-R1.start):(++A1,Z[A1]=V1)}Z.length=A1+1;const _1=i.getParameter(i.UNPACK_ROW_LENGTH),I1=i.getParameter(i.UNPACK_SKIP_PIXELS),b1=i.getParameter(i.UNPACK_SKIP_ROWS);i.pixelStorei(i.UNPACK_ROW_LENGTH,S.width);for(let y1=0,R1=Z.length;y1<R1;y1++){const V1=Z[y1],N1=Math.floor(V1.start/4),C1=Math.ceil(V1.count/4),t2=N1%S.width,B=Math.floor(N1/S.width),M1=C1,S1=1;i.pixelStorei(i.UNPACK_SKIP_PIXELS,t2),i.pixelStorei(i.UNPACK_SKIP_ROWS,B),t.texSubImage2D(i.TEXTURE_2D,0,t2,B,M1,S1,z,Q,S.data)}P.clearUpdateRanges(),i.pixelStorei(i.UNPACK_ROW_LENGTH,_1),i.pixelStorei(i.UNPACK_SKIP_PIXELS,I1),i.pixelStorei(i.UNPACK_SKIP_ROWS,b1)}}function x1(P,S,z){let Q=i.TEXTURE_2D;(S.isDataArrayTexture||S.isCompressedArrayTexture)&&(Q=i.TEXTURE_2D_ARRAY),S.isData3DTexture&&(Q=i.TEXTURE_3D);const s1=c2(P,S),Z=S.source;t.bindTexture(Q,P.__webglTexture,i.TEXTURE0+z);const A1=n.get(Z);if(Z.version!==A1.__version||s1===!0){t.activeTexture(i.TEXTURE0+z);const _1=L2.getPrimaries(L2.workingColorSpace),I1=S.colorSpace===m0?null:L2.getPrimaries(S.colorSpace),b1=S.colorSpace===m0||_1===I1?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,S.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,S.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,S.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,b1);let y1=_(S.image,!1,r.maxTextureSize);y1=o1(S,y1);const R1=s.convert(S.format,S.colorSpace),V1=s.convert(S.type);let N1=w(S.internalFormat,R1,V1,S.colorSpace,S.isVideoTexture);z1(Q,S);let C1;const t2=S.mipmaps,B=S.isVideoTexture!==!0,M1=A1.__version===void 0||s1===!0,S1=Z.dataReady,O1=C(S,y1);if(S.isDepthTexture)N1=y(S.format===Fr,S.type),M1&&(B?t.texStorage2D(i.TEXTURE_2D,1,N1,y1.width,y1.height):t.texImage2D(i.TEXTURE_2D,0,N1,y1.width,y1.height,0,R1,V1,null));else if(S.isDataTexture)if(t2.length>0){B&&M1&&t.texStorage2D(i.TEXTURE_2D,O1,N1,t2[0].width,t2[0].height);for(let p1=0,h1=t2.length;p1<h1;p1++)C1=t2[p1],B?S1&&t.texSubImage2D(i.TEXTURE_2D,p1,0,0,C1.width,C1.height,R1,V1,C1.data):t.texImage2D(i.TEXTURE_2D,p1,N1,C1.width,C1.height,0,R1,V1,C1.data);S.generateMipmaps=!1}else B?(M1&&t.texStorage2D(i.TEXTURE_2D,O1,N1,y1.width,y1.height),S1&&r1(S,y1,R1,V1)):t.texImage2D(i.TEXTURE_2D,0,N1,y1.width,y1.height,0,R1,V1,y1.data);else if(S.isCompressedTexture)if(S.isCompressedArrayTexture){B&&M1&&t.texStorage3D(i.TEXTURE_2D_ARRAY,O1,N1,t2[0].width,t2[0].height,y1.depth);for(let p1=0,h1=t2.length;p1<h1;p1++)if(C1=t2[p1],S.format!==c3)if(R1!==null)if(B){if(S1)if(S.layerUpdates.size>0){const G1=fu(C1.width,C1.height,S.format,S.type);for(const W1 of S.layerUpdates){const b2=C1.data.subarray(W1*G1/C1.data.BYTES_PER_ELEMENT,(W1+1)*G1/C1.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,p1,0,0,W1,C1.width,C1.height,1,R1,b2)}S.clearLayerUpdates()}else t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,p1,0,0,0,C1.width,C1.height,y1.depth,R1,C1.data)}else t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,p1,N1,C1.width,C1.height,y1.depth,0,C1.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else B?S1&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,p1,0,0,0,C1.width,C1.height,y1.depth,R1,V1,C1.data):t.texImage3D(i.TEXTURE_2D_ARRAY,p1,N1,C1.width,C1.height,y1.depth,0,R1,V1,C1.data)}else{B&&M1&&t.texStorage2D(i.TEXTURE_2D,O1,N1,t2[0].width,t2[0].height);for(let p1=0,h1=t2.length;p1<h1;p1++)C1=t2[p1],S.format!==c3?R1!==null?B?S1&&t.compressedTexSubImage2D(i.TEXTURE_2D,p1,0,0,C1.width,C1.height,R1,C1.data):t.compressedTexImage2D(i.TEXTURE_2D,p1,N1,C1.width,C1.height,0,C1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):B?S1&&t.texSubImage2D(i.TEXTURE_2D,p1,0,0,C1.width,C1.height,R1,V1,C1.data):t.texImage2D(i.TEXTURE_2D,p1,N1,C1.width,C1.height,0,R1,V1,C1.data)}else if(S.isDataArrayTexture)if(B){if(M1&&t.texStorage3D(i.TEXTURE_2D_ARRAY,O1,N1,y1.width,y1.height,y1.depth),S1)if(S.layerUpdates.size>0){const p1=fu(y1.width,y1.height,S.format,S.type);for(const h1 of S.layerUpdates){const G1=y1.data.subarray(h1*p1/y1.data.BYTES_PER_ELEMENT,(h1+1)*p1/y1.data.BYTES_PER_ELEMENT);t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,h1,y1.width,y1.height,1,R1,V1,G1)}S.clearLayerUpdates()}else t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,y1.width,y1.height,y1.depth,R1,V1,y1.data)}else t.texImage3D(i.TEXTURE_2D_ARRAY,0,N1,y1.width,y1.height,y1.depth,0,R1,V1,y1.data);else if(S.isData3DTexture)B?(M1&&t.texStorage3D(i.TEXTURE_3D,O1,N1,y1.width,y1.height,y1.depth),S1&&t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,y1.width,y1.height,y1.depth,R1,V1,y1.data)):t.texImage3D(i.TEXTURE_3D,0,N1,y1.width,y1.height,y1.depth,0,R1,V1,y1.data);else if(S.isFramebufferTexture){if(M1)if(B)t.texStorage2D(i.TEXTURE_2D,O1,N1,y1.width,y1.height);else{let p1=y1.width,h1=y1.height;for(let G1=0;G1<O1;G1++)t.texImage2D(i.TEXTURE_2D,G1,N1,p1,h1,0,R1,V1,null),p1>>=1,h1>>=1}}else if(t2.length>0){if(B&&M1){const p1=w1(t2[0]);t.texStorage2D(i.TEXTURE_2D,O1,N1,p1.width,p1.height)}for(let p1=0,h1=t2.length;p1<h1;p1++)C1=t2[p1],B?S1&&t.texSubImage2D(i.TEXTURE_2D,p1,0,0,R1,V1,C1):t.texImage2D(i.TEXTURE_2D,p1,N1,R1,V1,C1);S.generateMipmaps=!1}else if(B){if(M1){const p1=w1(y1);t.texStorage2D(i.TEXTURE_2D,O1,N1,p1.width,p1.height)}S1&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,R1,V1,y1)}else t.texImage2D(i.TEXTURE_2D,0,N1,R1,V1,y1);m(S)&&p(Q),A1.__version=Z.version,S.onUpdate&&S.onUpdate(S)}P.__version=S.version}function d1(P,S,z){if(S.image.length!==6)return;const Q=c2(P,S),s1=S.source;t.bindTexture(i.TEXTURE_CUBE_MAP,P.__webglTexture,i.TEXTURE0+z);const Z=n.get(s1);if(s1.version!==Z.__version||Q===!0){t.activeTexture(i.TEXTURE0+z);const A1=L2.getPrimaries(L2.workingColorSpace),_1=S.colorSpace===m0?null:L2.getPrimaries(S.colorSpace),I1=S.colorSpace===m0||A1===_1?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,S.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,S.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,S.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,I1);const b1=S.isCompressedTexture||S.image[0].isCompressedTexture,y1=S.image[0]&&S.image[0].isDataTexture,R1=[];for(let h1=0;h1<6;h1++)!b1&&!y1?R1[h1]=_(S.image[h1],!0,r.maxCubemapSize):R1[h1]=y1?S.image[h1].image:S.image[h1],R1[h1]=o1(S,R1[h1]);const V1=R1[0],N1=s.convert(S.format,S.colorSpace),C1=s.convert(S.type),t2=w(S.internalFormat,N1,C1,S.colorSpace),B=S.isVideoTexture!==!0,M1=Z.__version===void 0||Q===!0,S1=s1.dataReady;let O1=C(S,V1);z1(i.TEXTURE_CUBE_MAP,S);let p1;if(b1){B&&M1&&t.texStorage2D(i.TEXTURE_CUBE_MAP,O1,t2,V1.width,V1.height);for(let h1=0;h1<6;h1++){p1=R1[h1].mipmaps;for(let G1=0;G1<p1.length;G1++){const W1=p1[G1];S.format!==c3?N1!==null?B?S1&&t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,G1,0,0,W1.width,W1.height,N1,W1.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,G1,t2,W1.width,W1.height,0,W1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):B?S1&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,G1,0,0,W1.width,W1.height,N1,C1,W1.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,G1,t2,W1.width,W1.height,0,N1,C1,W1.data)}}}else{if(p1=S.mipmaps,B&&M1){p1.length>0&&O1++;const h1=w1(R1[0]);t.texStorage2D(i.TEXTURE_CUBE_MAP,O1,t2,h1.width,h1.height)}for(let h1=0;h1<6;h1++)if(y1){B?S1&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,0,0,0,R1[h1].width,R1[h1].height,N1,C1,R1[h1].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,0,t2,R1[h1].width,R1[h1].height,0,N1,C1,R1[h1].data);for(let G1=0;G1<p1.length;G1++){const b2=p1[G1].image[h1].image;B?S1&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,G1+1,0,0,b2.width,b2.height,N1,C1,b2.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,G1+1,t2,b2.width,b2.height,0,N1,C1,b2.data)}}else{B?S1&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,0,0,0,N1,C1,R1[h1]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,0,t2,N1,C1,R1[h1]);for(let G1=0;G1<p1.length;G1++){const W1=p1[G1];B?S1&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,G1+1,0,0,N1,C1,W1.image[h1]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h1,G1+1,t2,N1,C1,W1.image[h1])}}}m(S)&&p(i.TEXTURE_CUBE_MAP),Z.__version=s1.version,S.onUpdate&&S.onUpdate(S)}P.__version=S.version}function L1(P,S,z,Q,s1,Z){const A1=s.convert(z.format,z.colorSpace),_1=s.convert(z.type),I1=w(z.internalFormat,A1,_1,z.colorSpace),b1=n.get(S),y1=n.get(z);if(y1.__renderTarget=S,!b1.__hasExternalTextures){const R1=Math.max(1,S.width>>Z),V1=Math.max(1,S.height>>Z);s1===i.TEXTURE_3D||s1===i.TEXTURE_2D_ARRAY?t.texImage3D(s1,Z,I1,R1,V1,S.depth,0,A1,_1,null):t.texImage2D(s1,Z,I1,R1,V1,0,A1,_1,null)}t.bindFramebuffer(i.FRAMEBUFFER,P),X(S)?o.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,Q,s1,y1.__webglTexture,0,f1(S)):(s1===i.TEXTURE_2D||s1>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&s1<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,Q,s1,y1.__webglTexture,Z),t.bindFramebuffer(i.FRAMEBUFFER,null)}function D1(P,S,z){if(i.bindRenderbuffer(i.RENDERBUFFER,P),S.depthBuffer){const Q=S.depthTexture,s1=Q&&Q.isDepthTexture?Q.type:null,Z=y(S.stencilBuffer,s1),A1=S.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,_1=f1(S);X(S)?o.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,_1,Z,S.width,S.height):z?i.renderbufferStorageMultisample(i.RENDERBUFFER,_1,Z,S.width,S.height):i.renderbufferStorage(i.RENDERBUFFER,Z,S.width,S.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,A1,i.RENDERBUFFER,P)}else{const Q=S.textures;for(let s1=0;s1<Q.length;s1++){const Z=Q[s1],A1=s.convert(Z.format,Z.colorSpace),_1=s.convert(Z.type),I1=w(Z.internalFormat,A1,_1,Z.colorSpace),b1=f1(S);z&&X(S)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,b1,I1,S.width,S.height):X(S)?o.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,b1,I1,S.width,S.height):i.renderbufferStorage(i.RENDERBUFFER,I1,S.width,S.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function U1(P,S){if(S&&S.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,P),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Q=n.get(S.depthTexture);Q.__renderTarget=S,(!Q.__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),i1(S.depthTexture,0);const s1=Q.__webglTexture,Z=f1(S);if(S.depthTexture.format===Or)X(S)?o.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,s1,0,Z):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,s1,0);else if(S.depthTexture.format===Fr)X(S)?o.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,s1,0,Z):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,s1,0);else throw new Error("Unknown depthTexture format")}function d2(P){const S=n.get(P),z=P.isWebGLCubeRenderTarget===!0;if(S.__boundDepthTexture!==P.depthTexture){const Q=P.depthTexture;if(S.__depthDisposeCallback&&S.__depthDisposeCallback(),Q){const s1=()=>{delete S.__boundDepthTexture,delete S.__depthDisposeCallback,Q.removeEventListener("dispose",s1)};Q.addEventListener("dispose",s1),S.__depthDisposeCallback=s1}S.__boundDepthTexture=Q}if(P.depthTexture&&!S.__autoAllocateDepthBuffer){if(z)throw new Error("target.depthTexture not supported in Cube render targets");const Q=P.texture.mipmaps;Q&&Q.length>0?U1(S.__webglFramebuffer[0],P):U1(S.__webglFramebuffer,P)}else if(z){S.__webglDepthbuffer=[];for(let Q=0;Q<6;Q++)if(t.bindFramebuffer(i.FRAMEBUFFER,S.__webglFramebuffer[Q]),S.__webglDepthbuffer[Q]===void 0)S.__webglDepthbuffer[Q]=i.createRenderbuffer(),D1(S.__webglDepthbuffer[Q],P,!1);else{const s1=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Z=S.__webglDepthbuffer[Q];i.bindRenderbuffer(i.RENDERBUFFER,Z),i.framebufferRenderbuffer(i.FRAMEBUFFER,s1,i.RENDERBUFFER,Z)}}else{const Q=P.texture.mipmaps;if(Q&&Q.length>0?t.bindFramebuffer(i.FRAMEBUFFER,S.__webglFramebuffer[0]):t.bindFramebuffer(i.FRAMEBUFFER,S.__webglFramebuffer),S.__webglDepthbuffer===void 0)S.__webglDepthbuffer=i.createRenderbuffer(),D1(S.__webglDepthbuffer,P,!1);else{const s1=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Z=S.__webglDepthbuffer;i.bindRenderbuffer(i.RENDERBUFFER,Z),i.framebufferRenderbuffer(i.FRAMEBUFFER,s1,i.RENDERBUFFER,Z)}}t.bindFramebuffer(i.FRAMEBUFFER,null)}function U(P,S,z){const Q=n.get(P);S!==void 0&&L1(Q.__webglFramebuffer,P,P.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),z!==void 0&&d2(P)}function M(P){const S=P.texture,z=n.get(P),Q=n.get(S);P.addEventListener("dispose",L);const s1=P.textures,Z=P.isWebGLCubeRenderTarget===!0,A1=s1.length>1;if(A1||(Q.__webglTexture===void 0&&(Q.__webglTexture=i.createTexture()),Q.__version=S.version,a.memory.textures++),Z){z.__webglFramebuffer=[];for(let _1=0;_1<6;_1++)if(S.mipmaps&&S.mipmaps.length>0){z.__webglFramebuffer[_1]=[];for(let I1=0;I1<S.mipmaps.length;I1++)z.__webglFramebuffer[_1][I1]=i.createFramebuffer()}else z.__webglFramebuffer[_1]=i.createFramebuffer()}else{if(S.mipmaps&&S.mipmaps.length>0){z.__webglFramebuffer=[];for(let _1=0;_1<S.mipmaps.length;_1++)z.__webglFramebuffer[_1]=i.createFramebuffer()}else z.__webglFramebuffer=i.createFramebuffer();if(A1)for(let _1=0,I1=s1.length;_1<I1;_1++){const b1=n.get(s1[_1]);b1.__webglTexture===void 0&&(b1.__webglTexture=i.createTexture(),a.memory.textures++)}if(P.samples>0&&X(P)===!1){z.__webglMultisampledFramebuffer=i.createFramebuffer(),z.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,z.__webglMultisampledFramebuffer);for(let _1=0;_1<s1.length;_1++){const I1=s1[_1];z.__webglColorRenderbuffer[_1]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,z.__webglColorRenderbuffer[_1]);const b1=s.convert(I1.format,I1.colorSpace),y1=s.convert(I1.type),R1=w(I1.internalFormat,b1,y1,I1.colorSpace,P.isXRRenderTarget===!0),V1=f1(P);i.renderbufferStorageMultisample(i.RENDERBUFFER,V1,R1,P.width,P.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+_1,i.RENDERBUFFER,z.__webglColorRenderbuffer[_1])}i.bindRenderbuffer(i.RENDERBUFFER,null),P.depthBuffer&&(z.__webglDepthRenderbuffer=i.createRenderbuffer(),D1(z.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(Z){t.bindTexture(i.TEXTURE_CUBE_MAP,Q.__webglTexture),z1(i.TEXTURE_CUBE_MAP,S);for(let _1=0;_1<6;_1++)if(S.mipmaps&&S.mipmaps.length>0)for(let I1=0;I1<S.mipmaps.length;I1++)L1(z.__webglFramebuffer[_1][I1],P,S,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+_1,I1);else L1(z.__webglFramebuffer[_1],P,S,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+_1,0);m(S)&&p(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(A1){for(let _1=0,I1=s1.length;_1<I1;_1++){const b1=s1[_1],y1=n.get(b1);let R1=i.TEXTURE_2D;(P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(R1=P.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),t.bindTexture(R1,y1.__webglTexture),z1(R1,b1),L1(z.__webglFramebuffer,P,b1,i.COLOR_ATTACHMENT0+_1,R1,0),m(b1)&&p(R1)}t.unbindTexture()}else{let _1=i.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(_1=P.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),t.bindTexture(_1,Q.__webglTexture),z1(_1,S),S.mipmaps&&S.mipmaps.length>0)for(let I1=0;I1<S.mipmaps.length;I1++)L1(z.__webglFramebuffer[I1],P,S,i.COLOR_ATTACHMENT0,_1,I1);else L1(z.__webglFramebuffer,P,S,i.COLOR_ATTACHMENT0,_1,0);m(S)&&p(_1),t.unbindTexture()}P.depthBuffer&&d2(P)}function $(P){const S=P.textures;for(let z=0,Q=S.length;z<Q;z++){const s1=S[z];if(m(s1)){const Z=b(P),A1=n.get(s1).__webglTexture;t.bindTexture(Z,A1),p(Z),t.unbindTexture()}}}const J=[],t1=[];function D(P){if(P.samples>0){if(X(P)===!1){const S=P.textures,z=P.width,Q=P.height;let s1=i.COLOR_BUFFER_BIT;const Z=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,A1=n.get(P),_1=S.length>1;if(_1)for(let b1=0;b1<S.length;b1++)t.bindFramebuffer(i.FRAMEBUFFER,A1.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+b1,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,A1.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+b1,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,A1.__webglMultisampledFramebuffer);const I1=P.texture.mipmaps;I1&&I1.length>0?t.bindFramebuffer(i.DRAW_FRAMEBUFFER,A1.__webglFramebuffer[0]):t.bindFramebuffer(i.DRAW_FRAMEBUFFER,A1.__webglFramebuffer);for(let b1=0;b1<S.length;b1++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(s1|=i.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(s1|=i.STENCIL_BUFFER_BIT)),_1){i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,A1.__webglColorRenderbuffer[b1]);const y1=n.get(S[b1]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,y1,0)}i.blitFramebuffer(0,0,z,Q,0,0,z,Q,s1,i.NEAREST),l===!0&&(J.length=0,t1.length=0,J.push(i.COLOR_ATTACHMENT0+b1),P.depthBuffer&&P.resolveDepthBuffer===!1&&(J.push(Z),t1.push(Z),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,t1)),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,J))}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),_1)for(let b1=0;b1<S.length;b1++){t.bindFramebuffer(i.FRAMEBUFFER,A1.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+b1,i.RENDERBUFFER,A1.__webglColorRenderbuffer[b1]);const y1=n.get(S[b1]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,A1.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+b1,i.TEXTURE_2D,y1,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,A1.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&l){const S=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT;i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[S])}}}function f1(P){return Math.min(r.maxSamples,P.samples)}function X(P){const S=n.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&S.__useRenderToTexture!==!1}function u1(P){const S=a.render.frame;u.get(P)!==S&&(u.set(P,S),P.update())}function o1(P,S){const z=P.colorSpace,Q=P.format,s1=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||z!==Ai&&z!==m0&&(L2.getTransfer(z)===z2?(Q!==c3||s1!==t0)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",z)),S}function w1(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(c.width=P.naturalWidth||P.width,c.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(c.width=P.displayWidth,c.height=P.displayHeight):(c.width=P.width,c.height=P.height),c}this.allocateTextureUnit=Y,this.resetTextureUnits=H,this.setTexture2D=i1,this.setTexture2DArray=K,this.setTexture3D=j,this.setTextureCube=G,this.rebindTextures=U,this.setupRenderTarget=M,this.updateRenderTargetMipmap=$,this.updateMultisampleRenderTarget=D,this.setupDepthRenderbuffer=d2,this.setupFrameBufferTexture=L1,this.useMultisampledRTT=X}function nM(i,e){function t(n,r=m0){let s;const a=L2.getTransfer(r);if(n===t0)return i.UNSIGNED_BYTE;if(n===Sl)return i.UNSIGNED_SHORT_4_4_4_4;if(n===bl)return i.UNSIGNED_SHORT_5_5_5_1;if(n===Tf)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===bf)return i.BYTE;if(n===Ef)return i.SHORT;if(n===Ir)return i.UNSIGNED_SHORT;if(n===Ml)return i.INT;if(n===Tn)return i.UNSIGNED_INT;if(n===q3)return i.FLOAT;if(n===Vr)return i.HALF_FLOAT;if(n===wf)return i.ALPHA;if(n===Af)return i.RGB;if(n===c3)return i.RGBA;if(n===Or)return i.DEPTH_COMPONENT;if(n===Fr)return i.DEPTH_STENCIL;if(n===Cf)return i.RED;if(n===El)return i.RED_INTEGER;if(n===Rf)return i.RG;if(n===Tl)return i.RG_INTEGER;if(n===wl)return i.RGBA_INTEGER;if(n===Ks||n===Zs||n===Js||n===Qs)if(a===z2)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===Ks)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Zs)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Js)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Qs)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===Ks)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Zs)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Js)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Qs)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Q4||n===e9||n===t9||n===n9)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Q4)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===e9)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===t9)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===n9)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===i9||n===r9||n===s9)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===i9||n===r9)return a===z2?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===s9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===a9||n===o9||n===l9||n===c9||n===u9||n===f9||n===h9||n===d9||n===p9||n===m9||n===_9||n===g9||n===v9||n===x9)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===a9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===o9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===l9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===c9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===u9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===f9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===h9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===d9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===p9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===m9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===_9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===g9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===v9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===x9)return a===z2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===ea||n===y9||n===M9)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===ea)return a===z2?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===y9)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===M9)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Pf||n===S9||n===b9||n===E9)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===ea)return s.COMPRESSED_RED_RGTC1_EXT;if(n===S9)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===b9)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===E9)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Ur?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:t}}class Zf extends ht{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}}const iM=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,rM=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class sM{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(this.texture===null){const n=new Zf(e.texture);(e.depthNear!==t.depthNear||e.depthFar!==t.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new F0({vertexShader:iM,fragmentShader:rM,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new $3(new qa(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class aM extends Ri{constructor(e,t){super();const n=this;let r=null,s=1,a=null,o="local-floor",l=1,c=null,u=null,f=null,h=null,d=null,g=null;const _=new sM,m={},p=t.getContextAttributes();let b=null,w=null;const y=[],C=[],A=new H2;let L=null;const N=new qt;N.viewport=new he;const E=new qt;E.viewport=new he;const T=[N,E],F=new Ag;let H=null,Y=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(r1){let x1=y[r1];return x1===void 0&&(x1=new Wo,y[r1]=x1),x1.getTargetRaySpace()},this.getControllerGrip=function(r1){let x1=y[r1];return x1===void 0&&(x1=new Wo,y[r1]=x1),x1.getGripSpace()},this.getHand=function(r1){let x1=y[r1];return x1===void 0&&(x1=new Wo,y[r1]=x1),x1.getHandSpace()};function e1(r1){const x1=C.indexOf(r1.inputSource);if(x1===-1)return;const d1=y[x1];d1!==void 0&&(d1.update(r1.inputSource,r1.frame,c||a),d1.dispatchEvent({type:r1.type,data:r1.inputSource}))}function i1(){r.removeEventListener("select",e1),r.removeEventListener("selectstart",e1),r.removeEventListener("selectend",e1),r.removeEventListener("squeeze",e1),r.removeEventListener("squeezestart",e1),r.removeEventListener("squeezeend",e1),r.removeEventListener("end",i1),r.removeEventListener("inputsourceschange",K);for(let r1=0;r1<y.length;r1++){const x1=C[r1];x1!==null&&(C[r1]=null,y[r1].disconnect(x1))}H=null,Y=null,_.reset();for(const r1 in m)delete m[r1];e.setRenderTarget(b),d=null,h=null,f=null,r=null,w=null,j1.stop(),n.isPresenting=!1,e.setPixelRatio(L),e.setSize(A.width,A.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(r1){s=r1,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(r1){o=r1,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||a},this.setReferenceSpace=function(r1){c=r1},this.getBaseLayer=function(){return h!==null?h:d},this.getBinding=function(){return f},this.getFrame=function(){return g},this.getSession=function(){return r},this.setSession=async function(r1){if(r=r1,r!==null){if(b=e.getRenderTarget(),r.addEventListener("select",e1),r.addEventListener("selectstart",e1),r.addEventListener("selectend",e1),r.addEventListener("squeeze",e1),r.addEventListener("squeezestart",e1),r.addEventListener("squeezeend",e1),r.addEventListener("end",i1),r.addEventListener("inputsourceschange",K),p.xrCompatible!==!0&&await t.makeXRCompatible(),L=e.getPixelRatio(),e.getSize(A),typeof XRWebGLBinding<"u"&&(f=new XRWebGLBinding(r,t)),f!==null&&"createProjectionLayer"in XRWebGLBinding.prototype){let d1=null,L1=null,D1=null;p.depth&&(D1=p.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,d1=p.stencil?Fr:Or,L1=p.stencil?Ur:Tn);const U1={colorFormat:t.RGBA8,depthFormat:D1,scaleFactor:s};h=f.createProjectionLayer(U1),r.updateRenderState({layers:[h]}),e.setPixelRatio(1),e.setSize(h.textureWidth,h.textureHeight,!1),w=new wn(h.textureWidth,h.textureHeight,{format:c3,type:t0,depthTexture:new Xf(h.textureWidth,h.textureHeight,L1,void 0,void 0,void 0,void 0,void 0,void 0,d1),stencilBuffer:p.stencil,colorSpace:e.outputColorSpace,samples:p.antialias?4:0,resolveDepthBuffer:h.ignoreDepthValues===!1,resolveStencilBuffer:h.ignoreDepthValues===!1})}else{const d1={antialias:p.antialias,alpha:!0,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,t,d1),r.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),w=new wn(d.framebufferWidth,d.framebufferHeight,{format:c3,type:t0,colorSpace:e.outputColorSpace,stencilBuffer:p.stencil,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}w.isXRRenderTarget=!0,this.setFoveation(l),c=null,a=await r.requestReferenceSpace(o),j1.setContext(r),j1.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function K(r1){for(let x1=0;x1<r1.removed.length;x1++){const d1=r1.removed[x1],L1=C.indexOf(d1);L1>=0&&(C[L1]=null,y[L1].disconnect(d1))}for(let x1=0;x1<r1.added.length;x1++){const d1=r1.added[x1];let L1=C.indexOf(d1);if(L1===-1){for(let U1=0;U1<y.length;U1++)if(U1>=C.length){C.push(d1),L1=U1;break}else if(C[U1]===null){C[U1]=d1,L1=U1;break}if(L1===-1)break}const D1=y[L1];D1&&D1.connect(d1)}}const j=new c1,G=new c1;function m1(r1,x1,d1){j.setFromMatrixPosition(x1.matrixWorld),G.setFromMatrixPosition(d1.matrixWorld);const L1=j.distanceTo(G),D1=x1.projectionMatrix.elements,U1=d1.projectionMatrix.elements,d2=D1[14]/(D1[10]-1),U=D1[14]/(D1[10]+1),M=(D1[9]+1)/D1[5],$=(D1[9]-1)/D1[5],J=(D1[8]-1)/D1[0],t1=(U1[8]+1)/U1[0],D=d2*J,f1=d2*t1,X=L1/(-J+t1),u1=X*-J;if(x1.matrixWorld.decompose(r1.position,r1.quaternion,r1.scale),r1.translateX(u1),r1.translateZ(X),r1.matrixWorld.compose(r1.position,r1.quaternion,r1.scale),r1.matrixWorldInverse.copy(r1.matrixWorld).invert(),D1[10]===-1)r1.projectionMatrix.copy(x1.projectionMatrix),r1.projectionMatrixInverse.copy(x1.projectionMatrixInverse);else{const o1=d2+X,w1=U+X,P=D-u1,S=f1+(L1-u1),z=M*U/w1*o1,Q=$*U/w1*o1;r1.projectionMatrix.makePerspective(P,S,z,Q,o1,w1),r1.projectionMatrixInverse.copy(r1.projectionMatrix).invert()}}function k(r1,x1){x1===null?r1.matrixWorld.copy(r1.matrix):r1.matrixWorld.multiplyMatrices(x1.matrixWorld,r1.matrix),r1.matrixWorldInverse.copy(r1.matrixWorld).invert()}this.updateCamera=function(r1){if(r===null)return;let x1=r1.near,d1=r1.far;_.texture!==null&&(_.depthNear>0&&(x1=_.depthNear),_.depthFar>0&&(d1=_.depthFar)),F.near=E.near=N.near=x1,F.far=E.far=N.far=d1,(H!==F.near||Y!==F.far)&&(r.updateRenderState({depthNear:F.near,depthFar:F.far}),H=F.near,Y=F.far),F.layers.mask=r1.layers.mask|6,N.layers.mask=F.layers.mask&3,E.layers.mask=F.layers.mask&5;const L1=r1.parent,D1=F.cameras;k(F,L1);for(let U1=0;U1<D1.length;U1++)k(D1[U1],L1);D1.length===2?m1(F,N,E):F.projectionMatrix.copy(N.projectionMatrix),E1(r1,F,L1)};function E1(r1,x1,d1){d1===null?r1.matrix.copy(x1.matrixWorld):(r1.matrix.copy(d1.matrixWorld),r1.matrix.invert(),r1.matrix.multiply(x1.matrixWorld)),r1.matrix.decompose(r1.position,r1.quaternion,r1.scale),r1.updateMatrixWorld(!0),r1.projectionMatrix.copy(x1.projectionMatrix),r1.projectionMatrixInverse.copy(x1.projectionMatrixInverse),r1.isPerspectiveCamera&&(r1.fov=T9*2*Math.atan(1/r1.projectionMatrix.elements[5]),r1.zoom=1)}this.getCamera=function(){return F},this.getFoveation=function(){if(!(h===null&&d===null))return l},this.setFoveation=function(r1){l=r1,h!==null&&(h.fixedFoveation=r1),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=r1)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(F)},this.getCameraTexture=function(r1){return m[r1]};let z1=null;function c2(r1,x1){if(u=x1.getViewerPose(c||a),g=x1,u!==null){const d1=u.views;d!==null&&(e.setRenderTargetFramebuffer(w,d.framebuffer),e.setRenderTarget(w));let L1=!1;d1.length!==F.cameras.length&&(F.cameras.length=0,L1=!0);for(let U=0;U<d1.length;U++){const M=d1[U];let $=null;if(d!==null)$=d.getViewport(M);else{const t1=f.getViewSubImage(h,M);$=t1.viewport,U===0&&(e.setRenderTargetTextures(w,t1.colorTexture,t1.depthStencilTexture),e.setRenderTarget(w))}let J=T[U];J===void 0&&(J=new qt,J.layers.enable(U),J.viewport=new he,T[U]=J),J.matrix.fromArray(M.transform.matrix),J.matrix.decompose(J.position,J.quaternion,J.scale),J.projectionMatrix.fromArray(M.projectionMatrix),J.projectionMatrixInverse.copy(J.projectionMatrix).invert(),J.viewport.set($.x,$.y,$.width,$.height),U===0&&(F.matrix.copy(J.matrix),F.matrix.decompose(F.position,F.quaternion,F.scale)),L1===!0&&F.cameras.push(J)}const D1=r.enabledFeatures;if(D1&&D1.includes("depth-sensing")&&r.depthUsage=="gpu-optimized"&&f){const U=f.getDepthInformation(d1[0]);U&&U.isValid&&U.texture&&_.init(U,r.renderState)}if(D1&&D1.includes("camera-access")&&(e.state.unbindTexture(),f))for(let U=0;U<d1.length;U++){const M=d1[U].camera;if(M){let $=m[M];$||($=new Zf,m[M]=$);const J=f.getCameraImage(M);$.sourceTexture=J}}}for(let d1=0;d1<y.length;d1++){const L1=C[d1],D1=y[d1];L1!==null&&D1!==void 0&&D1.update(L1,x1,c||a)}z1&&z1(r1,x1),x1.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:x1}),g=null}const j1=new qf;j1.setAnimationLoop(c2),this.setAnimationLoop=function(r1){z1=r1},this.dispose=function(){}}}const j0=new n0,oM=new xe;function lM(i,e){function t(m,p){m.matrixAutoUpdate===!0&&m.updateMatrix(),p.value.copy(m.matrix)}function n(m,p){p.color.getRGB(m.fogColor.value,zf(i)),p.isFog?(m.fogNear.value=p.near,m.fogFar.value=p.far):p.isFogExp2&&(m.fogDensity.value=p.density)}function r(m,p,b,w,y){p.isMeshBasicMaterial||p.isMeshLambertMaterial?s(m,p):p.isMeshToonMaterial?(s(m,p),f(m,p)):p.isMeshPhongMaterial?(s(m,p),u(m,p)):p.isMeshStandardMaterial?(s(m,p),h(m,p),p.isMeshPhysicalMaterial&&d(m,p,y)):p.isMeshMatcapMaterial?(s(m,p),g(m,p)):p.isMeshDepthMaterial?s(m,p):p.isMeshDistanceMaterial?(s(m,p),_(m,p)):p.isMeshNormalMaterial?s(m,p):p.isLineBasicMaterial?(a(m,p),p.isLineDashedMaterial&&o(m,p)):p.isPointsMaterial?l(m,p,b,w):p.isSpriteMaterial?c(m,p):p.isShadowMaterial?(m.color.value.copy(p.color),m.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function s(m,p){m.opacity.value=p.opacity,p.color&&m.diffuse.value.copy(p.color),p.emissive&&m.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(m.map.value=p.map,t(p.map,m.mapTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,t(p.alphaMap,m.alphaMapTransform)),p.bumpMap&&(m.bumpMap.value=p.bumpMap,t(p.bumpMap,m.bumpMapTransform),m.bumpScale.value=p.bumpScale,p.side===bt&&(m.bumpScale.value*=-1)),p.normalMap&&(m.normalMap.value=p.normalMap,t(p.normalMap,m.normalMapTransform),m.normalScale.value.copy(p.normalScale),p.side===bt&&m.normalScale.value.negate()),p.displacementMap&&(m.displacementMap.value=p.displacementMap,t(p.displacementMap,m.displacementMapTransform),m.displacementScale.value=p.displacementScale,m.displacementBias.value=p.displacementBias),p.emissiveMap&&(m.emissiveMap.value=p.emissiveMap,t(p.emissiveMap,m.emissiveMapTransform)),p.specularMap&&(m.specularMap.value=p.specularMap,t(p.specularMap,m.specularMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest);const b=e.get(p),w=b.envMap,y=b.envMapRotation;w&&(m.envMap.value=w,j0.copy(y),j0.x*=-1,j0.y*=-1,j0.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(j0.y*=-1,j0.z*=-1),m.envMapRotation.value.setFromMatrix4(oM.makeRotationFromEuler(j0)),m.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=p.reflectivity,m.ior.value=p.ior,m.refractionRatio.value=p.refractionRatio),p.lightMap&&(m.lightMap.value=p.lightMap,m.lightMapIntensity.value=p.lightMapIntensity,t(p.lightMap,m.lightMapTransform)),p.aoMap&&(m.aoMap.value=p.aoMap,m.aoMapIntensity.value=p.aoMapIntensity,t(p.aoMap,m.aoMapTransform))}function a(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,p.map&&(m.map.value=p.map,t(p.map,m.mapTransform))}function o(m,p){m.dashSize.value=p.dashSize,m.totalSize.value=p.dashSize+p.gapSize,m.scale.value=p.scale}function l(m,p,b,w){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.size.value=p.size*b,m.scale.value=w*.5,p.map&&(m.map.value=p.map,t(p.map,m.uvTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,t(p.alphaMap,m.alphaMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest)}function c(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.rotation.value=p.rotation,p.map&&(m.map.value=p.map,t(p.map,m.mapTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,t(p.alphaMap,m.alphaMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest)}function u(m,p){m.specular.value.copy(p.specular),m.shininess.value=Math.max(p.shininess,1e-4)}function f(m,p){p.gradientMap&&(m.gradientMap.value=p.gradientMap)}function h(m,p){m.metalness.value=p.metalness,p.metalnessMap&&(m.metalnessMap.value=p.metalnessMap,t(p.metalnessMap,m.metalnessMapTransform)),m.roughness.value=p.roughness,p.roughnessMap&&(m.roughnessMap.value=p.roughnessMap,t(p.roughnessMap,m.roughnessMapTransform)),p.envMap&&(m.envMapIntensity.value=p.envMapIntensity)}function d(m,p,b){m.ior.value=p.ior,p.sheen>0&&(m.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),m.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(m.sheenColorMap.value=p.sheenColorMap,t(p.sheenColorMap,m.sheenColorMapTransform)),p.sheenRoughnessMap&&(m.sheenRoughnessMap.value=p.sheenRoughnessMap,t(p.sheenRoughnessMap,m.sheenRoughnessMapTransform))),p.clearcoat>0&&(m.clearcoat.value=p.clearcoat,m.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(m.clearcoatMap.value=p.clearcoatMap,t(p.clearcoatMap,m.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,t(p.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(m.clearcoatNormalMap.value=p.clearcoatNormalMap,t(p.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===bt&&m.clearcoatNormalScale.value.negate())),p.dispersion>0&&(m.dispersion.value=p.dispersion),p.iridescence>0&&(m.iridescence.value=p.iridescence,m.iridescenceIOR.value=p.iridescenceIOR,m.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(m.iridescenceMap.value=p.iridescenceMap,t(p.iridescenceMap,m.iridescenceMapTransform)),p.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=p.iridescenceThicknessMap,t(p.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),p.transmission>0&&(m.transmission.value=p.transmission,m.transmissionSamplerMap.value=b.texture,m.transmissionSamplerSize.value.set(b.width,b.height),p.transmissionMap&&(m.transmissionMap.value=p.transmissionMap,t(p.transmissionMap,m.transmissionMapTransform)),m.thickness.value=p.thickness,p.thicknessMap&&(m.thicknessMap.value=p.thicknessMap,t(p.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=p.attenuationDistance,m.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(m.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(m.anisotropyMap.value=p.anisotropyMap,t(p.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=p.specularIntensity,m.specularColor.value.copy(p.specularColor),p.specularColorMap&&(m.specularColorMap.value=p.specularColorMap,t(p.specularColorMap,m.specularColorMapTransform)),p.specularIntensityMap&&(m.specularIntensityMap.value=p.specularIntensityMap,t(p.specularIntensityMap,m.specularIntensityMapTransform))}function g(m,p){p.matcap&&(m.matcap.value=p.matcap)}function _(m,p){const b=e.get(p).light;m.referencePosition.value.setFromMatrixPosition(b.matrixWorld),m.nearDistance.value=b.shadow.camera.near,m.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:r}}function cM(i,e,t,n){let r={},s={},a=[];const o=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function l(b,w){const y=w.program;n.uniformBlockBinding(b,y)}function c(b,w){let y=r[b.id];y===void 0&&(g(b),y=u(b),r[b.id]=y,b.addEventListener("dispose",m));const C=w.program;n.updateUBOMapping(b,C);const A=e.render.frame;s[b.id]!==A&&(h(b),s[b.id]=A)}function u(b){const w=f();b.__bindingPointIndex=w;const y=i.createBuffer(),C=b.__size,A=b.usage;return i.bindBuffer(i.UNIFORM_BUFFER,y),i.bufferData(i.UNIFORM_BUFFER,C,A),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,w,y),y}function f(){for(let b=0;b<o;b++)if(a.indexOf(b)===-1)return a.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function h(b){const w=r[b.id],y=b.uniforms,C=b.__cache;i.bindBuffer(i.UNIFORM_BUFFER,w);for(let A=0,L=y.length;A<L;A++){const N=Array.isArray(y[A])?y[A]:[y[A]];for(let E=0,T=N.length;E<T;E++){const F=N[E];if(d(F,A,E,C)===!0){const H=F.__offset,Y=Array.isArray(F.value)?F.value:[F.value];let e1=0;for(let i1=0;i1<Y.length;i1++){const K=Y[i1],j=_(K);typeof K=="number"||typeof K=="boolean"?(F.__data[0]=K,i.bufferSubData(i.UNIFORM_BUFFER,H+e1,F.__data)):K.isMatrix3?(F.__data[0]=K.elements[0],F.__data[1]=K.elements[1],F.__data[2]=K.elements[2],F.__data[3]=0,F.__data[4]=K.elements[3],F.__data[5]=K.elements[4],F.__data[6]=K.elements[5],F.__data[7]=0,F.__data[8]=K.elements[6],F.__data[9]=K.elements[7],F.__data[10]=K.elements[8],F.__data[11]=0):(K.toArray(F.__data,e1),e1+=j.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,H,F.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function d(b,w,y,C){const A=b.value,L=w+"_"+y;if(C[L]===void 0)return typeof A=="number"||typeof A=="boolean"?C[L]=A:C[L]=A.clone(),!0;{const N=C[L];if(typeof A=="number"||typeof A=="boolean"){if(N!==A)return C[L]=A,!0}else if(N.equals(A)===!1)return N.copy(A),!0}return!1}function g(b){const w=b.uniforms;let y=0;const C=16;for(let L=0,N=w.length;L<N;L++){const E=Array.isArray(w[L])?w[L]:[w[L]];for(let T=0,F=E.length;T<F;T++){const H=E[T],Y=Array.isArray(H.value)?H.value:[H.value];for(let e1=0,i1=Y.length;e1<i1;e1++){const K=Y[e1],j=_(K),G=y%C,m1=G%j.boundary,k=G+m1;y+=m1,k!==0&&C-k<j.storage&&(y+=C-k),H.__data=new Float32Array(j.storage/Float32Array.BYTES_PER_ELEMENT),H.__offset=y,y+=j.storage}}}const A=y%C;return A>0&&(y+=C-A),b.__size=y,b.__cache={},this}function _(b){const w={boundary:0,storage:0};return typeof b=="number"||typeof b=="boolean"?(w.boundary=4,w.storage=4):b.isVector2?(w.boundary=8,w.storage=8):b.isVector3||b.isColor?(w.boundary=16,w.storage=12):b.isVector4?(w.boundary=16,w.storage=16):b.isMatrix3?(w.boundary=48,w.storage=48):b.isMatrix4?(w.boundary=64,w.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),w}function m(b){const w=b.target;w.removeEventListener("dispose",m);const y=a.indexOf(w.__bindingPointIndex);a.splice(y,1),i.deleteBuffer(r[w.id]),delete r[w.id],delete s[w.id]}function p(){for(const b in r)i.deleteBuffer(r[b]);a=[],r={},s={}}return{bind:l,update:c,dispose:p}}class uM{constructor(e={}){const{canvas:t=X_(),context:n=null,depth:r=!0,stencil:s=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:f=!1,reversedDepthBuffer:h=!1}=e;this.isWebGLRenderer=!0;let d;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");d=n.getContextAttributes().alpha}else d=a;const g=new Uint32Array(4),_=new Int32Array(4);let m=null,p=null;const b=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=A0,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const y=this;let C=!1;this._outputColorSpace=Gt;let A=0,L=0,N=null,E=-1,T=null;const F=new he,H=new he;let Y=null;const e1=new R2(0);let i1=0,K=t.width,j=t.height,G=1,m1=null,k=null;const E1=new he(0,0,K,j),z1=new he(0,0,K,j);let c2=!1;const j1=new Gf;let r1=!1,x1=!1;const d1=new xe,L1=new c1,D1=new he,U1={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let d2=!1;function U(){return N===null?G:1}let M=n;function $(R,V){return t.getContext(R,V)}try{const R={alpha:!0,depth:r,stencil:s,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:f};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${yl}`),t.addEventListener("webglcontextlost",S1,!1),t.addEventListener("webglcontextrestored",O1,!1),t.addEventListener("webglcontextcreationerror",p1,!1),M===null){const V="webgl2";if(M=$(V,R),M===null)throw $(V)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let J,t1,D,f1,X,u1,o1,w1,P,S,z,Q,s1,Z,A1,_1,I1,b1,y1,R1,V1,N1,C1,t2;function B(){J=new yx(M),J.init(),N1=new nM(M,J),t1=new dx(M,J,e,N1),D=new eM(M,J),t1.reversedDepthBuffer&&h&&D.buffers.depth.setReversed(!0),f1=new bx(M),X=new Hy,u1=new tM(M,J,D,X,t1,N1,f1),o1=new mx(y),w1=new xx(y),P=new Rg(M),C1=new fx(M,P),S=new Mx(M,P,f1,C1),z=new Tx(M,S,P,f1),y1=new Ex(M,t1,u1),_1=new px(X),Q=new zy(y,o1,w1,J,t1,C1,_1),s1=new lM(y,X),Z=new Gy,A1=new jy(J),b1=new ux(y,o1,w1,D,z,d,l),I1=new Jy(y,z,t1),t2=new cM(M,f1,t1,D),R1=new hx(M,J,f1),V1=new Sx(M,J,f1),f1.programs=Q.programs,y.capabilities=t1,y.extensions=J,y.properties=X,y.renderLists=Z,y.shadowMap=I1,y.state=D,y.info=f1}B();const M1=new aM(y,M);this.xr=M1,this.getContext=function(){return M},this.getContextAttributes=function(){return M.getContextAttributes()},this.forceContextLoss=function(){const R=J.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=J.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(R){R!==void 0&&(G=R,this.setSize(K,j,!1))},this.getSize=function(R){return R.set(K,j)},this.setSize=function(R,V,n1=!0){if(M1.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}K=R,j=V,t.width=Math.floor(R*G),t.height=Math.floor(V*G),n1===!0&&(t.style.width=R+"px",t.style.height=V+"px"),this.setViewport(0,0,R,V)},this.getDrawingBufferSize=function(R){return R.set(K*G,j*G).floor()},this.setDrawingBufferSize=function(R,V,n1){K=R,j=V,G=n1,t.width=Math.floor(R*n1),t.height=Math.floor(V*n1),this.setViewport(0,0,R,V)},this.getCurrentViewport=function(R){return R.copy(F)},this.getViewport=function(R){return R.copy(E1)},this.setViewport=function(R,V,n1,a1){R.isVector4?E1.set(R.x,R.y,R.z,R.w):E1.set(R,V,n1,a1),D.viewport(F.copy(E1).multiplyScalar(G).round())},this.getScissor=function(R){return R.copy(z1)},this.setScissor=function(R,V,n1,a1){R.isVector4?z1.set(R.x,R.y,R.z,R.w):z1.set(R,V,n1,a1),D.scissor(H.copy(z1).multiplyScalar(G).round())},this.getScissorTest=function(){return c2},this.setScissorTest=function(R){D.setScissorTest(c2=R)},this.setOpaqueSort=function(R){m1=R},this.setTransparentSort=function(R){k=R},this.getClearColor=function(R){return R.copy(b1.getClearColor())},this.setClearColor=function(){b1.setClearColor(...arguments)},this.getClearAlpha=function(){return b1.getClearAlpha()},this.setClearAlpha=function(){b1.setClearAlpha(...arguments)},this.clear=function(R=!0,V=!0,n1=!0){let a1=0;if(R){let W=!1;if(N!==null){const g1=N.texture.format;W=g1===wl||g1===Tl||g1===El}if(W){const g1=N.texture.type,P1=g1===t0||g1===Tn||g1===Ir||g1===Ur||g1===Sl||g1===bl,X1=b1.getClearColor(),H1=b1.getClearAlpha(),Q1=X1.r,K1=X1.g,Y1=X1.b;P1?(g[0]=Q1,g[1]=K1,g[2]=Y1,g[3]=H1,M.clearBufferuiv(M.COLOR,0,g)):(_[0]=Q1,_[1]=K1,_[2]=Y1,_[3]=H1,M.clearBufferiv(M.COLOR,0,_))}else a1|=M.COLOR_BUFFER_BIT}V&&(a1|=M.DEPTH_BUFFER_BIT),n1&&(a1|=M.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),M.clear(a1)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",S1,!1),t.removeEventListener("webglcontextrestored",O1,!1),t.removeEventListener("webglcontextcreationerror",p1,!1),b1.dispose(),Z.dispose(),A1.dispose(),X.dispose(),o1.dispose(),w1.dispose(),z.dispose(),C1.dispose(),t2.dispose(),Q.dispose(),M1.dispose(),M1.removeEventListener("sessionstart",f2),M1.removeEventListener("sessionend",F1),e2.stop()};function S1(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function O1(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1;const R=f1.autoReset,V=I1.enabled,n1=I1.autoUpdate,a1=I1.needsUpdate,W=I1.type;B(),f1.autoReset=R,I1.enabled=V,I1.autoUpdate=n1,I1.needsUpdate=a1,I1.type=W}function p1(R){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",R.statusMessage)}function h1(R){const V=R.target;V.removeEventListener("dispose",h1),G1(V)}function G1(R){W1(R),X.remove(R)}function W1(R){const V=X.get(R).programs;V!==void 0&&(V.forEach(function(n1){Q.releaseProgram(n1)}),R.isShaderMaterial&&Q.releaseShaderCache(R))}this.renderBufferDirect=function(R,V,n1,a1,W,g1){V===null&&(V=U1);const P1=W.isMesh&&W.matrixWorld.determinant()<0,X1=w2(R,V,n1,a1,W);D.setMaterial(a1,P1);let H1=n1.index,Q1=1;if(a1.wireframe===!0){if(H1=S.getWireframeAttribute(n1),H1===void 0)return;Q1=2}const K1=n1.drawRange,Y1=n1.attributes.position;let u2=K1.start*Q1,v2=(K1.start+K1.count)*Q1;g1!==null&&(u2=Math.max(u2,g1.start*Q1),v2=Math.min(v2,(g1.start+g1.count)*Q1)),H1!==null?(u2=Math.max(u2,0),v2=Math.min(v2,H1.count)):Y1!=null&&(u2=Math.max(u2,0),v2=Math.min(v2,Y1.count));const J2=v2-u2;if(J2<0||J2===1/0)return;C1.setup(W,a1,X1,n1,H1);let G2,U2=R1;if(H1!==null&&(G2=P.get(H1),U2=V1,U2.setIndex(G2)),W.isMesh)a1.wireframe===!0?(D.setLineWidth(a1.wireframeLinewidth*U()),U2.setMode(M.LINES)):U2.setMode(M.TRIANGLES);else if(W.isLine){let n2=a1.linewidth;n2===void 0&&(n2=1),D.setLineWidth(n2*U()),W.isLineSegments?U2.setMode(M.LINES):W.isLineLoop?U2.setMode(M.LINE_LOOP):U2.setMode(M.LINE_STRIP)}else W.isPoints?U2.setMode(M.POINTS):W.isSprite&&U2.setMode(M.TRIANGLES);if(W.isBatchedMesh)if(W._multiDrawInstances!==null)hi("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),U2.renderMultiDrawInstances(W._multiDrawStarts,W._multiDrawCounts,W._multiDrawCount,W._multiDrawInstances);else if(J.get("WEBGL_multi_draw"))U2.renderMultiDraw(W._multiDrawStarts,W._multiDrawCounts,W._multiDrawCount);else{const n2=W._multiDrawStarts,W2=W._multiDrawCounts,A2=W._multiDrawCount,Ge=H1?P.get(H1).bytesPerElement:1,P3=X.get(a1).currentProgram.getUniforms();for(let we=0;we<A2;we++)P3.setValue(M,"_gl_DrawID",we),U2.render(n2[we]/Ge,W2[we])}else if(W.isInstancedMesh)U2.renderInstances(u2,J2,W.count);else if(n1.isInstancedBufferGeometry){const n2=n1._maxInstanceCount!==void 0?n1._maxInstanceCount:1/0,W2=Math.min(n1.instanceCount,n2);U2.renderInstances(u2,J2,W2)}else U2.render(u2,J2)};function b2(R,V,n1){R.transparent===!0&&R.side===W3&&R.forceSinglePass===!1?(R.side=bt,R.needsUpdate=!0,j2(R,V,n1),R.side=O0,R.needsUpdate=!0,j2(R,V,n1),R.side=W3):j2(R,V,n1)}this.compile=function(R,V,n1=null){n1===null&&(n1=R),p=A1.get(n1),p.init(V),w.push(p),n1.traverseVisible(function(W){W.isLight&&W.layers.test(V.layers)&&(p.pushLight(W),W.castShadow&&p.pushShadow(W))}),R!==n1&&R.traverseVisible(function(W){W.isLight&&W.layers.test(V.layers)&&(p.pushLight(W),W.castShadow&&p.pushShadow(W))}),p.setupLights();const a1=new Set;return R.traverse(function(W){if(!(W.isMesh||W.isPoints||W.isLine||W.isSprite))return;const g1=W.material;if(g1)if(Array.isArray(g1))for(let P1=0;P1<g1.length;P1++){const X1=g1[P1];b2(X1,n1,W),a1.add(X1)}else b2(g1,n1,W),a1.add(g1)}),p=w.pop(),a1},this.compileAsync=function(R,V,n1=null){const a1=this.compile(R,V,n1);return new Promise(W=>{function g1(){if(a1.forEach(function(P1){X.get(P1).currentProgram.isReady()&&a1.delete(P1)}),a1.size===0){W(R);return}setTimeout(g1,10)}J.get("KHR_parallel_shader_compile")!==null?g1():setTimeout(g1,10)})};let k1=null;function $1(R){k1&&k1(R)}function f2(){e2.stop()}function F1(){e2.start()}const e2=new qf;e2.setAnimationLoop($1),typeof self<"u"&&e2.setContext(self),this.setAnimationLoop=function(R){k1=R,M1.setAnimationLoop(R),R===null?e2.stop():e2.start()},M1.addEventListener("sessionstart",f2),M1.addEventListener("sessionend",F1),this.render=function(R,V){if(V!==void 0&&V.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(C===!0)return;if(R.matrixWorldAutoUpdate===!0&&R.updateMatrixWorld(),V.parent===null&&V.matrixWorldAutoUpdate===!0&&V.updateMatrixWorld(),M1.enabled===!0&&M1.isPresenting===!0&&(M1.cameraAutoUpdate===!0&&M1.updateCamera(V),V=M1.getCamera()),R.isScene===!0&&R.onBeforeRender(y,R,V,N),p=A1.get(R,w.length),p.init(V),w.push(p),d1.multiplyMatrices(V.projectionMatrix,V.matrixWorldInverse),j1.setFromProjectionMatrix(d1,E3,V.reversedDepth),x1=this.localClippingEnabled,r1=_1.init(this.clippingPlanes,x1),m=Z.get(R,b.length),m.init(),b.push(m),M1.enabled===!0&&M1.isPresenting===!0){const g1=y.xr.getDepthSensingMesh();g1!==null&&Z1(g1,V,-1/0,y.sortObjects)}Z1(R,V,0,y.sortObjects),m.finish(),y.sortObjects===!0&&m.sort(m1,k),d2=M1.enabled===!1||M1.isPresenting===!1||M1.hasDepthSensing()===!1,d2&&b1.addToRenderList(m,R),this.info.render.frame++,r1===!0&&_1.beginShadows();const n1=p.state.shadowsArray;I1.render(n1,R,V),r1===!0&&_1.endShadows(),this.info.autoReset===!0&&this.info.reset();const a1=m.opaque,W=m.transmissive;if(p.setupLights(),V.isArrayCamera){const g1=V.cameras;if(W.length>0)for(let P1=0,X1=g1.length;P1<X1;P1++){const H1=g1[P1];D2(a1,W,R,H1)}d2&&b1.render(R);for(let P1=0,X1=g1.length;P1<X1;P1++){const H1=g1[P1];s2(m,R,H1,H1.viewport)}}else W.length>0&&D2(a1,W,R,V),d2&&b1.render(R),s2(m,R,V);N!==null&&L===0&&(u1.updateMultisampleRenderTarget(N),u1.updateRenderTargetMipmap(N)),R.isScene===!0&&R.onAfterRender(y,R,V),C1.resetDefaultState(),E=-1,T=null,w.pop(),w.length>0?(p=w[w.length-1],r1===!0&&_1.setGlobalState(y.clippingPlanes,p.state.camera)):p=null,b.pop(),b.length>0?m=b[b.length-1]:m=null};function Z1(R,V,n1,a1){if(R.visible===!1)return;if(R.layers.test(V.layers)){if(R.isGroup)n1=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(V);else if(R.isLight)p.pushLight(R),R.castShadow&&p.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||j1.intersectsSprite(R)){a1&&D1.setFromMatrixPosition(R.matrixWorld).applyMatrix4(d1);const P1=z.update(R),X1=R.material;X1.visible&&m.push(R,P1,X1,n1,D1.z,null)}}else if((R.isMesh||R.isLine||R.isPoints)&&(!R.frustumCulled||j1.intersectsObject(R))){const P1=z.update(R),X1=R.material;if(a1&&(R.boundingSphere!==void 0?(R.boundingSphere===null&&R.computeBoundingSphere(),D1.copy(R.boundingSphere.center)):(P1.boundingSphere===null&&P1.computeBoundingSphere(),D1.copy(P1.boundingSphere.center)),D1.applyMatrix4(R.matrixWorld).applyMatrix4(d1)),Array.isArray(X1)){const H1=P1.groups;for(let Q1=0,K1=H1.length;Q1<K1;Q1++){const Y1=H1[Q1],u2=X1[Y1.materialIndex];u2&&u2.visible&&m.push(R,P1,u2,n1,D1.z,Y1)}}else X1.visible&&m.push(R,P1,X1,n1,D1.z,null)}}const g1=R.children;for(let P1=0,X1=g1.length;P1<X1;P1++)Z1(g1[P1],V,n1,a1)}function s2(R,V,n1,a1){const W=R.opaque,g1=R.transmissive,P1=R.transparent;p.setupLightsView(n1),r1===!0&&_1.setGlobalState(y.clippingPlanes,n1),a1&&D.viewport(F.copy(a1)),W.length>0&&p2(W,V,n1),g1.length>0&&p2(g1,V,n1),P1.length>0&&p2(P1,V,n1),D.buffers.depth.setTest(!0),D.buffers.depth.setMask(!0),D.buffers.color.setMask(!0),D.setPolygonOffset(!1)}function D2(R,V,n1,a1){if((n1.isScene===!0?n1.overrideMaterial:null)!==null)return;p.state.transmissionRenderTarget[a1.id]===void 0&&(p.state.transmissionRenderTarget[a1.id]=new wn(1,1,{generateMipmaps:!0,type:J.has("EXT_color_buffer_half_float")||J.has("EXT_color_buffer_float")?Vr:t0,minFilter:un,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:L2.workingColorSpace}));const g1=p.state.transmissionRenderTarget[a1.id],P1=a1.viewport||F;g1.setSize(P1.z*y.transmissionResolutionScale,P1.w*y.transmissionResolutionScale);const X1=y.getRenderTarget(),H1=y.getActiveCubeFace(),Q1=y.getActiveMipmapLevel();y.setRenderTarget(g1),y.getClearColor(e1),i1=y.getClearAlpha(),i1<1&&y.setClearColor(16777215,.5),y.clear(),d2&&b1.render(n1);const K1=y.toneMapping;y.toneMapping=A0;const Y1=a1.viewport;if(a1.viewport!==void 0&&(a1.viewport=void 0),p.setupLightsView(a1),r1===!0&&_1.setGlobalState(y.clippingPlanes,a1),p2(R,n1,a1),u1.updateMultisampleRenderTarget(g1),u1.updateRenderTargetMipmap(g1),J.has("WEBGL_multisampled_render_to_texture")===!1){let u2=!1;for(let v2=0,J2=V.length;v2<J2;v2++){const G2=V[v2],U2=G2.object,n2=G2.geometry,W2=G2.material,A2=G2.group;if(W2.side===W3&&U2.layers.test(a1.layers)){const Ge=W2.side;W2.side=bt,W2.needsUpdate=!0,I2(U2,n1,a1,n2,W2,A2),W2.side=Ge,W2.needsUpdate=!0,u2=!0}}u2===!0&&(u1.updateMultisampleRenderTarget(g1),u1.updateRenderTargetMipmap(g1))}y.setRenderTarget(X1,H1,Q1),y.setClearColor(e1,i1),Y1!==void 0&&(a1.viewport=Y1),y.toneMapping=K1}function p2(R,V,n1){const a1=V.isScene===!0?V.overrideMaterial:null;for(let W=0,g1=R.length;W<g1;W++){const P1=R[W],X1=P1.object,H1=P1.geometry,Q1=P1.group;let K1=P1.material;K1.allowOverride===!0&&a1!==null&&(K1=a1),X1.layers.test(n1.layers)&&I2(X1,V,n1,H1,K1,Q1)}}function I2(R,V,n1,a1,W,g1){R.onBeforeRender(y,V,n1,a1,W,g1),R.modelViewMatrix.multiplyMatrices(n1.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),W.onBeforeRender(y,V,n1,a1,R,g1),W.transparent===!0&&W.side===W3&&W.forceSinglePass===!1?(W.side=bt,W.needsUpdate=!0,y.renderBufferDirect(n1,V,a1,W,R,g1),W.side=O0,W.needsUpdate=!0,y.renderBufferDirect(n1,V,a1,W,R,g1),W.side=W3):y.renderBufferDirect(n1,V,a1,W,R,g1),R.onAfterRender(y,V,n1,a1,W,g1)}function j2(R,V,n1){V.isScene!==!0&&(V=U1);const a1=X.get(R),W=p.state.lights,g1=p.state.shadowsArray,P1=W.state.version,X1=Q.getParameters(R,W.state,g1,V,n1),H1=Q.getProgramCacheKey(X1);let Q1=a1.programs;a1.environment=R.isMeshStandardMaterial?V.environment:null,a1.fog=V.fog,a1.envMap=(R.isMeshStandardMaterial?w1:o1).get(R.envMap||a1.environment),a1.envMapRotation=a1.environment!==null&&R.envMap===null?V.environmentRotation:R.envMapRotation,Q1===void 0&&(R.addEventListener("dispose",h1),Q1=new Map,a1.programs=Q1);let K1=Q1.get(H1);if(K1!==void 0){if(a1.currentProgram===K1&&a1.lightsStateVersion===P1)return k2(R,X1),K1}else X1.uniforms=Q.getUniforms(R),R.onBeforeCompile(X1,y),K1=Q.acquireProgram(X1,H1),Q1.set(H1,K1),a1.uniforms=X1.uniforms;const Y1=a1.uniforms;return(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(Y1.clippingPlanes=_1.uniform),k2(R,X1),a1.needsLights=V2(R),a1.lightsStateVersion=P1,a1.needsLights&&(Y1.ambientLightColor.value=W.state.ambient,Y1.lightProbe.value=W.state.probe,Y1.directionalLights.value=W.state.directional,Y1.directionalLightShadows.value=W.state.directionalShadow,Y1.spotLights.value=W.state.spot,Y1.spotLightShadows.value=W.state.spotShadow,Y1.rectAreaLights.value=W.state.rectArea,Y1.ltc_1.value=W.state.rectAreaLTC1,Y1.ltc_2.value=W.state.rectAreaLTC2,Y1.pointLights.value=W.state.point,Y1.pointLightShadows.value=W.state.pointShadow,Y1.hemisphereLights.value=W.state.hemi,Y1.directionalShadowMap.value=W.state.directionalShadowMap,Y1.directionalShadowMatrix.value=W.state.directionalShadowMatrix,Y1.spotShadowMap.value=W.state.spotShadowMap,Y1.spotLightMatrix.value=W.state.spotLightMatrix,Y1.spotLightMap.value=W.state.spotLightMap,Y1.pointShadowMap.value=W.state.pointShadowMap,Y1.pointShadowMatrix.value=W.state.pointShadowMatrix),a1.currentProgram=K1,a1.uniformsList=null,K1}function B2(R){if(R.uniformsList===null){const V=R.currentProgram.getUniforms();R.uniformsList=ta.seqWithValue(V.seq,R.uniforms)}return R.uniformsList}function k2(R,V){const n1=X.get(R);n1.outputColorSpace=V.outputColorSpace,n1.batching=V.batching,n1.batchingColor=V.batchingColor,n1.instancing=V.instancing,n1.instancingColor=V.instancingColor,n1.instancingMorph=V.instancingMorph,n1.skinning=V.skinning,n1.morphTargets=V.morphTargets,n1.morphNormals=V.morphNormals,n1.morphColors=V.morphColors,n1.morphTargetsCount=V.morphTargetsCount,n1.numClippingPlanes=V.numClippingPlanes,n1.numIntersection=V.numClipIntersection,n1.vertexAlphas=V.vertexAlphas,n1.vertexTangents=V.vertexTangents,n1.toneMapping=V.toneMapping}function w2(R,V,n1,a1,W){V.isScene!==!0&&(V=U1),u1.resetTextureUnits();const g1=V.fog,P1=a1.isMeshStandardMaterial?V.environment:null,X1=N===null?y.outputColorSpace:N.isXRRenderTarget===!0?N.texture.colorSpace:Ai,H1=(a1.isMeshStandardMaterial?w1:o1).get(a1.envMap||P1),Q1=a1.vertexColors===!0&&!!n1.attributes.color&&n1.attributes.color.itemSize===4,K1=!!n1.attributes.tangent&&(!!a1.normalMap||a1.anisotropy>0),Y1=!!n1.morphAttributes.position,u2=!!n1.morphAttributes.normal,v2=!!n1.morphAttributes.color;let J2=A0;a1.toneMapped&&(N===null||N.isXRRenderTarget===!0)&&(J2=y.toneMapping);const G2=n1.morphAttributes.position||n1.morphAttributes.normal||n1.morphAttributes.color,U2=G2!==void 0?G2.length:0,n2=X.get(a1),W2=p.state.lights;if(r1===!0&&(x1===!0||R!==T)){const Ae=R===T&&a1.id===E;_1.setState(a1,R,Ae)}let A2=!1;a1.version===n2.__version?(n2.needsLights&&n2.lightsStateVersion!==W2.state.version||n2.outputColorSpace!==X1||W.isBatchedMesh&&n2.batching===!1||!W.isBatchedMesh&&n2.batching===!0||W.isBatchedMesh&&n2.batchingColor===!0&&W.colorTexture===null||W.isBatchedMesh&&n2.batchingColor===!1&&W.colorTexture!==null||W.isInstancedMesh&&n2.instancing===!1||!W.isInstancedMesh&&n2.instancing===!0||W.isSkinnedMesh&&n2.skinning===!1||!W.isSkinnedMesh&&n2.skinning===!0||W.isInstancedMesh&&n2.instancingColor===!0&&W.instanceColor===null||W.isInstancedMesh&&n2.instancingColor===!1&&W.instanceColor!==null||W.isInstancedMesh&&n2.instancingMorph===!0&&W.morphTexture===null||W.isInstancedMesh&&n2.instancingMorph===!1&&W.morphTexture!==null||n2.envMap!==H1||a1.fog===!0&&n2.fog!==g1||n2.numClippingPlanes!==void 0&&(n2.numClippingPlanes!==_1.numPlanes||n2.numIntersection!==_1.numIntersection)||n2.vertexAlphas!==Q1||n2.vertexTangents!==K1||n2.morphTargets!==Y1||n2.morphNormals!==u2||n2.morphColors!==v2||n2.toneMapping!==J2||n2.morphTargetsCount!==U2)&&(A2=!0):(A2=!0,n2.__version=a1.version);let Ge=n2.currentProgram;A2===!0&&(Ge=j2(a1,V,W));let P3=!1,we=!1,B0=!1;const o2=Ge.getUniforms(),We=n2.uniforms;if(D.useProgram(Ge.program)&&(P3=!0,we=!0,B0=!0),a1.id!==E&&(E=a1.id,we=!0),P3||T!==R){D.buffers.depth.getReversed()&&R.reversedDepth!==!0&&(R._reversedDepth=!0,R.updateProjectionMatrix()),o2.setValue(M,"projectionMatrix",R.projectionMatrix),o2.setValue(M,"viewMatrix",R.matrixWorldInverse);const Fe=o2.map.cameraPosition;Fe!==void 0&&Fe.setValue(M,L1.setFromMatrixPosition(R.matrixWorld)),t1.logarithmicDepthBuffer&&o2.setValue(M,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),(a1.isMeshPhongMaterial||a1.isMeshToonMaterial||a1.isMeshLambertMaterial||a1.isMeshBasicMaterial||a1.isMeshStandardMaterial||a1.isShaderMaterial)&&o2.setValue(M,"isOrthographic",R.isOrthographicCamera===!0),T!==R&&(T=R,we=!0,B0=!0)}if(W.isSkinnedMesh){o2.setOptional(M,W,"bindMatrix"),o2.setOptional(M,W,"bindMatrixInverse");const Ae=W.skeleton;Ae&&(Ae.boneTexture===null&&Ae.computeBoneTexture(),o2.setValue(M,"boneTexture",Ae.boneTexture,u1))}W.isBatchedMesh&&(o2.setOptional(M,W,"batchingTexture"),o2.setValue(M,"batchingTexture",W._matricesTexture,u1),o2.setOptional(M,W,"batchingIdTexture"),o2.setValue(M,"batchingIdTexture",W._indirectTexture,u1),o2.setOptional(M,W,"batchingColorTexture"),W._colorsTexture!==null&&o2.setValue(M,"batchingColorTexture",W._colorsTexture,u1));const ae=n1.morphAttributes;if((ae.position!==void 0||ae.normal!==void 0||ae.color!==void 0)&&y1.update(W,n1,Ge),(we||n2.receiveShadow!==W.receiveShadow)&&(n2.receiveShadow=W.receiveShadow,o2.setValue(M,"receiveShadow",W.receiveShadow)),a1.isMeshGouraudMaterial&&a1.envMap!==null&&(We.envMap.value=H1,We.flipEnvMap.value=H1.isCubeTexture&&H1.isRenderTargetTexture===!1?-1:1),a1.isMeshStandardMaterial&&a1.envMap===null&&V.environment!==null&&(We.envMapIntensity.value=V.environmentIntensity),we&&(o2.setValue(M,"toneMappingExposure",y.toneMappingExposure),n2.needsLights&&Ue(We,B0),g1&&a1.fog===!0&&s1.refreshFogUniforms(We,g1),s1.refreshMaterialUniforms(We,a1,G,j,p.state.transmissionRenderTarget[R.id]),ta.upload(M,B2(n2),We,u1)),a1.isShaderMaterial&&a1.uniformsNeedUpdate===!0&&(ta.upload(M,B2(n2),We,u1),a1.uniformsNeedUpdate=!1),a1.isSpriteMaterial&&o2.setValue(M,"center",W.center),o2.setValue(M,"modelViewMatrix",W.modelViewMatrix),o2.setValue(M,"normalMatrix",W.normalMatrix),o2.setValue(M,"modelMatrix",W.matrixWorld),a1.isShaderMaterial||a1.isRawShaderMaterial){const Ae=a1.uniformsGroups;for(let Fe=0,mt=Ae.length;Fe<mt;Fe++){const Ce=Ae[Fe];t2.update(Ce,Ge),t2.bind(Ce,Ge)}}return Ge}function Ue(R,V){R.ambientLightColor.needsUpdate=V,R.lightProbe.needsUpdate=V,R.directionalLights.needsUpdate=V,R.directionalLightShadows.needsUpdate=V,R.pointLights.needsUpdate=V,R.pointLightShadows.needsUpdate=V,R.spotLights.needsUpdate=V,R.spotLightShadows.needsUpdate=V,R.rectAreaLights.needsUpdate=V,R.hemisphereLights.needsUpdate=V}function V2(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.getActiveCubeFace=function(){return A},this.getActiveMipmapLevel=function(){return L},this.getRenderTarget=function(){return N},this.setRenderTargetTextures=function(R,V,n1){const a1=X.get(R);a1.__autoAllocateDepthBuffer=R.resolveDepthBuffer===!1,a1.__autoAllocateDepthBuffer===!1&&(a1.__useRenderToTexture=!1),X.get(R.texture).__webglTexture=V,X.get(R.depthTexture).__webglTexture=a1.__autoAllocateDepthBuffer?void 0:n1,a1.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(R,V){const n1=X.get(R);n1.__webglFramebuffer=V,n1.__useDefaultFramebuffer=V===void 0};const Oe=M.createFramebuffer();this.setRenderTarget=function(R,V=0,n1=0){N=R,A=V,L=n1;let a1=!0,W=null,g1=!1,P1=!1;if(R){const H1=X.get(R);if(H1.__useDefaultFramebuffer!==void 0)D.bindFramebuffer(M.FRAMEBUFFER,null),a1=!1;else if(H1.__webglFramebuffer===void 0)u1.setupRenderTarget(R);else if(H1.__hasExternalTextures)u1.rebindTextures(R,X.get(R.texture).__webglTexture,X.get(R.depthTexture).__webglTexture);else if(R.depthBuffer){const Y1=R.depthTexture;if(H1.__boundDepthTexture!==Y1){if(Y1!==null&&X.has(Y1)&&(R.width!==Y1.image.width||R.height!==Y1.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");u1.setupDepthRenderbuffer(R)}}const Q1=R.texture;(Q1.isData3DTexture||Q1.isDataArrayTexture||Q1.isCompressedArrayTexture)&&(P1=!0);const K1=X.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(Array.isArray(K1[V])?W=K1[V][n1]:W=K1[V],g1=!0):R.samples>0&&u1.useMultisampledRTT(R)===!1?W=X.get(R).__webglMultisampledFramebuffer:Array.isArray(K1)?W=K1[n1]:W=K1,F.copy(R.viewport),H.copy(R.scissor),Y=R.scissorTest}else F.copy(E1).multiplyScalar(G).floor(),H.copy(z1).multiplyScalar(G).floor(),Y=c2;if(n1!==0&&(W=Oe),D.bindFramebuffer(M.FRAMEBUFFER,W)&&a1&&D.drawBuffers(R,W),D.viewport(F),D.scissor(H),D.setScissorTest(Y),g1){const H1=X.get(R.texture);M.framebufferTexture2D(M.FRAMEBUFFER,M.COLOR_ATTACHMENT0,M.TEXTURE_CUBE_MAP_POSITIVE_X+V,H1.__webglTexture,n1)}else if(P1){const H1=V;for(let Q1=0;Q1<R.textures.length;Q1++){const K1=X.get(R.textures[Q1]);M.framebufferTextureLayer(M.FRAMEBUFFER,M.COLOR_ATTACHMENT0+Q1,K1.__webglTexture,n1,H1)}}else if(R!==null&&n1!==0){const H1=X.get(R.texture);M.framebufferTexture2D(M.FRAMEBUFFER,M.COLOR_ATTACHMENT0,M.TEXTURE_2D,H1.__webglTexture,n1)}E=-1},this.readRenderTargetPixels=function(R,V,n1,a1,W,g1,P1,X1=0){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let H1=X.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&P1!==void 0&&(H1=H1[P1]),H1){D.bindFramebuffer(M.FRAMEBUFFER,H1);try{const Q1=R.textures[X1],K1=Q1.format,Y1=Q1.type;if(!t1.textureFormatReadable(K1)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!t1.textureTypeReadable(Y1)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}V>=0&&V<=R.width-a1&&n1>=0&&n1<=R.height-W&&(R.textures.length>1&&M.readBuffer(M.COLOR_ATTACHMENT0+X1),M.readPixels(V,n1,a1,W,N1.convert(K1),N1.convert(Y1),g1))}finally{const Q1=N!==null?X.get(N).__webglFramebuffer:null;D.bindFramebuffer(M.FRAMEBUFFER,Q1)}}},this.readRenderTargetPixelsAsync=async function(R,V,n1,a1,W,g1,P1,X1=0){if(!(R&&R.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let H1=X.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&P1!==void 0&&(H1=H1[P1]),H1)if(V>=0&&V<=R.width-a1&&n1>=0&&n1<=R.height-W){D.bindFramebuffer(M.FRAMEBUFFER,H1);const Q1=R.textures[X1],K1=Q1.format,Y1=Q1.type;if(!t1.textureFormatReadable(K1))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!t1.textureTypeReadable(Y1))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const u2=M.createBuffer();M.bindBuffer(M.PIXEL_PACK_BUFFER,u2),M.bufferData(M.PIXEL_PACK_BUFFER,g1.byteLength,M.STREAM_READ),R.textures.length>1&&M.readBuffer(M.COLOR_ATTACHMENT0+X1),M.readPixels(V,n1,a1,W,N1.convert(K1),N1.convert(Y1),0);const v2=N!==null?X.get(N).__webglFramebuffer:null;D.bindFramebuffer(M.FRAMEBUFFER,v2);const J2=M.fenceSync(M.SYNC_GPU_COMMANDS_COMPLETE,0);return M.flush(),await q_(M,J2,4),M.bindBuffer(M.PIXEL_PACK_BUFFER,u2),M.getBufferSubData(M.PIXEL_PACK_BUFFER,0,g1),M.deleteBuffer(u2),M.deleteSync(J2),g1}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(R,V=null,n1=0){const a1=Math.pow(2,-n1),W=Math.floor(R.image.width*a1),g1=Math.floor(R.image.height*a1),P1=V!==null?V.x:0,X1=V!==null?V.y:0;u1.setTexture2D(R,0),M.copyTexSubImage2D(M.TEXTURE_2D,n1,0,0,P1,X1,W,g1),D.unbindTexture()};const pt=M.createFramebuffer(),se=M.createFramebuffer();this.copyTextureToTexture=function(R,V,n1=null,a1=null,W=0,g1=null){g1===null&&(W!==0?(hi("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),g1=W,W=0):g1=0);let P1,X1,H1,Q1,K1,Y1,u2,v2,J2;const G2=R.isCompressedTexture?R.mipmaps[g1]:R.image;if(n1!==null)P1=n1.max.x-n1.min.x,X1=n1.max.y-n1.min.y,H1=n1.isBox3?n1.max.z-n1.min.z:1,Q1=n1.min.x,K1=n1.min.y,Y1=n1.isBox3?n1.min.z:0;else{const ae=Math.pow(2,-W);P1=Math.floor(G2.width*ae),X1=Math.floor(G2.height*ae),R.isDataArrayTexture?H1=G2.depth:R.isData3DTexture?H1=Math.floor(G2.depth*ae):H1=1,Q1=0,K1=0,Y1=0}a1!==null?(u2=a1.x,v2=a1.y,J2=a1.z):(u2=0,v2=0,J2=0);const U2=N1.convert(V.format),n2=N1.convert(V.type);let W2;V.isData3DTexture?(u1.setTexture3D(V,0),W2=M.TEXTURE_3D):V.isDataArrayTexture||V.isCompressedArrayTexture?(u1.setTexture2DArray(V,0),W2=M.TEXTURE_2D_ARRAY):(u1.setTexture2D(V,0),W2=M.TEXTURE_2D),M.pixelStorei(M.UNPACK_FLIP_Y_WEBGL,V.flipY),M.pixelStorei(M.UNPACK_PREMULTIPLY_ALPHA_WEBGL,V.premultiplyAlpha),M.pixelStorei(M.UNPACK_ALIGNMENT,V.unpackAlignment);const A2=M.getParameter(M.UNPACK_ROW_LENGTH),Ge=M.getParameter(M.UNPACK_IMAGE_HEIGHT),P3=M.getParameter(M.UNPACK_SKIP_PIXELS),we=M.getParameter(M.UNPACK_SKIP_ROWS),B0=M.getParameter(M.UNPACK_SKIP_IMAGES);M.pixelStorei(M.UNPACK_ROW_LENGTH,G2.width),M.pixelStorei(M.UNPACK_IMAGE_HEIGHT,G2.height),M.pixelStorei(M.UNPACK_SKIP_PIXELS,Q1),M.pixelStorei(M.UNPACK_SKIP_ROWS,K1),M.pixelStorei(M.UNPACK_SKIP_IMAGES,Y1);const o2=R.isDataArrayTexture||R.isData3DTexture,We=V.isDataArrayTexture||V.isData3DTexture;if(R.isDepthTexture){const ae=X.get(R),Ae=X.get(V),Fe=X.get(ae.__renderTarget),mt=X.get(Ae.__renderTarget);D.bindFramebuffer(M.READ_FRAMEBUFFER,Fe.__webglFramebuffer),D.bindFramebuffer(M.DRAW_FRAMEBUFFER,mt.__webglFramebuffer);for(let Ce=0;Ce<H1;Ce++)o2&&(M.framebufferTextureLayer(M.READ_FRAMEBUFFER,M.COLOR_ATTACHMENT0,X.get(R).__webglTexture,W,Y1+Ce),M.framebufferTextureLayer(M.DRAW_FRAMEBUFFER,M.COLOR_ATTACHMENT0,X.get(V).__webglTexture,g1,J2+Ce)),M.blitFramebuffer(Q1,K1,P1,X1,u2,v2,P1,X1,M.DEPTH_BUFFER_BIT,M.NEAREST);D.bindFramebuffer(M.READ_FRAMEBUFFER,null),D.bindFramebuffer(M.DRAW_FRAMEBUFFER,null)}else if(W!==0||R.isRenderTargetTexture||X.has(R)){const ae=X.get(R),Ae=X.get(V);D.bindFramebuffer(M.READ_FRAMEBUFFER,pt),D.bindFramebuffer(M.DRAW_FRAMEBUFFER,se);for(let Fe=0;Fe<H1;Fe++)o2?M.framebufferTextureLayer(M.READ_FRAMEBUFFER,M.COLOR_ATTACHMENT0,ae.__webglTexture,W,Y1+Fe):M.framebufferTexture2D(M.READ_FRAMEBUFFER,M.COLOR_ATTACHMENT0,M.TEXTURE_2D,ae.__webglTexture,W),We?M.framebufferTextureLayer(M.DRAW_FRAMEBUFFER,M.COLOR_ATTACHMENT0,Ae.__webglTexture,g1,J2+Fe):M.framebufferTexture2D(M.DRAW_FRAMEBUFFER,M.COLOR_ATTACHMENT0,M.TEXTURE_2D,Ae.__webglTexture,g1),W!==0?M.blitFramebuffer(Q1,K1,P1,X1,u2,v2,P1,X1,M.COLOR_BUFFER_BIT,M.NEAREST):We?M.copyTexSubImage3D(W2,g1,u2,v2,J2+Fe,Q1,K1,P1,X1):M.copyTexSubImage2D(W2,g1,u2,v2,Q1,K1,P1,X1);D.bindFramebuffer(M.READ_FRAMEBUFFER,null),D.bindFramebuffer(M.DRAW_FRAMEBUFFER,null)}else We?R.isDataTexture||R.isData3DTexture?M.texSubImage3D(W2,g1,u2,v2,J2,P1,X1,H1,U2,n2,G2.data):V.isCompressedArrayTexture?M.compressedTexSubImage3D(W2,g1,u2,v2,J2,P1,X1,H1,U2,G2.data):M.texSubImage3D(W2,g1,u2,v2,J2,P1,X1,H1,U2,n2,G2):R.isDataTexture?M.texSubImage2D(M.TEXTURE_2D,g1,u2,v2,P1,X1,U2,n2,G2.data):R.isCompressedTexture?M.compressedTexSubImage2D(M.TEXTURE_2D,g1,u2,v2,G2.width,G2.height,U2,G2.data):M.texSubImage2D(M.TEXTURE_2D,g1,u2,v2,P1,X1,U2,n2,G2);M.pixelStorei(M.UNPACK_ROW_LENGTH,A2),M.pixelStorei(M.UNPACK_IMAGE_HEIGHT,Ge),M.pixelStorei(M.UNPACK_SKIP_PIXELS,P3),M.pixelStorei(M.UNPACK_SKIP_ROWS,we),M.pixelStorei(M.UNPACK_SKIP_IMAGES,B0),g1===0&&V.generateMipmaps&&M.generateMipmap(W2),D.unbindTexture()},this.copyTextureToTexture3D=function(R,V,n1=null,a1=null,W=0){return hi('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(R,V,n1,a1,W)},this.initRenderTarget=function(R){X.get(R).__webglFramebuffer===void 0&&u1.setupRenderTarget(R)},this.initTexture=function(R){R.isCubeTexture?u1.setTextureCube(R,0):R.isData3DTexture?u1.setTexture3D(R,0):R.isDataArrayTexture||R.isCompressedArrayTexture?u1.setTexture2DArray(R,0):u1.setTexture2D(R,0),D.unbindTexture()},this.resetState=function(){A=0,L=0,N=null,D.reset(),C1.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return E3}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=L2._getDrawingBufferColorSpace(e),t.unpackColorSpace=L2._getUnpackColorSpace()}}const fM=1/3,p3=1/6,Jo=i=>Math.floor(i)|0,Qo=new Float64Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]);function hM(i=Math.random){const e=dM(i),t=new Float64Array(e).map(s=>Qo[s%12*3]),n=new Float64Array(e).map(s=>Qo[s%12*3+1]),r=new Float64Array(e).map(s=>Qo[s%12*3+2]);return function(a,o,l){let c,u,f,h;const d=(a+o+l)*fM,g=Jo(a+d),_=Jo(o+d),m=Jo(l+d),p=(g+_+m)*p3,b=g-p,w=_-p,y=m-p,C=a-b,A=o-w,L=l-y;let N,E,T,F,H,Y;C>=A?A>=L?(N=1,E=0,T=0,F=1,H=1,Y=0):C>=L?(N=1,E=0,T=0,F=1,H=0,Y=1):(N=0,E=0,T=1,F=1,H=0,Y=1):A<L?(N=0,E=0,T=1,F=0,H=1,Y=1):C<L?(N=0,E=1,T=0,F=0,H=1,Y=1):(N=0,E=1,T=0,F=1,H=1,Y=0);const e1=C-N+p3,i1=A-E+p3,K=L-T+p3,j=C-F+2*p3,G=A-H+2*p3,m1=L-Y+2*p3,k=C-1+3*p3,E1=A-1+3*p3,z1=L-1+3*p3,c2=g&255,j1=_&255,r1=m&255;let x1=.6-C*C-A*A-L*L;if(x1<0)c=0;else{const U1=c2+e[j1+e[r1]];x1*=x1,c=x1*x1*(t[U1]*C+n[U1]*A+r[U1]*L)}let d1=.6-e1*e1-i1*i1-K*K;if(d1<0)u=0;else{const U1=c2+N+e[j1+E+e[r1+T]];d1*=d1,u=d1*d1*(t[U1]*e1+n[U1]*i1+r[U1]*K)}let L1=.6-j*j-G*G-m1*m1;if(L1<0)f=0;else{const U1=c2+F+e[j1+H+e[r1+Y]];L1*=L1,f=L1*L1*(t[U1]*j+n[U1]*G+r[U1]*m1)}let D1=.6-k*k-E1*E1-z1*z1;if(D1<0)h=0;else{const U1=c2+1+e[j1+1+e[r1+1]];D1*=D1,h=D1*D1*(t[U1]*k+n[U1]*E1+r[U1]*z1)}return 32*(c+u+f+h)}}function dM(i){const t=new Uint8Array(512);for(let n=0;n<512/2;n++)t[n]=n;for(let n=0;n<512/2-1;n++){const r=n+~~(i()*(256-n)),s=t[n];t[n]=t[r],t[r]=s}for(let n=256;n<512;n++)t[n]=t[n-256];return t}const Rl=(i,e)=>{const t=i.__vccOpts||i;for(const[n,r]of e)t[n]=r;return t},pM={__name:"Background",setup(i){const e=Be(null);function t(n=32){const r=document.createElement("canvas");r.width=r.height=n;const s=r.getContext("2d"),a=s.createRadialGradient(n/2,n/2,0,n/2,n/2,n/2);a.addColorStop(0,"rgba(255,255,255,1)"),a.addColorStop(.4,"rgba(255,255,255,0.3)"),a.addColorStop(1,"rgba(255,255,255,0)"),s.fillStyle=a,s.fillRect(0,0,n,n);const o=new ht(r);return o.needsUpdate=!0,o}return r0(()=>{const n=new gg,r=new qt(75,window.innerWidth/window.innerHeight,.1,1e3);r.position.z=6;const s=new uM({antialias:!1,alpha:!0});s.setSize(window.innerWidth,window.innerHeight),e.value.appendChild(s.domElement);const a=1200,o=new s0,l=new Float32Array(a*3),c=new Float32Array(a*3),u=hM(),f=[new R2(10040319),new R2(43775),new R2(16737996)];let h=0;for(let m=0;m<a;m++){const p=(Math.random()-.5)*20,b=(Math.random()-.5)*20,w=(Math.random()-.5)*20,y=u(p*.15,b*.15,w*.15);if(y>0){l.set([p,b,w],h*3);const C=(y+1)/2,A=f[Math.floor(C*f.length)];c.set([A.r,A.g,A.b],h*3),h++}}o.setAttribute("position",new e3(l.slice(0,h*3),3)),o.setAttribute("color",new e3(c.slice(0,h*3),3));const d=new Wf({size:.18,vertexColors:!0,transparent:!0,opacity:.6,blending:B4,depthWrite:!1,map:t(),alphaTest:.01}),g=new Mg(o,d);n.add(g),n.add(new wg(16777215,.15));function _(){g.rotation.y+=8e-4,g.rotation.x+=25e-5,s.render(n,r),requestAnimationFrame(_)}_(),window.addEventListener("resize",()=>{r.aspect=window.innerWidth/window.innerHeight,r.updateProjectionMatrix(),s.setSize(window.innerWidth,window.innerHeight)})}),(n,r)=>(ne(),ce("div",{ref_key:"container",ref:e,class:"nebula-canvas"},null,512))}},mM=Rl(pM,[["__scopeId","data-v-15aeba5c"]]);/*!
 * ScrollToPlugin 3.13.0
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var Je,Jf,K3,T3,C0,Qf,pi,Os,eh=function(){return typeof window<"u"},th=function(){return Je||eh()&&(Je=window.gsap)&&Je.registerPlugin&&Je},nh=function(e){return typeof e=="string"},Fu=function(e){return typeof e=="function"},Nr=function(e,t){var n=t==="x"?"Width":"Height",r="scroll"+n,s="client"+n;return e===K3||e===T3||e===C0?Math.max(T3[r],C0[r])-(K3["inner"+n]||T3[s]||C0[s]):e[r]-e["offset"+n]},kr=function(e,t){var n="scroll"+(t==="x"?"Left":"Top");return e===K3&&(e.pageXOffset!=null?n="page"+t.toUpperCase()+"Offset":e=T3[n]!=null?T3:C0),function(){return e[n]}},_M=function(e,t,n,r){if(Fu(e)&&(e=e(t,n,r)),typeof e!="object")return nh(e)&&e!=="max"&&e.charAt(1)!=="="?{x:e,y:e}:{y:e};if(e.nodeType)return{y:e,x:e};var s={},a;for(a in e)s[a]=a!=="onAutoKill"&&Fu(e[a])?e[a](t,n,r):e[a];return s},ih=function(e,t){if(e=Qf(e)[0],!e||!e.getBoundingClientRect)return console.warn("scrollTo target doesn't exist. Using 0")||{x:0,y:0};var n=e.getBoundingClientRect(),r=!t||t===K3||t===C0,s=r?{top:T3.clientTop-(K3.pageYOffset||T3.scrollTop||C0.scrollTop||0),left:T3.clientLeft-(K3.pageXOffset||T3.scrollLeft||C0.scrollLeft||0)}:t.getBoundingClientRect(),a={x:n.left-s.left,y:n.top-s.top};return!r&&t&&(a.x+=kr(t,"x")(),a.y+=kr(t,"y")()),a},Nu=function(e,t,n,r,s){return!isNaN(e)&&typeof e!="object"?parseFloat(e)-s:nh(e)&&e.charAt(1)==="="?parseFloat(e.substr(2))*(e.charAt(0)==="-"?-1:1)+r-s:e==="max"?Nr(t,n)-s:Math.min(Nr(t,n),ih(e,t)[n]-s)},C9=function(){Je=th(),eh()&&Je&&typeof document<"u"&&document.body&&(K3=window,C0=document.body,T3=document.documentElement,Qf=Je.utils.toArray,Je.config({autoKillThreshold:7}),pi=Je.config(),Jf=1)},Li={version:"3.13.0",name:"scrollTo",rawVars:1,register:function(e){Je=e,C9()},init:function(e,t,n,r,s){Jf||C9();var a=this,o=Je.getProperty(e,"scrollSnapType");a.isWin=e===K3,a.target=e,a.tween=n,t=_M(t,r,e,s),a.vars=t,a.autoKill=!!("autoKill"in t?t:pi).autoKill,a.getX=kr(e,"x"),a.getY=kr(e,"y"),a.x=a.xPrev=a.getX(),a.y=a.yPrev=a.getY(),Os||(Os=Je.core.globals().ScrollTrigger),Je.getProperty(e,"scrollBehavior")==="smooth"&&Je.set(e,{scrollBehavior:"auto"}),o&&o!=="none"&&(a.snap=1,a.snapInline=e.style.scrollSnapType,e.style.scrollSnapType="none"),t.x!=null?(a.add(a,"x",a.x,Nu(t.x,e,"x",a.x,t.offsetX||0),r,s),a._props.push("scrollTo_x")):a.skipX=1,t.y!=null?(a.add(a,"y",a.y,Nu(t.y,e,"y",a.y,t.offsetY||0),r,s),a._props.push("scrollTo_y")):a.skipY=1},render:function(e,t){for(var n=t._pt,r=t.target,s=t.tween,a=t.autoKill,o=t.xPrev,l=t.yPrev,c=t.isWin,u=t.snap,f=t.snapInline,h,d,g,_,m;n;)n.r(e,n.d),n=n._next;h=c||!t.skipX?t.getX():o,d=c||!t.skipY?t.getY():l,g=d-l,_=h-o,m=pi.autoKillThreshold,t.x<0&&(t.x=0),t.y<0&&(t.y=0),a&&(!t.skipX&&(_>m||_<-m)&&h<Nr(r,"x")&&(t.skipX=1),!t.skipY&&(g>m||g<-m)&&d<Nr(r,"y")&&(t.skipY=1),t.skipX&&t.skipY&&(s.kill(),t.vars.onAutoKill&&t.vars.onAutoKill.apply(s,t.vars.onAutoKillParams||[]))),c?K3.scrollTo(t.skipX?h:t.x,t.skipY?d:t.y):(t.skipY||(r.scrollTop=t.y),t.skipX||(r.scrollLeft=t.x)),u&&(e===1||e===0)&&(d=r.scrollTop,h=r.scrollLeft,f?r.style.scrollSnapType=f:r.style.removeProperty("scroll-snap-type"),r.scrollTop=d+1,r.scrollLeft=h+1,r.scrollTop=d,r.scrollLeft=h),t.xPrev=t.x,t.yPrev=t.y,Os&&Os.update()},kill:function(e){var t=e==="scrollTo",n=this._props.indexOf(e);return(t||e==="scrollTo_x")&&(this.skipX=1),(t||e==="scrollTo_y")&&(this.skipY=1),n>-1&&this._props.splice(n,1),!this._props.length}};Li.max=Nr;Li.getOffset=ih;Li.buildGetter=kr;Li.config=function(i){pi||C9()||(pi=Je.config());for(var e in i)pi[e]=i[e]};th()&&Je.registerPlugin(Li);const gM={class:"header"},vM={class:"header-container"},xM="rizqikurni29@gmail.com",yM="Mas, Ganteng banget mas",MM="",SM={__name:"Header",setup(i){const e=`https://mail.google.com/mail/?view=cm&fs=1&to=${xM}&su=${encodeURIComponent(yM)}&body=${encodeURIComponent(MM)}`,t=Be(!1),n=()=>{t.value=!t.value,t.value?Q2.fromTo(s.value,{y:-50,opacity:0},{y:0,opacity:1,duration:.5,ease:"power2.out"}):Q2.to(s.value,{y:-50,opacity:0,duration:.4,ease:"power2.in"})},r=()=>t.value=!1,s=Be(null);Q2.registerPlugin(Li,_2);const a=Be(null),o=["Ryizanova","MRizqiK","MrK"];return r0(()=>{let l=0;const c=a.value,u=Q2.timeline({repeat:-1});o.forEach(()=>{u.to(c,{duration:.6,rotateX:90,opacity:0,ease:"power2.in",onComplete:()=>{l=(l+1)%o.length,c.textContent=o[l]}}).to(c,{duration:.6,rotateX:0,opacity:1,ease:"power2.out"}).to({},{duration:1.4})}),document.querySelectorAll('a[href^="#"]').forEach(b=>{b.addEventListener("click",w=>{const y=b.getAttribute("href");y&&y.startsWith("#")&&(w.preventDefault(),Q2.to(window,{duration:1.2,scrollTo:{y,offsetY:80},ease:"power2.inOut"}),r())})});const f=document.querySelectorAll("section[id]"),h=document.querySelectorAll(".nav-desktop a"),d=document.querySelectorAll(".nav-mobile a");f.forEach(b=>{_2.create({trigger:b,start:"top 100",end:"bottom 100",onEnter:()=>g(b.id),onEnterBack:()=>g(b.id)})});function g(b){h.forEach(w=>{w.classList.toggle("active-nav",w.getAttribute("href")===`#${b}`)}),d.forEach(w=>{w.classList.toggle("active-nav",w.getAttribute("href")===`#${b}`)})}const _=document.querySelectorAll(".social-desktop a i"),m=["#0A66C2","#E1306C","#1877F2","#000000","#0A66C2"],p=Q2.timeline({repeat:-1,yoyo:!0});_.forEach((b,w)=>{p.to(b,{color:m[w],duration:.5,ease:"power1.inOut"},w*.2)})}),(l,c)=>(ne(),ce("header",gM,[r2("div",vM,[r2("p",{class:"judul",ref_key:"judulRef",ref:a},"Ryizanova",512),c[3]||(c[3]=Bs('<nav class="nav-desktop" data-v-fa286e69><a href="#home" data-v-fa286e69>Home</a><a href="#skill" data-v-fa286e69>Skill</a><a href="#website" data-v-fa286e69>Website</a><a href="#gallery" data-v-fa286e69>Gallery</a></nav>',1)),r2("div",{class:"social-desktop"},[r2("a",{href:e,target:"_blank"},c[0]||(c[0]=[r2("i",{class:"fab fa-google"},null,-1)])),c[1]||(c[1]=Bs('<a href="https://www.instagram.com/mrizqik29/" target="_blank" data-v-fa286e69><i class="fab fa-instagram" data-v-fa286e69></i></a><a href="https://www.facebook.com/muhammadrizky.kurniawan.3" target="_blank" data-v-fa286e69><i class="fab fa-facebook" data-v-fa286e69></i></a><a href="https://github.com/mrizqik29" target="_blank" data-v-fa286e69><i class="fab fa-github" data-v-fa286e69></i></a><a href="www.linkedin.com/in/muhammad-rizqi-kurniawan-328195254" target="_blank" data-v-fa286e69><i class="fab fa-linkedin" data-v-fa286e69></i></a>',4))]),r2("button",{class:"menu-btn",onClick:n},c[2]||(c[2]=[r2("i",{class:"fas fa-bars"},null,-1)]))]),dd(r2("div",{class:"nav-mobile",ref_key:"navMobile",ref:s},[r2("nav",null,[r2("a",{href:"#home",onClick:r},"Home"),r2("a",{href:"#skill",onClick:r},"Skill"),r2("a",{href:"#website",onClick:r},"Website"),r2("a",{href:"#gallery",onClick:r},"Gallery")]),r2("div",{class:"social-mobile"},[r2("a",{href:e,target:"_blank"},c[4]||(c[4]=[r2("i",{class:"fab fa-google"},null,-1)])),c[5]||(c[5]=Bs('<a href="https://www.instagram.com/mrizqik29/" target="_blank" data-v-fa286e69><i class="fab fa-instagram" data-v-fa286e69></i></a><a href="https://www.facebook.com/muhammadrizky.kurniawan.3" target="_blank" data-v-fa286e69><i class="fab fa-facebook" data-v-fa286e69></i></a><a href="https://github.com/mrizqik29" target="_blank" data-v-fa286e69><i class="fab fa-github" data-v-fa286e69></i></a><a href="www.linkedin.com/in/muhammad-rizqi-kurniawan-328195254" target="_blank" data-v-fa286e69><i class="fab fa-linkedin" data-v-fa286e69></i></a>',4))])],512),[[S7,t.value]])]))}},bM=Rl(SM,[["__scopeId","data-v-fa286e69"]]),EM="/assets/web-DyuqBmB0.png",TM="/assets/web2-zFgR8v1X.jpeg",wM="/assets/web3-Dl92_9VJ.jpeg",AM="/assets/web4-BfNhJ7T5.jpeg",CM="/assets/web5-DE5BbLQH.jpeg",RM="/assets/web6-Bfh63amY.jpeg",PM="/assets/web7-CtPHsQHS.jpeg",LM="/assets/web8-CbKLze6k.jpeg",DM="/assets/web9-CQ2GwiL_.jpeg",IM="/assets/web10-C3QfLwCf.jpeg",UM="/assets/web11-CI5nDHuF.jpeg",OM="/assets/web12-CZwjSito.jpeg",FM={class:"website-content"},NM=["src","alt"],kM={class:"website-text"},BM={class:"title"},zM={class:"equipment"},HM={class:"description"},VM=["href"],GM={__name:"Website",setup(i){Q2.registerPlugin(_2);const e=Be(null),t=Be(null),n=Be([{items:[{image:EM,title:"Website Undangan",equipment:"Equipment : Vue.js (Vite), CSS",description:"Website ini digunakan untuk menyampaikan informasi undangan secara online dengan tampilan yang menarik dan mudah diakses. Menggunakan Vue.js (Vite) untuk interaktivitas dan CSS untuk desain responsif, website ini memudahkan pengguna melihat detail acara, lokasi, dan informasi penting lainnya dengan nyaman di berbagai perangkat.",website:"https://mrizqik29.github.io/undanganv2/",size:"large"}]},{items:[{image:OM,title:"Website Landing Page",equipment:"Equipment: VS Code, GitHub, Vue.js, GSAP, HTML, SCSS",description:"Website ini adalah landing page interaktif yang dirancang untuk memberikan pengalaman pengguna yang menarik dan responsif. Animasi GSAP, termasuk ScrollTrigger, digunakan untuk efek gerakan yang halus saat pengguna menggulir halaman. SCSS diterapkan dengan animasi neon bergerak untuk tampilan yang modern dan dinamis. Ikon-ikon menggunakan Lucide untuk kesan visual yang konsisten. Seluruh desain dioptimalkan agar tampil dengan baik di berbagai perangkat, membuat website ini menarik dan mudah digunakan.",website:"https://mrizqik29.github.io/landingpage/"}]},{items:[{image:TM,title:"Login (Website Inventori)",equipment:"Equipment: Vue.js (Vite), Laravel, MySQL, CSS, JWT, Hash, XAMPP, VS Code, GSAP, Adobe Illustrator",description:"Fitur login pada website inventori ini dirancang dengan keamanan tinggi menggunakan token JWT dan hash untuk melindungi data pengguna. Menggunakan Vue.js (Vite) untuk interaktivitas frontend, Laravel dan MySQL untuk backend dan database, serta GSAP untuk animasi UI yang halus. Desain dibuat responsif dan mudah digunakan, memastikan pengalaman pengguna yang aman dan nyaman."}]},{items:[{image:wM,title:"Dashboard (Website Inventori)",equipment:"Equipment: Vue.js (Vite), Laravel, MySQL, CSS, XAMPP, VS Code",description:"Dashboard ini menampilkan ringkasan data inventori secara interaktif, termasuk barang terlaris serta laporan pembelian dan penjualan selama setahun terakhir. Menggunakan Vue.js (Vite) untuk frontend, Laravel dan MySQL untuk backend dan database, serta CSS untuk tampilan yang responsif. Fitur ini membantu pengguna memantau performa inventori dan membuat keputusan bisnis lebih mudah dan cepat."}]},{items:[{image:AM,title:"Add Data (Website Inventori)",equipment:"Equipment: Vue.js (Vite), Laravel, MySQL, CSS, XAMPP, VS Code",description:"Fitur ini memungkinkan pengguna menambahkan data inventori baru, termasuk barang, jenis, satuan, ruangan, dan departemen. Menggunakan Vue.js (Vite) untuk frontend interaktif, Laravel dan MySQL untuk backend dan database, serta CSS untuk desain responsif. Fitur ini membantu pengelolaan inventori menjadi lebih terstruktur dan efisien."}]},{items:[{image:CM,title:"Laporan Penjualan (Website Inventori)",equipment:"Equipment: Vue.js (Vite), CSS, Laravel, MySQL, XAMPP, VS Code",description:"Fitur laporan penjualan ini menampilkan data secara detail berdasarkan transaksi, barang, dan kasir. Menggunakan Vue.js (Vite) untuk frontend interaktif, Laravel dan MySQL untuk backend dan database, serta CSS untuk tampilan yang responsif. Fitur ini membantu pengguna menganalisis penjualan dengan cepat dan akurat, mendukung pengambilan keputusan bisnis."}]},{items:[{image:RM,title:"Laporan Stock (Website Inventori)",equipment:"Equipment: Vue.js (Vite), CSS, Laravel, MySQL, XAMPP, VS Code",description:"Fitur Laporan Stock ini menampilkan data inventori lengkap dari semua ruangan dan barang, termasuk laporan stock rendah. Menggunakan Vue.js (Vite) untuk frontend interaktif, Laravel dan MySQL untuk backend dan database, serta CSS untuk tampilan yang responsif. Fitur ini membantu pengguna memantau ketersediaan barang secara real-time dan mengambil keputusan pengelolaan inventori dengan lebih cepat dan akurat."}]},{items:[{image:PM,title:"Log Data (Website Inventori)",equipment:"Equipment: Vue.js (Vite), CSS, Laravel, MySQL, XAMPP, VS Code",description:"Fitur Log Data ini mencatat semua pergerakan barang, termasuk penerimaan, penjualan, dan pemesanan antar ruangan. Pengguna juga dapat mengekspor data ke format Excel untuk analisis lebih lanjut. Menggunakan Vue.js (Vite) untuk frontend interaktif, Laravel dan MySQL untuk backend dan database, serta CSS untuk tampilan yang responsif. Fitur ini memudahkan pemantauan inventori secara lengkap dan efisien."}]},{items:[{image:LM,title:"Kirim Barang (Website Inventori)",equipment:"Equipment: Vue.js (Vite), CSS, Laravel, MySQL, XAMPP, VS Code",description:"Fitur Kirim Barang memungkinkan pengguna memindahkan barang dari satu ruangan ke ruangan lain dengan mudah. Backend menggunakan metode FIFO (First In, First Out) sehingga barang yang masuk lebih dulu akan keluar terlebih dahulu dari tabel stok. Menggunakan Vue.js (Vite) untuk frontend interaktif, Laravel dan MySQL untuk backend dan database, serta CSS untuk tampilan responsif. Fitur ini membantu pengelolaan inventori lebih terstruktur dan efisien."}]},{items:[{image:DM,title:"Penerimaan Barang (Website Inventori)",equipment:"Equipment: Vue.js (Vite), CSS, Laravel, MySQL, XAMPP, VS Code",description:"Fitur Penerimaan Barang digunakan untuk mencatat barang yang diterima dari distributor dan menambahkan stok ke gudang. Menggunakan Vue.js (Vite) untuk frontend interaktif, Laravel dan MySQL untuk backend dan database, serta CSS untuk tampilan responsif. Fitur ini memastikan pencatatan stok gudang akurat dan memudahkan pengelolaan inventori secara efisien."}]},{items:[{image:IM,title:"Penjualan (Website Inventori)",equipment:"Equipment: Vue.js (Vite), CSS, Laravel, MySQL, XAMPP, VS Code",description:"Fitur Penjualan digunakan untuk menjual barang kepada pelanggan dengan pengelolaan stok yang efisien. Backend menggunakan metode FIFO (First In, First Out) sehingga barang yang masuk lebih dulu akan dijual terlebih dahulu, dan harga tertinggi dari barang yang dijual diambil secara otomatis. Menggunakan Vue.js (Vite) untuk frontend interaktif, Laravel dan MySQL untuk backend dan database, serta CSS untuk tampilan responsif. Fitur ini memudahkan proses penjualan dan memastikan pengelolaan inventori tetap akurat."}]},{items:[{image:UM,title:"Order (Website Inventori)",equipment:"Equipment: Vue.js (Vite), CSS, Laravel, MySQL, XAMPP, VS Code",description:'Fitur Order Barang memungkinkan perpindahan barang antar ruangan dengan efisien. Terdapat dua tab: "List" untuk menampilkan ruangan yang mengajukan permintaan, dan "Request" untuk melihat ruangan tujuan pengiriman. Backend menggunakan metode FIFO (First In, First Out) untuk memastikan barang yang masuk lebih dulu akan dipindahkan terlebih dahulu. Menggunakan Vue.js (Vite) untuk frontend interaktif, Laravel dan MySQL untuk backend, serta CSS untuk tampilan responsif, fitur ini memudahkan pengelolaan inventori antar ruangan secara terstruktur dan akurat.'}]}]);return r0(()=>{Oa(()=>{Q2.fromTo(t.value,{y:-50,opacity:0,filter:"blur(8px)"},{y:0,opacity:1,filter:"blur(0px)",duration:1,ease:"power3.out",scrollTrigger:{trigger:e.value,start:"top 85%",end:"bottom 20%",toggleActions:"play reverse play reverse"}}),e.value.querySelectorAll(".website-wrapper").forEach(s=>{const a=s.querySelectorAll(".website-item");Q2.fromTo(a,{y:60,opacity:0,scale:.85,rotateX:-15,filter:"blur(6px)"},{y:0,opacity:1,scale:1,rotateX:0,filter:"blur(0px)",duration:1,stagger:.25,ease:"expo.out",scrollTrigger:{trigger:s,start:"top 85%",end:"bottom 20%",toggleActions:"play reverse play reverse"}})})})}),(r,s)=>(ne(),ce("section",{class:"website",ref_key:"websiteSection",ref:e,id:"website"},[(ne(!0),ce(ke,null,hn(n.value,(a,o)=>(ne(),ce("div",{class:"website-wrapper",key:o},[r2("div",FM,[(ne(!0),ce(ke,null,hn(a.items,(l,c)=>(ne(),ce("div",{class:"website-item",key:c},[r2("img",{src:l.image,alt:l.title,class:Da(["website-image",l.size])},null,10,NM),r2("div",kM,[r2("h2",BM,S0(l.title),1),r2("p",zM,S0(l.equipment),1),r2("p",HM,S0(l.description),1),l.website?(ne(),ce("a",{key:0,href:l.website,target:"_blank",class:"btn"}," Kunjungi Website ",8,VM)):X6("",!0)])]))),128))])]))),128))],512))}};var WM=Object.defineProperty,XM=(i,e,t)=>e in i?WM(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,l2=(i,e,t)=>XM(i,typeof e!="symbol"?e+"":e,t),qM=class{requestAnimationFrame(i){return requestAnimationFrame(i)}cancelAnimationFrame(i){cancelAnimationFrame(i)}},$M=class{constructor(){l2(this,"_lastHandleId",0),l2(this,"_lastImmediate",null)}requestAnimationFrame(i){return this._lastHandleId>=Number.MAX_SAFE_INTEGER&&(this._lastHandleId=0),this._lastHandleId+=1,this._lastImmediate=setImmediate(()=>{i(Date.now())}),this._lastHandleId}cancelAnimationFrame(i){this._lastImmediate&&clearImmediate(this._lastImmediate)}},YM=class{constructor(){l2(this,"_strategy"),this._strategy=typeof requestAnimationFrame=="function"?new qM:new $M}requestAnimationFrame(i){return this._strategy.requestAnimationFrame(i)}cancelAnimationFrame(i){this._strategy.cancelAnimationFrame(i)}},De=typeof window<"u"&&typeof window.document<"u",e4=new Uint8Array([80,75,3,4]),jM=["v","ip","op","layers","fr","w","h"],rh="0.50.0",sh="@lottiefiles/dotlottie-web",KM=.75,ZM=4,JM=(()=>{var i=typeof document<"u"?document.currentScript?.src:void 0;return function(e={}){var t,n=e,r,s,a=new Promise((v,x)=>{r=v,s=x}),o=Object.assign({},n),l="./this.program",c="",u;typeof document<"u"&&document.currentScript&&(c=document.currentScript.src),i&&(c=i),c.startsWith("blob:")?c="":c=c.substr(0,c.replace(/[?#].*/,"").lastIndexOf("/")+1),u=async v=>{if(v=await fetch(v,{credentials:"same-origin"}),v.ok)return v.arrayBuffer();throw Error(v.status+" : "+v.url)};var f=n.printErr||console.error.bind(console);Object.assign(n,o),o=null,n.thisProgram&&(l=n.thisProgram);var h=n.wasmBinary,d,g=!1,_,m,p,b,w,y,C,A,L;function N(){var v=d.buffer;n.HEAP8=m=new Int8Array(v),n.HEAP16=b=new Int16Array(v),n.HEAPU8=p=new Uint8Array(v),n.HEAPU16=w=new Uint16Array(v),n.HEAP32=y=new Int32Array(v),n.HEAPU32=C=new Uint32Array(v),n.HEAPF32=A=new Float32Array(v),n.HEAPF64=L=new Float64Array(v)}var E=[],T=[],F=[];function H(){var v=n.preRun.shift();E.unshift(v)}var Y=0,e1=null;function i1(v){throw n.onAbort?.(v),v="Aborted("+v+")",f(v),g=!0,v=new WebAssembly.RuntimeError(v+". Build with -sASSERTIONS for more info."),s(v),v}var K=v=>v.startsWith("data:application/octet-stream;base64,"),j;async function G(v){if(!h)try{var x=await u(v);return new Uint8Array(x)}catch{}if(v==j&&h)v=new Uint8Array(h);else throw"both async and sync fetching of the wasm failed";return v}async function m1(v,x){try{var I=await G(v);return await WebAssembly.instantiate(I,x)}catch(O){f(`failed to asynchronously prepare wasm: ${O}`),i1(O)}}async function k(v){var x=j;if(!h&&typeof WebAssembly.instantiateStreaming=="function"&&!K(x)&&typeof fetch=="function")try{var I=fetch(x,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(I,v)}catch(O){f(`wasm streaming compile failed: ${O}`),f("falling back to ArrayBuffer instantiation")}return m1(x,v)}class E1{constructor(x){l2(this,"name","ExitStatus"),this.message=`Program terminated with exit(${x})`,this.status=x}}var z1=v=>{for(;0<v.length;)v.shift()(n)},c2=n.noExitRuntime||!0,j1=typeof TextDecoder<"u"?new TextDecoder:void 0,r1=(v=0,x=NaN)=>{var I=p,O=v+x;for(x=v;I[x]&&!(x>=O);)++x;if(16<x-v&&I.buffer&&j1)return j1.decode(I.subarray(v,x));for(O="";v<x;){var q=I[v++];if(q&128){var l1=I[v++]&63;if((q&224)==192)O+=String.fromCharCode((q&31)<<6|l1);else{var T1=I[v++]&63;q=(q&240)==224?(q&15)<<12|l1<<6|T1:(q&7)<<18|l1<<12|T1<<6|I[v++]&63,65536>q?O+=String.fromCharCode(q):(q-=65536,O+=String.fromCharCode(55296|q>>10,56320|q&1023))}}else O+=String.fromCharCode(q)}return O};class x1{constructor(x){this.Ca=x-24}}var d1=0,L1=(v,x,I)=>{var O=p;if(0<I){I=x+I-1;for(var q=0;q<v.length;++q){var l1=v.charCodeAt(q);if(55296<=l1&&57343>=l1){var T1=v.charCodeAt(++q);l1=65536+((l1&1023)<<10)|T1&1023}if(127>=l1){if(x>=I)break;O[x++]=l1}else{if(2047>=l1){if(x+1>=I)break;O[x++]=192|l1>>6}else{if(65535>=l1){if(x+2>=I)break;O[x++]=224|l1>>12}else{if(x+3>=I)break;O[x++]=240|l1>>18,O[x++]=128|l1>>12&63}O[x++]=128|l1>>6&63}O[x++]=128|l1&63}}O[x]=0}},D1={},U1=v=>{for(;v.length;){var x=v.pop();v.pop()(x)}};function d2(v){return this.fromWireType(C[v>>2])}var U={},M={},$={},J,t1=(v,x,I)=>{function O(v1){if(v1=I(v1),v1.length!==v.length)throw new J("Mismatched type converter count");for(var J1=0;J1<v.length;++J1)o1(v[J1],v1[J1])}v.forEach(v1=>$[v1]=x);var q=Array(x.length),l1=[],T1=0;x.forEach((v1,J1)=>{M.hasOwnProperty(v1)?q[J1]=M[v1]:(l1.push(v1),U.hasOwnProperty(v1)||(U[v1]=[]),U[v1].push(()=>{q[J1]=M[v1],++T1,T1===l1.length&&O(q)}))}),l1.length===0&&O(q)},D,f1=v=>{for(var x="";p[v];)x+=D[p[v++]];return x},X;function u1(v,x,I={}){var O=x.name;if(!v)throw new X(`type "${O}" must have a positive integer typeid pointer`);if(M.hasOwnProperty(v)){if(I.hb)return;throw new X(`Cannot register type '${O}' twice`)}M[v]=x,delete $[v],U.hasOwnProperty(v)&&(x=U[v],delete U[v],x.forEach(q=>q()))}function o1(v,x,I={}){return u1(v,x,I)}var w1=v=>{throw new X(v.Aa.Da.Ba.name+" instance already deleted")},P=!1,S=()=>{},z=(v,x,I)=>x===I?v:I.Ga===void 0?null:(v=z(v,x,I.Ga),v===null?null:I.$a(v)),Q={},s1={},Z=(v,x)=>{if(x===void 0)throw new X("ptr should not be undefined");for(;v.Ga;)x=v.Qa(x),v=v.Ga;return s1[x]},A1=(v,x)=>{if(!x.Da||!x.Ca)throw new J("makeClassHandle requires ptr and ptrType");if(!!x.Ha!=!!x.Fa)throw new J("Both smartPtrType and smartPtr must be specified");return x.count={value:1},_1(Object.create(v,{Aa:{value:x,writable:!0}}))},_1=v=>typeof FinalizationRegistry>"u"?(_1=x=>x,v):(P=new FinalizationRegistry(x=>{x=x.Aa,--x.count.value,x.count.value===0&&(x.Fa?x.Ha.Ka(x.Fa):x.Da.Ba.Ka(x.Ca))}),_1=x=>{var I=x.Aa;return I.Fa&&P.register(x,{Aa:I},x),x},S=x=>{P.unregister(x)},_1(v));function I1(){}var b1=(v,x)=>Object.defineProperty(x,"name",{value:v}),y1=(v,x,I)=>{if(v[x].Ea===void 0){var O=v[x];v[x]=function(...q){if(!v[x].Ea.hasOwnProperty(q.length))throw new X(`Function '${I}' called with an invalid number of arguments (${q.length}) - expects one of (${v[x].Ea})!`);return v[x].Ea[q.length].apply(this,q)},v[x].Ea=[],v[x].Ea[O.Na]=O}},R1=(v,x,I)=>{if(n.hasOwnProperty(v)){if(I===void 0||n[v].Ea!==void 0&&n[v].Ea[I]!==void 0)throw new X(`Cannot register public name '${v}' twice`);if(y1(n,v,v),n[v].Ea.hasOwnProperty(I))throw new X(`Cannot register multiple overloads of a function with the same number of arguments (${I})!`);n[v].Ea[I]=x}else n[v]=x,n[v].Na=I},V1=v=>{v=v.replace(/[^a-zA-Z0-9_]/g,"$");var x=v.charCodeAt(0);return 48<=x&&57>=x?`_${v}`:v};function N1(v,x,I,O,q,l1,T1,v1){this.name=v,this.constructor=x,this.Ma=I,this.Ka=O,this.Ga=q,this.bb=l1,this.Qa=T1,this.$a=v1,this.jb=[]}var C1=(v,x,I)=>{for(;x!==I;){if(!x.Qa)throw new X(`Expected null or instance of ${I.name}, got an instance of ${x.name}`);v=x.Qa(v),x=x.Ga}return v};function t2(v,x){if(x===null){if(this.Ta)throw new X(`null is not a valid ${this.name}`);return 0}if(!x.Aa)throw new X(`Cannot pass "${Ue(x)}" as a ${this.name}`);if(!x.Aa.Ca)throw new X(`Cannot pass deleted object as a pointer of type ${this.name}`);return C1(x.Aa.Ca,x.Aa.Da.Ba,this.Ba)}function B(v,x){if(x===null){if(this.Ta)throw new X(`null is not a valid ${this.name}`);if(this.Sa){var I=this.Ua();return v!==null&&v.push(this.Ka,I),I}return 0}if(!x||!x.Aa)throw new X(`Cannot pass "${Ue(x)}" as a ${this.name}`);if(!x.Aa.Ca)throw new X(`Cannot pass deleted object as a pointer of type ${this.name}`);if(!this.Ra&&x.Aa.Da.Ra)throw new X(`Cannot convert argument of type ${x.Aa.Ha?x.Aa.Ha.name:x.Aa.Da.name} to parameter type ${this.name}`);if(I=C1(x.Aa.Ca,x.Aa.Da.Ba,this.Ba),this.Sa){if(x.Aa.Fa===void 0)throw new X("Passing raw pointer to smart pointer is illegal");switch(this.ob){case 0:if(x.Aa.Ha===this)I=x.Aa.Fa;else throw new X(`Cannot convert argument of type ${x.Aa.Ha?x.Aa.Ha.name:x.Aa.Da.name} to parameter type ${this.name}`);break;case 1:I=x.Aa.Fa;break;case 2:if(x.Aa.Ha===this)I=x.Aa.Fa;else{var O=x.clone();I=this.kb(I,j2(()=>O.delete())),v!==null&&v.push(this.Ka,I)}break;default:throw new X("Unsupporting sharing policy")}}return I}function M1(v,x){if(x===null){if(this.Ta)throw new X(`null is not a valid ${this.name}`);return 0}if(!x.Aa)throw new X(`Cannot pass "${Ue(x)}" as a ${this.name}`);if(!x.Aa.Ca)throw new X(`Cannot pass deleted object as a pointer of type ${this.name}`);if(x.Aa.Da.Ra)throw new X(`Cannot convert argument of type ${x.Aa.Da.name} to parameter type ${this.name}`);return C1(x.Aa.Ca,x.Aa.Da.Ba,this.Ba)}function S1(v,x,I,O,q,l1,T1,v1,J1,a2,i2){this.name=v,this.Ba=x,this.Ta=I,this.Ra=O,this.Sa=q,this.ib=l1,this.ob=T1,this.Ya=v1,this.Ua=J1,this.kb=a2,this.Ka=i2,q||x.Ga!==void 0?this.toWireType=B:(this.toWireType=O?t2:M1,this.Ja=null)}var O1=(v,x,I)=>{if(!n.hasOwnProperty(v))throw new J("Replacing nonexistent public symbol");n[v].Ea!==void 0&&I!==void 0?n[v].Ea[I]=x:(n[v]=x,n[v].Na=I)},p1,h1=(v,x,I=[])=>(v.includes("j")?(v=v.replace(/p/g,"i"),x=(0,n["dynCall_"+v])(x,...I)):x=p1.get(x)(...I),x),G1=(v,x)=>(...I)=>h1(v,x,I),W1=(v,x)=>{v=f1(v);var I=v.includes("j")?G1(v,x):p1.get(x);if(typeof I!="function")throw new X(`unknown function pointer with signature ${v}: ${x}`);return I},b2,k1=v=>{v=Ae(v);var x=f1(v);return ae(v),x},$1=(v,x)=>{function I(l1){q[l1]||M[l1]||($[l1]?$[l1].forEach(I):(O.push(l1),q[l1]=!0))}var O=[],q={};throw x.forEach(I),new b2(`${v}: `+O.map(k1).join([", "]))},f2=(v,x)=>{for(var I=[],O=0;O<v;O++)I.push(C[x+4*O>>2]);return I};function F1(v){for(var x=1;x<v.length;++x)if(v[x]!==null&&v[x].Ja===void 0)return!0;return!1}function e2(v,x,I,O,q){var l1=x.length;if(2>l1)throw new X("argTypes array size mismatch! Must at least get return value and 'this' types!");var T1=x[1]!==null&&I!==null,v1=F1(x),J1=x[0].name!=="void",a2=l1-2,i2=Array(a2),P2=[],X2=[];return b1(v,function(...Tt){if(X2.length=0,P2.length=T1?2:1,P2[0]=q,T1){var le=x[1].toWireType(X2,this);P2[1]=le}for(var pe=0;pe<a2;++pe)i2[pe]=x[pe+2].toWireType(X2,Tt[pe]),P2.push(i2[pe]);if(Tt=O(...P2),v1)U1(X2);else for(pe=T1?1:2;pe<x.length;pe++){var t3=pe===1?le:i2[pe-2];x[pe].Ja!==null&&x[pe].Ja(t3)}return le=J1?x[0].fromWireType(Tt):void 0,le})}var Z1=v=>{v=v.trim();let x=v.indexOf("(");return x!==-1?v.substr(0,x):v},s2=[],D2=[],p2=v=>{9<v&&--D2[v+1]===0&&(D2[v]=void 0,s2.push(v))},I2=v=>{if(!v)throw new X("Cannot use deleted val. handle = "+v);return D2[v]},j2=v=>{switch(v){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let x=s2.pop()||D2.length;return D2[x]=v,D2[x+1]=1,x}},B2={name:"emscripten::val",fromWireType:v=>{var x=I2(v);return p2(v),x},toWireType:(v,x)=>j2(x),Ia:8,readValueFromPointer:d2,Ja:null},k2=(v,x,I)=>{switch(x){case 1:return I?function(O){return this.fromWireType(m[O])}:function(O){return this.fromWireType(p[O])};case 2:return I?function(O){return this.fromWireType(b[O>>1])}:function(O){return this.fromWireType(w[O>>1])};case 4:return I?function(O){return this.fromWireType(y[O>>2])}:function(O){return this.fromWireType(C[O>>2])};default:throw new TypeError(`invalid integer width (${x}): ${v}`)}},w2=(v,x)=>{var I=M[v];if(I===void 0)throw v=`${x} has unknown type ${k1(v)}`,new X(v);return I},Ue=v=>{if(v===null)return"null";var x=typeof v;return x==="object"||x==="array"||x==="function"?v.toString():""+v},V2=(v,x)=>{switch(x){case 4:return function(I){return this.fromWireType(A[I>>2])};case 8:return function(I){return this.fromWireType(L[I>>3])};default:throw new TypeError(`invalid float width (${x}): ${v}`)}},Oe=(v,x,I)=>{switch(x){case 1:return I?O=>m[O]:O=>p[O];case 2:return I?O=>b[O>>1]:O=>w[O>>1];case 4:return I?O=>y[O>>2]:O=>C[O>>2];default:throw new TypeError(`invalid integer width (${x}): ${v}`)}},pt=Object.assign({optional:!0},B2),se=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,R=(v,x)=>{for(var I=v>>1,O=I+x/2;!(I>=O)&&w[I];)++I;if(I<<=1,32<I-v&&se)return se.decode(p.subarray(v,I));for(I="",O=0;!(O>=x/2);++O){var q=b[v+2*O>>1];if(q==0)break;I+=String.fromCharCode(q)}return I},V=(v,x,I)=>{if(I??(I=2147483647),2>I)return 0;I-=2;var O=x;I=I<2*v.length?I/2:v.length;for(var q=0;q<I;++q)b[x>>1]=v.charCodeAt(q),x+=2;return b[x>>1]=0,x-O},n1=v=>2*v.length,a1=(v,x)=>{for(var I=0,O="";!(I>=x/4);){var q=y[v+4*I>>2];if(q==0)break;++I,65536<=q?(q-=65536,O+=String.fromCharCode(55296|q>>10,56320|q&1023)):O+=String.fromCharCode(q)}return O},W=(v,x,I)=>{if(I??(I=2147483647),4>I)return 0;var O=x;I=O+I-4;for(var q=0;q<v.length;++q){var l1=v.charCodeAt(q);if(55296<=l1&&57343>=l1){var T1=v.charCodeAt(++q);l1=65536+((l1&1023)<<10)|T1&1023}if(y[x>>2]=l1,x+=4,x+4>I)break}return y[x>>2]=0,x-O},g1=v=>{for(var x=0,I=0;I<v.length;++I){var O=v.charCodeAt(I);55296<=O&&57343>=O&&++I,x+=4}return x},P1=0,X1=(v,x,I)=>{var O=[];return v=v.toWireType(O,I),O.length&&(C[x>>2]=j2(O)),v},H1=[],Q1=v=>{var x=H1.length;return H1.push(v),x},K1=(v,x)=>{for(var I=Array(v),O=0;O<v;++O)I[O]=w2(C[x+4*O>>2],"parameter "+O);return I},Y1=Reflect.construct,u2={},v2=v=>{if(!(v instanceof E1||v=="unwind"))throw v},J2=v=>{throw _=v,c2||0<P1||(n.onExit?.(v),g=!0),new E1(v)},G2=v=>{if(!g)try{if(v(),!(c2||0<P1))try{_=v=_,J2(v)}catch(x){v2(x)}}catch(x){v2(x)}},U2={},n2=()=>{if(!W2){var v={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:l||"./this.program"},x;for(x in U2)U2[x]===void 0?delete v[x]:v[x]=U2[x];var I=[];for(x in v)I.push(`${x}=${v[x]}`);W2=I}return W2},W2,A2=()=>{if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function")return v=>crypto.getRandomValues(v);i1("initRandomDevice")},Ge=v=>(Ge=A2())(v);J=n.InternalError=class extends Error{constructor(v){super(v),this.name="InternalError"}};for(var P3=Array(256),we=0;256>we;++we)P3[we]=String.fromCharCode(we);D=P3,X=n.BindingError=class extends Error{constructor(v){super(v),this.name="BindingError"}},Object.assign(I1.prototype,{isAliasOf:function(v){if(!(this instanceof I1&&v instanceof I1))return!1;var x=this.Aa.Da.Ba,I=this.Aa.Ca;v.Aa=v.Aa;var O=v.Aa.Da.Ba;for(v=v.Aa.Ca;x.Ga;)I=x.Qa(I),x=x.Ga;for(;O.Ga;)v=O.Qa(v),O=O.Ga;return x===O&&I===v},clone:function(){if(this.Aa.Ca||w1(this),this.Aa.Pa)return this.Aa.count.value+=1,this;var v=_1,x=Object,I=x.create,O=Object.getPrototypeOf(this),q=this.Aa;return v=v(I.call(x,O,{Aa:{value:{count:q.count,Oa:q.Oa,Pa:q.Pa,Ca:q.Ca,Da:q.Da,Fa:q.Fa,Ha:q.Ha}}})),v.Aa.count.value+=1,v.Aa.Oa=!1,v},delete(){if(this.Aa.Ca||w1(this),this.Aa.Oa&&!this.Aa.Pa)throw new X("Object already scheduled for deletion");S(this);var v=this.Aa;--v.count.value,v.count.value===0&&(v.Fa?v.Ha.Ka(v.Fa):v.Da.Ba.Ka(v.Ca)),this.Aa.Pa||(this.Aa.Fa=void 0,this.Aa.Ca=void 0)},isDeleted:function(){return!this.Aa.Ca},deleteLater:function(){if(this.Aa.Ca||w1(this),this.Aa.Oa&&!this.Aa.Pa)throw new X("Object already scheduled for deletion");return this.Aa.Oa=!0,this}}),Object.assign(S1.prototype,{cb(v){return this.Ya&&(v=this.Ya(v)),v},Wa(v){this.Ka?.(v)},Ia:8,readValueFromPointer:d2,fromWireType:function(v){function x(){return this.Sa?A1(this.Ba.Ma,{Da:this.ib,Ca:I,Ha:this,Fa:v}):A1(this.Ba.Ma,{Da:this,Ca:v})}var I=this.cb(v);if(!I)return this.Wa(v),null;var O=Z(this.Ba,I);if(O!==void 0)return O.Aa.count.value===0?(O.Aa.Ca=I,O.Aa.Fa=v,O.clone()):(O=O.clone(),this.Wa(v),O);if(O=this.Ba.bb(I),O=Q[O],!O)return x.call(this);O=this.Ra?O.Za:O.pointerType;var q=z(I,this.Ba,O.Ba);return q===null?x.call(this):this.Sa?A1(O.Ba.Ma,{Da:O,Ca:q,Ha:this,Fa:v}):A1(O.Ba.Ma,{Da:O,Ca:q})}}),b2=n.UnboundTypeError=((v,x)=>{var I=b1(x,function(O){this.name=x,this.message=O,O=Error(O).stack,O!==void 0&&(this.stack=this.toString()+`
`+O.replace(/^Error(:[^\n]*)?\n/,""))});return I.prototype=Object.create(v.prototype),I.prototype.constructor=I,I.prototype.toString=function(){return this.message===void 0?this.name:`${this.name}: ${this.message}`},I})(Error,"UnboundTypeError"),D2.push(0,1,void 0,1,null,1,!0,1,!1,1),n.count_emval_handles=()=>D2.length/2-5-s2.length;var B0={c:(v,x,I,O)=>i1(`Assertion failed: ${v?r1(v):""}, at: `+[x?x?r1(x):"":"unknown filename",I,O?O?r1(O):"":"unknown function"]),j:(v,x,I)=>{var O=new x1(v);throw C[O.Ca+16>>2]=0,C[O.Ca+4>>2]=x,C[O.Ca+8>>2]=I,d1=v,d1},P:()=>{},M:()=>{},N:()=>{},R:function(){},O:()=>{},T:()=>i1(""),w:v=>{var x=D1[v];delete D1[v];var I=x.Ua,O=x.Ka,q=x.Xa,l1=q.map(T1=>T1.gb).concat(q.map(T1=>T1.mb));t1([v],l1,T1=>{var v1={};return q.forEach((J1,a2)=>{var i2=T1[a2],P2=J1.eb,X2=J1.fb,Tt=T1[a2+q.length],le=J1.lb,pe=J1.nb;v1[J1.ab]={read:t3=>i2.fromWireType(P2(X2,t3)),write:(t3,Di)=>{var wt=[];le(pe,t3,Tt.toWireType(wt,Di)),U1(wt)}}}),[{name:x.name,fromWireType:J1=>{var a2={},i2;for(i2 in v1)a2[i2]=v1[i2].read(J1);return O(J1),a2},toWireType:(J1,a2)=>{for(var i2 in v1)if(!(i2 in a2))throw new TypeError(`Missing field: "${i2}"`);var P2=I();for(i2 in v1)v1[i2].write(P2,a2[i2]);return J1!==null&&J1.push(O,P2),P2},Ia:8,readValueFromPointer:d2,Ja:O}]})},F:()=>{},_:(v,x,I,O)=>{x=f1(x),o1(v,{name:x,fromWireType:function(q){return!!q},toWireType:function(q,l1){return l1?I:O},Ia:8,readValueFromPointer:function(q){return this.fromWireType(p[q])},Ja:null})},m:(v,x,I,O,q,l1,T1,v1,J1,a2,i2,P2,X2)=>{i2=f1(i2),l1=W1(q,l1),v1&&(v1=W1(T1,v1)),a2&&(a2=W1(J1,a2)),X2=W1(P2,X2);var Tt=V1(i2);R1(Tt,function(){$1(`Cannot construct ${i2} due to unbound types`,[O])}),t1([v,x,I],O?[O]:[],le=>{if(le=le[0],O)var pe=le.Ba,t3=pe.Ma;else t3=I1.prototype;le=b1(i2,function(...Ya){if(Object.getPrototypeOf(this)!==Di)throw new X("Use 'new' to construct "+i2);if(wt.La===void 0)throw new X(i2+" has no accessible constructor");var Ll=wt.La[Ya.length];if(Ll===void 0)throw new X(`Tried to invoke ctor of ${i2} with invalid number of parameters (${Ya.length}) - expected (${Object.keys(wt.La).toString()}) parameters instead!`);return Ll.apply(this,Ya)});var Di=Object.create(t3,{constructor:{value:le}});le.prototype=Di;var wt=new N1(i2,le,Di,X2,pe,l1,v1,a2);if(wt.Ga){var Ii;(Ii=wt.Ga).Va??(Ii.Va=[]),wt.Ga.Va.push(wt)}return pe=new S1(i2,wt,!0,!1,!1),Ii=new S1(i2+"*",wt,!1,!1,!1),t3=new S1(i2+" const*",wt,!1,!0,!1),Q[v]={pointerType:Ii,Za:t3},O1(Tt,le),[pe,Ii,t3]})},r:(v,x,I,O,q,l1)=>{var T1=f2(x,I);q=W1(O,q),t1([],[v],v1=>{v1=v1[0];var J1=`constructor ${v1.name}`;if(v1.Ba.La===void 0&&(v1.Ba.La=[]),v1.Ba.La[x-1]!==void 0)throw new X(`Cannot register multiple constructors with identical number of parameters (${x-1}) for class '${v1.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return v1.Ba.La[x-1]=()=>{$1(`Cannot construct ${v1.name} due to unbound types`,T1)},t1([],T1,a2=>(a2.splice(1,0,null),v1.Ba.La[x-1]=e2(J1,a2,null,q,l1),[])),[]})},d:(v,x,I,O,q,l1,T1,v1)=>{var J1=f2(I,O);x=f1(x),x=Z1(x),l1=W1(q,l1),t1([],[v],a2=>{function i2(){$1(`Cannot call ${P2} due to unbound types`,J1)}a2=a2[0];var P2=`${a2.name}.${x}`;x.startsWith("@@")&&(x=Symbol[x.substring(2)]),v1&&a2.Ba.jb.push(x);var X2=a2.Ba.Ma,Tt=X2[x];return Tt===void 0||Tt.Ea===void 0&&Tt.className!==a2.name&&Tt.Na===I-2?(i2.Na=I-2,i2.className=a2.name,X2[x]=i2):(y1(X2,x,P2),X2[x].Ea[I-2]=i2),t1([],J1,le=>(le=e2(P2,le,a2,l1,T1),X2[x].Ea===void 0?(le.Na=I-2,X2[x]=le):X2[x].Ea[I-2]=le,[])),[]})},Y:v=>o1(v,B2),D:(v,x,I,O)=>{function q(){}x=f1(x),q.values={},o1(v,{name:x,constructor:q,fromWireType:function(l1){return this.constructor.values[l1]},toWireType:(l1,T1)=>T1.value,Ia:8,readValueFromPointer:k2(x,I,O),Ja:null}),R1(x,q)},l:(v,x,I)=>{var O=w2(v,"enum");x=f1(x),v=O.constructor,O=Object.create(O.constructor.prototype,{value:{value:I},constructor:{value:b1(`${O.name}_${x}`,function(){})}}),v.values[I]=O,v[x]=O},A:(v,x,I)=>{x=f1(x),o1(v,{name:x,fromWireType:O=>O,toWireType:(O,q)=>q,Ia:8,readValueFromPointer:V2(x,I),Ja:null})},v:(v,x,I,O,q,l1)=>{var T1=f2(x,I);v=f1(v),v=Z1(v),q=W1(O,q),R1(v,function(){$1(`Cannot call ${v} due to unbound types`,T1)},x-1),t1([],T1,v1=>(O1(v,e2(v,[v1[0],null].concat(v1.slice(1)),null,q,l1),x-1),[]))},n:(v,x,I,O,q)=>{if(x=f1(x),q===-1&&(q=4294967295),q=v1=>v1,O===0){var l1=32-8*I;q=v1=>v1<<l1>>>l1}var T1=x.includes("unsigned")?function(v1,J1){return J1>>>0}:function(v1,J1){return J1};o1(v,{name:x,fromWireType:q,toWireType:T1,Ia:8,readValueFromPointer:Oe(x,I,O!==0),Ja:null})},g:(v,x,I)=>{function O(l1){return new q(m.buffer,C[l1+4>>2],C[l1>>2])}var q=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][x];I=f1(I),o1(v,{name:I,fromWireType:O,Ia:8,readValueFromPointer:O},{hb:!0})},q:v=>{o1(v,pt)},u:(v,x,I,O,q,l1,T1,v1,J1,a2,i2,P2)=>{I=f1(I),l1=W1(q,l1),v1=W1(T1,v1),a2=W1(J1,a2),P2=W1(i2,P2),t1([v],[x],X2=>(X2=X2[0],[new S1(I,X2.Ba,!1,!1,!0,X2,O,l1,v1,a2,P2)]))},Z:(v,x)=>{x=f1(x),o1(v,{name:x,fromWireType:function(I){for(var O=C[I>>2],q=I+4,l1,T1=q,v1=0;v1<=O;++v1){var J1=q+v1;(v1==O||p[J1]==0)&&(T1=T1?r1(T1,J1-T1):"",l1===void 0?l1=T1:(l1+="\0",l1+=T1),T1=J1+1)}return ae(I),l1},toWireType:function(I,O){O instanceof ArrayBuffer&&(O=new Uint8Array(O));var q,l1=typeof O=="string";if(!(l1||O instanceof Uint8Array||O instanceof Uint8ClampedArray||O instanceof Int8Array))throw new X("Cannot pass non-string to std::string");if(l1)for(var T1=q=0;T1<O.length;++T1){var v1=O.charCodeAt(T1);127>=v1?q++:2047>=v1?q+=2:55296<=v1&&57343>=v1?(q+=4,++T1):q+=3}else q=O.length;if(T1=We(4+q+1),v1=T1+4,C[T1>>2]=q,l1)L1(O,v1,q+1);else if(l1)for(l1=0;l1<q;++l1){var J1=O.charCodeAt(l1);if(255<J1)throw ae(v1),new X("String has UTF-16 code units that do not fit in 8 bits");p[v1+l1]=J1}else for(l1=0;l1<q;++l1)p[v1+l1]=O[l1];return I!==null&&I.push(ae,T1),T1},Ia:8,readValueFromPointer:d2,Ja(I){ae(I)}})},y:(v,x,I)=>{if(I=f1(I),x===2)var O=R,q=V,l1=n1,T1=v1=>w[v1>>1];else x===4&&(O=a1,q=W,l1=g1,T1=v1=>C[v1>>2]);o1(v,{name:I,fromWireType:v1=>{for(var J1=C[v1>>2],a2,i2=v1+4,P2=0;P2<=J1;++P2){var X2=v1+4+P2*x;(P2==J1||T1(X2)==0)&&(i2=O(i2,X2-i2),a2===void 0?a2=i2:(a2+="\0",a2+=i2),i2=X2+x)}return ae(v1),a2},toWireType:(v1,J1)=>{if(typeof J1!="string")throw new X(`Cannot pass non-string to C++ string type ${I}`);var a2=l1(J1),i2=We(4+a2+x);return C[i2>>2]=a2/x,q(J1,i2+4,a2+x),v1!==null&&v1.push(ae,i2),i2},Ia:8,readValueFromPointer:d2,Ja(v1){ae(v1)}})},x:(v,x,I,O,q,l1)=>{D1[v]={name:f1(x),Ua:W1(I,O),Ka:W1(q,l1),Xa:[]}},i:(v,x,I,O,q,l1,T1,v1,J1,a2)=>{D1[v].Xa.push({ab:f1(x),gb:I,eb:W1(O,q),fb:l1,mb:T1,lb:W1(v1,J1),nb:a2})},$:(v,x)=>{x=f1(x),o1(v,{pb:!0,name:x,Ia:0,fromWireType:()=>{},toWireType:()=>{}})},K:()=>{c2=!1,P1=0},I:()=>{throw 1/0},C:(v,x,I)=>(v=I2(v),x=w2(x,"emval::as"),X1(x,I,v)),p:(v,x,I,O)=>(v=H1[v],x=I2(x),v(null,x,I,O)),W:p2,E:(v,x)=>(v=I2(v),x=I2(x),v==x),o:(v,x,I)=>{var O=K1(v,x),q=O.shift();v--;var l1=Array(v);return x=`methodCaller<(${O.map(T1=>T1.name).join(", ")}) => ${q.name}>`,Q1(b1(x,(T1,v1,J1,a2)=>{for(var i2=0,P2=0;P2<v;++P2)l1[P2]=O[P2].readValueFromPointer(a2+i2),i2+=O[P2].Ia;return T1=I===1?Y1(v1,l1):v1.apply(T1,l1),X1(q,J1,T1)}))},z:v=>{9<v&&(D2[v+1]+=1)},ca:v=>{var x=I2(v);U1(x),p2(v)},t:(v,x)=>(v=w2(v,"_emval_take_value"),v=v.readValueFromPointer(x),j2(v)),G:(v,x)=>{if(u2[v]&&(clearTimeout(u2[v].id),delete u2[v]),!x)return 0;var I=setTimeout(()=>{delete u2[v],G2(()=>Fe(v,performance.now()))},x);return u2[v]={id:I,qb:x},0},H:(v,x,I,O)=>{var q=new Date().getFullYear(),l1=new Date(q,0,1).getTimezoneOffset();q=new Date(q,6,1).getTimezoneOffset(),C[v>>2]=60*Math.max(l1,q),y[x>>2]=+(l1!=q),x=T1=>{var v1=Math.abs(T1);return`UTC${0<=T1?"-":"+"}${String(Math.floor(v1/60)).padStart(2,"0")}${String(v1%60).padStart(2,"0")}`},v=x(l1),x=x(q),q<l1?(L1(v,I,17),L1(x,O,17)):(L1(v,O,17),L1(x,I,17))},ba:()=>performance.now(),J:v=>{var x=p.length;if(v>>>=0,2147483648<v)return!1;for(var I=1;4>=I;I*=2){var O=x*(1+.2/I);O=Math.min(O,v+100663296);e:{O=(Math.min(2147483648,65536*Math.ceil(Math.max(v,O)/65536))-d.buffer.byteLength+65535)/65536|0;try{d.grow(O),N();var q=1;break e}catch{}q=void 0}if(q)return!0}return!1},V:(v,x)=>{var I=0;return n2().forEach((O,q)=>{var l1=x+I;for(q=C[v+4*q>>2]=l1,l1=0;l1<O.length;++l1)m[q++]=O.charCodeAt(l1);m[q]=0,I+=O.length+1}),0},X:(v,x)=>{var I=n2();C[v>>2]=I.length;var O=0;return I.forEach(q=>O+=q.length+1),C[x>>2]=O,0},S:()=>52,Q:()=>52,k:ch,f:_h,e:dh,B:uh,aa:gh,a:fh,b:ph,h:hh,s:mh,U:J2,L:(v,x)=>(Ge(p.subarray(v,v+x)),0)},o2;(async function(){function v(O){return o2=O.exports,d=o2.da,N(),p1=o2.ga,T.unshift(o2.ea),Y--,n.monitorRunDependencies?.(Y),Y==0&&e1&&(O=e1,e1=null,O()),o2}Y++,n.monitorRunDependencies?.(Y);var x={a:B0};if(n.instantiateWasm)try{return n.instantiateWasm(x,v)}catch(O){f(`Module.instantiateWasm callback failed with error: ${O}`),s(O)}j??(j=K("DotLottiePlayer.wasm")?"DotLottiePlayer.wasm":n.locateFile?n.locateFile("DotLottiePlayer.wasm",c):c+"DotLottiePlayer.wasm");try{var I=await k(x);return v(I.instance),I}catch(O){s(O)}})();var We=v=>(We=o2.fa)(v),ae=v=>(ae=o2.ha)(v),Ae=v=>(Ae=o2.ia)(v),Fe=(v,x)=>(Fe=o2.ja)(v,x),mt=(v,x)=>(mt=o2.ka)(v,x),Ce=v=>(Ce=o2.la)(v),h3=()=>(h3=o2.ma)();n.dynCall_jiii=(v,x,I,O)=>(n.dynCall_jiii=o2.na)(v,x,I,O),n.dynCall_jii=(v,x,I)=>(n.dynCall_jii=o2.oa)(v,x,I),n.dynCall_vjii=(v,x,I,O,q)=>(n.dynCall_vjii=o2.pa)(v,x,I,O,q),n.dynCall_vjfii=(v,x,I,O,q,l1)=>(n.dynCall_vjfii=o2.qa)(v,x,I,O,q,l1),n.dynCall_vjiii=(v,x,I,O,q,l1)=>(n.dynCall_vjiii=o2.ra)(v,x,I,O,q,l1),n.dynCall_vj=(v,x,I)=>(n.dynCall_vj=o2.sa)(v,x,I),n.dynCall_vjiiiii=(v,x,I,O,q,l1,T1,v1)=>(n.dynCall_vjiiiii=o2.ta)(v,x,I,O,q,l1,T1,v1),n.dynCall_vjiffii=(v,x,I,O,q,l1,T1,v1)=>(n.dynCall_vjiffii=o2.ua)(v,x,I,O,q,l1,T1,v1),n.dynCall_vjiiii=(v,x,I,O,q,l1,T1)=>(n.dynCall_vjiiii=o2.va)(v,x,I,O,q,l1,T1),n.dynCall_viijii=(v,x,I,O,q,l1,T1)=>(n.dynCall_viijii=o2.wa)(v,x,I,O,q,l1,T1),n.dynCall_iiiiij=(v,x,I,O,q,l1,T1)=>(n.dynCall_iiiiij=o2.xa)(v,x,I,O,q,l1,T1),n.dynCall_iiiiijj=(v,x,I,O,q,l1,T1,v1,J1)=>(n.dynCall_iiiiijj=o2.ya)(v,x,I,O,q,l1,T1,v1,J1),n.dynCall_iiiiiijj=(v,x,I,O,q,l1,T1,v1,J1,a2)=>(n.dynCall_iiiiiijj=o2.za)(v,x,I,O,q,l1,T1,v1,J1,a2);function ch(v,x){var I=h3();try{return p1.get(v)(x)}catch(O){if(Ce(I),O!==O+0)throw O;mt(1,0)}}function uh(v,x,I,O,q,l1){var T1=h3();try{return p1.get(v)(x,I,O,q,l1)}catch(v1){if(Ce(T1),v1!==v1+0)throw v1;mt(1,0)}}function fh(v,x){var I=h3();try{p1.get(v)(x)}catch(O){if(Ce(I),O!==O+0)throw O;mt(1,0)}}function hh(v,x,I,O){var q=h3();try{p1.get(v)(x,I,O)}catch(l1){if(Ce(q),l1!==l1+0)throw l1;mt(1,0)}}function dh(v,x,I,O){var q=h3();try{return p1.get(v)(x,I,O)}catch(l1){if(Ce(q),l1!==l1+0)throw l1;mt(1,0)}}function ph(v,x,I){var O=h3();try{p1.get(v)(x,I)}catch(q){if(Ce(O),q!==q+0)throw q;mt(1,0)}}function mh(v,x,I,O,q){var l1=h3();try{p1.get(v)(x,I,O,q)}catch(T1){if(Ce(l1),T1!==T1+0)throw T1;mt(1,0)}}function _h(v,x,I){var O=h3();try{return p1.get(v)(x,I)}catch(q){if(Ce(O),q!==q+0)throw q;mt(1,0)}}function gh(v){var x=h3();try{p1.get(v)()}catch(I){if(Ce(x),I!==I+0)throw I;mt(1,0)}}var Yr;e1=function v(){Yr||Pl(),Yr||(e1=v)};function Pl(){function v(){if(!Yr&&(Yr=!0,n.calledRun=!0,!g)){if(z1(T),r(n),n.onRuntimeInitialized?.(),n.postRun)for(typeof n.postRun=="function"&&(n.postRun=[n.postRun]);n.postRun.length;){var x=n.postRun.shift();F.unshift(x)}z1(F)}}if(!(0<Y)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;)H();z1(E),0<Y||(n.setStatus?(n.setStatus("Running..."),setTimeout(()=>{setTimeout(()=>n.setStatus(""),1),v()},1)):v())}}if(n.preInit)for(typeof n.preInit=="function"&&(n.preInit=[n.preInit]);0<n.preInit.length;)n.preInit.pop()();return Pl(),t=a,t}})(),QM=JM,Aa=class{constructor(){throw new Error("RendererLoader is a static class and cannot be instantiated.")}static async _tryLoad(i){return await QM({locateFile:()=>i})}static async _loadWithBackup(){return this._ModulePromise||(this._ModulePromise=this._tryLoad(this._wasmURL).catch(async i=>{let e=`https://unpkg.com/${sh}@${rh}/dist/dotlottie-player.wasm`;console.warn(`Primary WASM load failed from ${this._wasmURL}. Error: ${i.message}`),console.warn(`Attempting to load WASM from backup URL: ${e}`);try{return await this._tryLoad(e)}catch(t){throw console.error(`Primary WASM URL failed: ${i.message}`),console.error(`Backup WASM URL failed: ${t.message}`),new Error("WASM loading failed from all sources.")}})),this._ModulePromise}static async load(){return this._loadWithBackup()}static setWasmUrl(i){i!==this._wasmURL&&(this._wasmURL=i,this._ModulePromise=null)}};l2(Aa,"_ModulePromise",null),l2(Aa,"_wasmURL",`https://cdn.jsdelivr.net/npm/${sh}@${rh}/dist/dotlottie-player.wasm`);var ah=class{constructor(){l2(this,"_eventListeners",new Map)}addEventListener(i,e){let t=this._eventListeners.get(i);t||(t=new Set,this._eventListeners.set(i,t)),t.add(e)}removeEventListener(i,e){let t=this._eventListeners.get(i);t&&(e?(t.delete(e),t.size===0&&this._eventListeners.delete(i)):this._eventListeners.delete(i))}dispatch(i){this._eventListeners.get(i.type)?.forEach(e=>e(i))}removeAllEventListeners(){this._eventListeners.clear()}},o3=class{static _initializeObserver(){if(this._observer)return;let i=e=>{e.forEach(t=>{let n=this._observedCanvases.get(t.target);n&&(t.isIntersecting?n.unfreeze():n.freeze())})};this._observer=new IntersectionObserver(i,{threshold:0})}static observe(i,e){this._initializeObserver(),!this._observedCanvases.has(i)&&(this._observedCanvases.set(i,e),this._observer?.observe(i))}static unobserve(i){this._observer?.unobserve(i),this._observedCanvases.delete(i),this._observedCanvases.size===0&&(this._observer?.disconnect(),this._observer=null)}};l2(o3,"_observer",null),l2(o3,"_observedCanvases",new Map);var l3=class{static _initializeObserver(){if(this._observer)return;let i=e=>{e.forEach(t=>{let n=this._observedCanvases.get(t.target);if(!n)return;let[r,s]=n;clearTimeout(s);let a=setTimeout(()=>{r.resize()},100);this._observedCanvases.set(t.target,[r,a])})};this._observer=new ResizeObserver(i)}static observe(i,e){this._initializeObserver(),!this._observedCanvases.has(i)&&(this._observedCanvases.set(i,[e,0]),this._observer?.observe(i))}static unobserve(i){let e=this._observedCanvases.get(i);if(e){let t=e[1];t&&clearTimeout(t)}this._observer?.unobserve(i),this._observedCanvases.delete(i),!this._observedCanvases.size&&this._observer&&(this._observer.disconnect(),this._observer=null)}};l2(l3,"_observer",null),l2(l3,"_observedCanvases",new Map);function eS(i){return/^#([\da-f]{6}|[\da-f]{8})$/iu.test(i)}function tS(i){if(!eS(i))return 0;let e=i.replace("#","");return e=e.length===6?`${e}ff`:e,parseInt(e,16)}function ku(i){if(i.byteLength<4)return!1;let e=new Uint8Array(i.slice(0,e4.byteLength));for(let t=0;t<e4.length;t+=1)if(e4[t]!==e[t])return!1;return!0}function Bu(i){return jM.every(e=>Object.prototype.hasOwnProperty.call(i,e))}function zu(i){if(typeof i=="string")try{return Bu(JSON.parse(i))}catch{return!1}else return Bu(i)}function an(){return 1+((De?window.devicePixelRatio:1)-1)*KM}function mi(i){let e=i.getBoundingClientRect(),t=window.innerHeight||document.documentElement.clientHeight,n=window.innerWidth||document.documentElement.clientWidth;return!(e.bottom<0||e.top>t||e.right<0||e.left>n)}function $t(i){let e=i.target;if(e instanceof HTMLCanvasElement){let t=e.getBoundingClientRect();if(t.width===0||t.height===0||e.width===0||e.height===0)return null;let n=e.width/t.width,r=e.height/t.height,s=(i.clientX-t.left)*n,a=(i.clientY-t.top)*r;return!Number.isFinite(s)||!Number.isFinite(a)||Number.isNaN(s)||Number.isNaN(a)?null:{x:s,y:a}}return null}function oh(i){let e=i.replace("OpenUrl: ",""),t=e.indexOf(" | Target: "),n,r;t===-1?(n=e,r="_blank"):(n=e.substring(0,t),r=e.substring(t+11)),window.open(n,r)}var t4=(i,e)=>i==="reverse"?e.Mode.Reverse:i==="bounce"?e.Mode.Bounce:i==="reverse-bounce"?e.Mode.ReverseBounce:e.Mode.Forward,nS=(i,e)=>i==="contain"?e.Fit.Contain:i==="cover"?e.Fit.Cover:i==="fill"?e.Fit.Fill:i==="fit-height"?e.Fit.FitHeight:i==="fit-width"?e.Fit.FitWidth:e.Fit.None,iS=(i,e)=>{let t=new e.VectorFloat;return t.push_back(i[0]),t.push_back(i[1]),t},n4=(i,e)=>{let t=new e.VectorFloat;return i.length!==2||(t.push_back(i[0]),t.push_back(i[1])),t},i4=(i,e)=>i?{align:iS(i.align??[.5,.5],e),fit:nS(i.fit??"contain",e)}:e.createDefaultLayout(),lh=class C2{constructor(e){l2(this,"_canvas"),l2(this,"_context",null),l2(this,"_eventManager"),l2(this,"_animationFrameId",null),l2(this,"_frameManager"),l2(this,"_dotLottieCore",null),l2(this,"_stateMachineId",""),l2(this,"_stateMachineConfig",null),l2(this,"_isStateMachineRunning",!1),l2(this,"_stateMachineObserverHandle",null),l2(this,"_stateMachineInternalMessageObserver",null),l2(this,"_dotLottieObserverHandle",null),l2(this,"_renderConfig",{}),l2(this,"_isFrozen",!1),l2(this,"_backgroundColor",null),l2(this,"_boundOnClick",null),l2(this,"_boundOnPointerUp",null),l2(this,"_boundOnPointerDown",null),l2(this,"_boundOnPointerMove",null),l2(this,"_boundOnPointerEnter",null),l2(this,"_boundOnPointerLeave",null),this._canvas=e.canvas,this._eventManager=new ah,this._frameManager=new YM,this._renderConfig={...e.renderConfig,devicePixelRatio:e.renderConfig?.devicePixelRatio||an(),freezeOnOffscreen:e.renderConfig?.freezeOnOffscreen??!0},Aa.load().then(t=>{C2._wasmModule=t;let n=new t.CallbackObserver;n.setOnLoad(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"load"})},0)}),n.setOnLoadError(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"loadError",error:new Error("failed to load")})},0)}),n.setOnPlay(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"play"})},0)}),n.setOnPause(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"pause"})},0)}),n.setOnStop(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"stop"})},0)}),n.setOnLoop(r=>{setTimeout(()=>{this._eventManager.dispatch({type:"loop",loopCount:r})},0)}),n.setOnComplete(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"complete"})},0)}),n.setOnFrame(r=>{setTimeout(()=>{this._eventManager.dispatch({type:"frame",currentFrame:r})},0)}),n.setOnRender(r=>{setTimeout(()=>{this._eventManager.dispatch({type:"render",currentFrame:r})},0)}),this._dotLottieCore=new t.DotLottiePlayer({animationId:e.animationId??"",themeId:e.themeId??"",stateMachineId:"",autoplay:e.autoplay??!1,backgroundColor:0,loopAnimation:e.loop??!1,mode:t4(e.mode??"forward",t),segment:n4(e.segment??[],t),speed:e.speed??1,useFrameInterpolation:e.useFrameInterpolation??!0,marker:e.marker??"",layout:i4(e.layout,t)}),this._stateMachineId=e.stateMachineId??"",this._stateMachineConfig=e.stateMachineConfig??null,this._dotLottieObserverHandle=this._dotLottieCore.subscribe(n),this._eventManager.dispatch({type:"ready"}),e.data?this._loadFromData(e.data):e.src&&this._loadFromSrc(e.src),e.backgroundColor&&this.setBackgroundColor(e.backgroundColor)}).catch(t=>{this._eventManager.dispatch({type:"loadError",error:new Error(`Failed to load wasm module: ${t}`)})})}_dispatchError(e){console.error(e),this._eventManager.dispatch({type:"loadError",error:new Error(e)})}async _fetchData(e){let t=await fetch(e);if(!t.ok)throw new Error(`Failed to fetch animation data from URL: ${e}. ${t.status}: ${t.statusText}`);let n=await t.arrayBuffer();return ku(n)?n:new TextDecoder().decode(n)}_loadFromData(e){if(this._dotLottieCore===null)return;let t=this._canvas.width,n=this._canvas.height,r=!1;if(typeof e=="string"){if(!zu(e)){this._dispatchError("Invalid Lottie JSON string: The provided string does not conform to the Lottie JSON format.");return}r=this._dotLottieCore.loadAnimationData(e,t,n)}else if(e instanceof ArrayBuffer){if(!ku(e)){this._dispatchError("Invalid dotLottie ArrayBuffer: The provided ArrayBuffer does not conform to the dotLottie format.");return}r=this._dotLottieCore.loadDotLottieData(e,t,n)}else if(typeof e=="object"){if(!zu(e)){this._dispatchError("Invalid Lottie JSON object: The provided object does not conform to the Lottie JSON format.");return}r=this._dotLottieCore.loadAnimationData(JSON.stringify(e),t,n)}else{this._dispatchError(`Unsupported data type for animation data. Expected: 
          - string (Lottie JSON),
          - ArrayBuffer (dotLottie),
          - object (Lottie JSON). 
          Received: ${typeof e}`);return}r&&(De&&this.resize(),setTimeout(()=>{this._eventManager.dispatch({type:"frame",currentFrame:this.currentFrame})},0),this._dotLottieCore.render(),this._draw(),this._stateMachineId?this.stateMachineLoad(this._stateMachineId)&&this.stateMachineStart()&&this._startAnimationLoop():this._dotLottieCore.isPlaying()&&this._startAnimationLoop(),De&&this._canvas instanceof HTMLCanvasElement&&(this._renderConfig.freezeOnOffscreen&&(o3.observe(this._canvas,this),mi(this._canvas)||this.freeze()),this._renderConfig.autoResize&&l3.observe(this._canvas,this)))}_loadFromSrc(e){this._fetchData(e).then(t=>this._loadFromData(t)).catch(t=>this._dispatchError(`Failed to load animation data from URL: ${e}. ${t}`))}get buffer(){return this._dotLottieCore?this._dotLottieCore.buffer():null}get activeAnimationId(){return this._dotLottieCore?.activeAnimationId()}get activeThemeId(){return this._dotLottieCore?.activeThemeId()}get layout(){let e=this._dotLottieCore?.config().layout;if(e)return{align:[e.align.get(0),e.align.get(1)],fit:(()=>{switch(e.fit){case C2._wasmModule?.Fit.Contain:return"contain";case C2._wasmModule?.Fit.Cover:return"cover";case C2._wasmModule?.Fit.Fill:return"fill";case C2._wasmModule?.Fit.FitHeight:return"fit-height";case C2._wasmModule?.Fit.FitWidth:return"fit-width";case C2._wasmModule?.Fit.None:return"none";default:return"contain"}})()}}get marker(){return this._dotLottieCore?.config().marker}get manifest(){try{let e=this._dotLottieCore?.manifestString();if(this._dotLottieCore===null||!e)return null;let t=JSON.parse(e);return Object.keys(t).length===0?null:t}catch{return null}}get renderConfig(){return this._renderConfig}get segment(){let e=this._dotLottieCore?.config().segment;if(e&&e.size()===2)return[e.get(0),e.get(1)]}get loop(){return this._dotLottieCore?.config().loopAnimation??!1}get mode(){let e=this._dotLottieCore?.config().mode;return e===C2._wasmModule?.Mode.Reverse?"reverse":e===C2._wasmModule?.Mode.Bounce?"bounce":e===C2._wasmModule?.Mode.ReverseBounce?"reverse-bounce":"forward"}get isFrozen(){return this._isFrozen}get isStateMachineRunning(){return this._isStateMachineRunning}get backgroundColor(){return this._backgroundColor??""}get autoplay(){return this._dotLottieCore?.config().autoplay??!1}get useFrameInterpolation(){return this._dotLottieCore?.config().useFrameInterpolation??!1}get speed(){return this._dotLottieCore?.config().speed??0}get isReady(){return this._dotLottieCore!==null}get isLoaded(){return this._dotLottieCore?.isLoaded()??!1}get isPlaying(){return this._dotLottieCore?.isPlaying()??!1}get isPaused(){return this._dotLottieCore?.isPaused()??!1}get isStopped(){return this._dotLottieCore?.isStopped()??!1}get currentFrame(){return this._dotLottieCore?Math.round(this._dotLottieCore.currentFrame()*100)/100:0}get loopCount(){return this._dotLottieCore?.loopCount()??0}get totalFrames(){return this._dotLottieCore?.totalFrames()??0}get duration(){return this._dotLottieCore?.duration()??0}get segmentDuration(){return this._dotLottieCore?.segmentDuration()??0}get canvas(){return this._canvas}load(e){this._dotLottieCore===null||C2._wasmModule===null||(this._stopAnimationLoop(),De&&this._canvas instanceof HTMLCanvasElement&&(o3.unobserve(this._canvas),l3.unobserve(this._canvas),this._cleanupStateMachineListeners()),this._isFrozen=!1,this._dotLottieCore.setConfig({animationId:e.animationId??"",themeId:e.themeId??"",stateMachineId:"",autoplay:e.autoplay??!1,backgroundColor:0,loopAnimation:e.loop??!1,mode:t4(e.mode??"forward",C2._wasmModule),segment:n4(e.segment??[],C2._wasmModule),speed:e.speed??1,useFrameInterpolation:e.useFrameInterpolation??!0,marker:e.marker??"",layout:i4(e.layout,C2._wasmModule)}),e.data?this._loadFromData(e.data):e.src&&this._loadFromSrc(e.src),this.setBackgroundColor(e.backgroundColor??""))}_draw(){if(this._dotLottieCore!==null&&(!this._context&&"getContext"in this._canvas&&typeof this._canvas.getContext=="function"&&(this._context=this._canvas.getContext("2d")),this._context)){let e=this._dotLottieCore.buffer(),t=this._canvas.width*this._canvas.height*ZM;if(e.byteLength!==t){console.warn(`Buffer size mismatch: got ${e.byteLength}, expected ${t}`);return}let n=null,r=new Uint8ClampedArray(e,0,e.byteLength);typeof ImageData>"u"?(n=this._context.createImageData(this._canvas.width,this._canvas.height),n.data.set(r)):n=new ImageData(r,this._canvas.width,this._canvas.height),this._context.putImageData(n,0,0)}}_stopAnimationLoop(){this._animationFrameId!==null&&(this._frameManager.cancelAnimationFrame(this._animationFrameId),this._animationFrameId=null)}_startAnimationLoop(){this._animationFrameId===null&&this._dotLottieCore&&!this._isFrozen&&(this._dotLottieCore.isPlaying()||this._isStateMachineRunning)&&(this._animationFrameId=this._frameManager.requestAnimationFrame(this._animationLoop.bind(this)))}_animationLoop(){if(this._dotLottieCore===null){this._stopAnimationLoop();return}if(!this._dotLottieCore.isPlaying()&&!this._isStateMachineRunning){this._stopAnimationLoop();return}try{(this._dotLottieCore.tick()||this._dotLottieCore.render())&&this._draw(),this._animationFrameId=this._frameManager.requestAnimationFrame(this._animationLoop.bind(this))}catch(e){console.error("Error in animation frame:",e),this._eventManager.dispatch({type:"renderError",error:e}),e instanceof WebAssembly.RuntimeError&&this.destroy()}}play(){this._dotLottieCore===null||!this.isLoaded||(this._stopAnimationLoop(),(this._dotLottieCore.play()||this._dotLottieCore.isPlaying())&&(this._isFrozen=!1,this._startAnimationLoop()),De&&this._canvas instanceof HTMLCanvasElement&&this._renderConfig.freezeOnOffscreen&&!mi(this._canvas)&&this.freeze())}pause(){this._dotLottieCore!==null&&(this._dotLottieCore.pause(),this._stopAnimationLoop())}stop(){if(this._dotLottieCore===null)return;let e=this._dotLottieCore.stop();this._stopAnimationLoop(),e&&(this._eventManager.dispatch({type:"frame",currentFrame:this.currentFrame}),this._dotLottieCore.render(),this._draw())}setFrame(e){this._dotLottieCore!==null&&this._dotLottieCore.seek(e)&&this._dotLottieCore.render()&&this._draw()}setSpeed(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),speed:e})}setBackgroundColor(e){this._dotLottieCore!==null&&(De&&this._canvas instanceof HTMLCanvasElement?this._canvas.style.backgroundColor=e:this._dotLottieCore.setConfig({...this._dotLottieCore.config(),backgroundColor:tS(e)}),this._backgroundColor=e)}setLoop(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),loopAnimation:e})}setUseFrameInterpolation(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),useFrameInterpolation:e})}addEventListener(e,t){this._eventManager.addEventListener(e,t)}removeEventListener(e,t){this._eventManager.removeEventListener(e,t)}destroy(){this._stopAnimationLoop(),this._isStateMachineRunning=!1,De&&this._canvas instanceof HTMLCanvasElement&&(o3.unobserve(this._canvas),l3.unobserve(this._canvas)),this._stateMachineObserverHandle&&(this._dotLottieCore?.stateMachineUnsubscribe(this._stateMachineObserverHandle),this._stateMachineObserverHandle.delete(),this._stateMachineObserverHandle=null),this._stateMachineInternalMessageObserver&&(this._dotLottieCore?.stateMachineInternalUnsubscribe(this._stateMachineInternalMessageObserver),this._stateMachineInternalMessageObserver.delete(),this._stateMachineInternalMessageObserver=null),this._dotLottieObserverHandle&&(this._dotLottieCore?.unsubscribe(this._dotLottieObserverHandle),this._dotLottieObserverHandle.delete(),this._dotLottieObserverHandle=null),this._dotLottieCore?.delete(),this._dotLottieCore=null,this._context=null,this._eventManager.dispatch({type:"destroy"}),this._eventManager.removeAllEventListeners(),this._cleanupStateMachineListeners()}freeze(){this._animationFrameId!==null&&(this._stopAnimationLoop(),this._isFrozen=!0,this._eventManager.dispatch({type:"freeze"}))}unfreeze(){this._animationFrameId===null&&(this._isFrozen=!1,this._eventManager.dispatch({type:"unfreeze"}),this._startAnimationLoop())}resize(){if(!(!this._dotLottieCore||!this.isLoaded)){if(De&&this._canvas instanceof HTMLCanvasElement){let e=this._renderConfig.devicePixelRatio||window.devicePixelRatio||1,{height:t,width:n}=this._canvas.getBoundingClientRect();t!==0&&n!==0&&(this._canvas.width=n*e,this._canvas.height=t*e)}this._dotLottieCore.resize(this._canvas.width,this._canvas.height)&&this._draw()}}setSegment(e,t){this._dotLottieCore===null||C2._wasmModule===null||this._dotLottieCore.setConfig({...this._dotLottieCore.config(),segment:n4([e,t],C2._wasmModule)})}setMode(e){this._dotLottieCore===null||C2._wasmModule===null||this._dotLottieCore.setConfig({...this._dotLottieCore.config(),mode:t4(e,C2._wasmModule)})}setRenderConfig(e){let{devicePixelRatio:t,freezeOnOffscreen:n,...r}=e;this._renderConfig={...this._renderConfig,...r,devicePixelRatio:t||an(),freezeOnOffscreen:n??!0},De&&this._canvas instanceof HTMLCanvasElement&&(this._renderConfig.autoResize?l3.observe(this._canvas,this):l3.unobserve(this._canvas),this._renderConfig.freezeOnOffscreen?(o3.observe(this._canvas,this),mi(this._canvas)||this.freeze()):(o3.unobserve(this._canvas),this._isFrozen&&this.unfreeze()))}loadAnimation(e){this._dotLottieCore===null||this._dotLottieCore.activeAnimationId()===e||this._dotLottieCore.loadAnimation(e,this._canvas.width,this._canvas.height)&&this.resize()}setMarker(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),marker:e})}markers(){let e=this._dotLottieCore?.markers();if(e){let t=[];for(let n=0;n<e.size();n+=1){let r=e.get(n);t.push({name:r.name,time:r.time,duration:r.duration})}return t}return[]}setTheme(e){if(this._dotLottieCore===null)return!1;let t=this._dotLottieCore.setTheme(e);return t&&this._draw(),t}resetTheme(){if(this._dotLottieCore===null)return!1;let e=this._dotLottieCore.resetTheme();return e&&this._draw(),e}setThemeData(e){if(this._dotLottieCore===null)return!1;let t=this._dotLottieCore.setThemeData(e);return t&&this._draw(),t}setSlots(e){this._dotLottieCore!==null&&this._dotLottieCore.setSlots(e)}setLayout(e){this._dotLottieCore===null||C2._wasmModule===null||this._dotLottieCore.setConfig({...this._dotLottieCore.config(),layout:i4(e,C2._wasmModule)})}setViewport(e,t,n,r){return this._dotLottieCore===null?!1:this._dotLottieCore.setViewport(e,t,n,r)}static setWasmUrl(e){Aa.setWasmUrl(e)}tween(e,t){if(!C2._wasmModule)return!1;let n=[0,0,1,1],r=new C2._wasmModule.VectorFloat;for(let s of n)r.push_back(s);return this._dotLottieCore?.tween(e,t,r)??!1}tweenToMarker(e,t){if(!C2._wasmModule)return!1;let n=[0,0,1,1],r=new C2._wasmModule.VectorFloat;for(let s of n)r.push_back(s);return this._dotLottieCore?.tweenToMarker(e,t,r)??!1}animationSize(){let e=this._dotLottieCore?.animationSize().get(0)??0,t=this._dotLottieCore?.animationSize().get(1)??0;return{width:e,height:t}}getLayerBoundingBox(e){let t=this._dotLottieCore?.getLayerBounds(e);if(!t||t.size()!==8)return;let n=[];for(let r=0;r<8;r+=1)n.push(t.get(r));return n}static transformThemeToLottieSlots(e,t){return C2._wasmModule?.transformThemeToLottieSlots(e,t)??""}_setupStateMachineObservers(){if(!this._dotLottieCore||!C2._wasmModule)return;let e=new C2._wasmModule.CallbackStateMachineObserver;e.setOnStart(()=>{setTimeout(()=>{this._isStateMachineRunning=!0,this._eventManager.dispatch({type:"stateMachineStart"}),this._startAnimationLoop()},0)}),e.setOnStop(()=>{setTimeout(()=>{this._isStateMachineRunning=!1,this._eventManager.dispatch({type:"stateMachineStop"}),this._dotLottieCore?.isPlaying()||this._stopAnimationLoop()},0)}),e.setOnCustomEvent(n=>{this._eventManager.dispatch({type:"stateMachineCustomEvent",eventName:n})}),e.setOnBooleanInputValueChange((n,r,s)=>{this._eventManager.dispatch({type:"stateMachineBooleanInputValueChange",inputName:n,newValue:r,oldValue:s})}),e.setOnNumericInputValueChange((n,r,s)=>{this._eventManager.dispatch({type:"stateMachineNumericInputValueChange",inputName:n,newValue:r,oldValue:s})}),e.setOnStringInputValueChange((n,r,s)=>{this._eventManager.dispatch({type:"stateMachineStringInputValueChange",inputName:n,newValue:r,oldValue:s})}),e.setOnInputFired(n=>{this._eventManager.dispatch({type:"stateMachineInputFired",inputName:n})}),e.setOnTransition((n,r)=>{this._eventManager.dispatch({type:"stateMachineTransition",fromState:n,toState:r})}),e.setOnStateEntered(n=>{this._eventManager.dispatch({type:"stateMachineStateEntered",state:n})}),e.setOnStateExit(n=>{this._eventManager.dispatch({type:"stateMachineStateExit",state:n})}),e.setOnError(n=>{this._eventManager.dispatch({type:"stateMachineError",error:n})});let t=new C2._wasmModule.CallbackStateMachineInternalObserver;t.setOnMessage(n=>{De?n.startsWith("OpenUrl: ")&&oh(n):this._eventManager.dispatch({type:"stateMachineInternalMessage",message:n})}),this._stateMachineObserverHandle=this._dotLottieCore.stateMachineSubscribe(e),this._stateMachineInternalMessageObserver=this._dotLottieCore.stateMachineInternalSubscribe(t)}_cleanupStateMachineObservers(){this._stateMachineObserverHandle&&(this._dotLottieCore?.stateMachineUnsubscribe(this._stateMachineObserverHandle),this._stateMachineObserverHandle.delete(),this._stateMachineObserverHandle=null),this._stateMachineInternalMessageObserver&&(this._dotLottieCore?.stateMachineInternalUnsubscribe(this._stateMachineInternalMessageObserver),this._stateMachineInternalMessageObserver.delete(),this._stateMachineInternalMessageObserver=null)}stateMachineLoad(e){if(!this._dotLottieCore||!C2._wasmModule)return!1;this._cleanupStateMachineObservers();let t=this._dotLottieCore.stateMachineLoad(e);return t&&this._setupStateMachineObservers(),t}stateMachineLoadData(e){if(!this._dotLottieCore||!C2._wasmModule)return!1;this._cleanupStateMachineObservers();let t=this._dotLottieCore.stateMachineLoadData(e);return t&&this._setupStateMachineObservers(),t}stateMachineSetConfig(e){this._stateMachineConfig=e}stateMachineStart(){if(C2._wasmModule===null||this._dotLottieCore===null)return!1;let e=C2._wasmModule.createDefaultOpenUrlPolicy();if(this._stateMachineConfig){let n=this._stateMachineConfig.openUrlPolicy;if(n&&typeof n.requireUserInteraction=="boolean"&&(e.requireUserInteraction=n.requireUserInteraction),n?.whitelist){e.whitelist=new C2._wasmModule.VectorString;for(let r of n.whitelist)e.whitelist.push_back(r)}}let t=this._dotLottieCore.stateMachineStart(e);return t&&(this._isStateMachineRunning=!0,this._setupStateMachineListeners(),this._startAnimationLoop()),t}stateMachineStop(){if(!this._dotLottieCore)return!1;let e=this._dotLottieCore.stateMachineStop();return e&&(this._cleanupStateMachineObservers(),this._isStateMachineRunning=!1,this._cleanupStateMachineListeners(),this._dotLottieCore.isPlaying()||this._stopAnimationLoop()),e}stateMachineGetStatus(){return this._dotLottieCore?.stateMachineStatus()??""}stateMachineGetCurrentState(){return this._dotLottieCore?.stateMachineCurrentState()??""}stateMachineGetActiveId(){return this._dotLottieCore?.activeStateMachineId()??""}stateMachineOverrideState(e,t=!1){return this._dotLottieCore?.stateMachineOverrideCurrentState(e,t)??!1}stateMachineGet(e){return this._dotLottieCore?.getStateMachine(e)??""}stateMachineGetListeners(){if(!this._dotLottieCore)return[];let e=this._dotLottieCore.stateMachineFrameworkSetup(),t=[];for(let n=0;n<e.size();n+=1)t.push(e.get(n));return t}stateMachineSetBooleanInput(e,t){return this._dotLottieCore?.stateMachineSetBooleanInput(e,t)??!1}stateMachineSetNumericInput(e,t){return this._dotLottieCore?.stateMachineSetNumericInput(e,t)??!1}stateMachineSetStringInput(e,t){return this._dotLottieCore?.stateMachineSetStringInput(e,t)??!1}stateMachineGetBooleanInput(e){return this._dotLottieCore?.stateMachineGetBooleanInput(e)}stateMachineGetNumericInput(e){return this._dotLottieCore?.stateMachineGetNumericInput(e)}stateMachineGetStringInput(e){return this._dotLottieCore?.stateMachineGetStringInput(e)}stateMachineFireEvent(e){this._dotLottieCore?.stateMachineFireEvent(e)}stateMachinePostClickEvent(e,t){this._dotLottieCore?.stateMachinePostClickEvent(e,t)}stateMachinePostPointerUpEvent(e,t){this._dotLottieCore?.stateMachinePostPointerUpEvent(e,t)}stateMachinePostPointerDownEvent(e,t){this._dotLottieCore?.stateMachinePostPointerDownEvent(e,t)}stateMachinePostPointerMoveEvent(e,t){this._dotLottieCore?.stateMachinePostPointerMoveEvent(e,t)}stateMachinePostPointerEnterEvent(e,t){this._dotLottieCore?.stateMachinePostPointerEnterEvent(e,t)}stateMachinePostPointerExitEvent(e,t){this._dotLottieCore?.stateMachinePostPointerExitEvent(e,t)}_onClick(e){let t=$t(e);t&&this.stateMachinePostClickEvent(t.x,t.y)}_onPointerUp(e){let t=$t(e);t&&this.stateMachinePostPointerUpEvent(t.x,t.y)}_onPointerDown(e){let t=$t(e);t&&this.stateMachinePostPointerDownEvent(t.x,t.y)}_onPointerMove(e){let t=$t(e);t&&this.stateMachinePostPointerMoveEvent(t.x,t.y)}_onPointerEnter(e){let t=$t(e);t&&this.stateMachinePostPointerEnterEvent(t.x,t.y)}_onPointerLeave(e){let t=$t(e);t&&this.stateMachinePostPointerExitEvent(t.x,t.y)}_setupStateMachineListeners(){if(De&&this._canvas instanceof HTMLCanvasElement&&this._dotLottieCore!==null&&this.isLoaded){let e=this.stateMachineGetListeners();this._cleanupStateMachineListeners(),e.includes("Click")&&(this._boundOnClick=this._onClick.bind(this),this._canvas.addEventListener("click",this._boundOnClick)),e.includes("PointerUp")&&(this._boundOnPointerUp=this._onPointerUp.bind(this),this._canvas.addEventListener("pointerup",this._boundOnPointerUp)),e.includes("PointerDown")&&(this._boundOnPointerDown=this._onPointerDown.bind(this),this._canvas.addEventListener("pointerdown",this._boundOnPointerDown)),e.includes("PointerMove")&&(this._boundOnPointerMove=this._onPointerMove.bind(this),this._canvas.addEventListener("pointermove",this._boundOnPointerMove)),e.includes("PointerEnter")&&(this._boundOnPointerEnter=this._onPointerEnter.bind(this),this._canvas.addEventListener("pointerenter",this._boundOnPointerEnter)),e.includes("PointerExit")&&(this._boundOnPointerLeave=this._onPointerLeave.bind(this),this._canvas.addEventListener("pointerleave",this._boundOnPointerLeave))}}_cleanupStateMachineListeners(){De&&this._canvas instanceof HTMLCanvasElement&&(this._boundOnClick&&(this._canvas.removeEventListener("click",this._boundOnClick),this._boundOnClick=null),this._boundOnPointerUp&&(this._canvas.removeEventListener("pointerup",this._boundOnPointerUp),this._boundOnPointerUp=null),this._boundOnPointerDown&&(this._canvas.removeEventListener("pointerdown",this._boundOnPointerDown),this._boundOnPointerDown=null),this._boundOnPointerMove&&(this._canvas.removeEventListener("pointermove",this._boundOnPointerMove),this._boundOnPointerMove=null),this._boundOnPointerEnter&&(this._canvas.removeEventListener("pointerenter",this._boundOnPointerEnter),this._boundOnPointerEnter=null),this._boundOnPointerLeave&&(this._canvas.removeEventListener("pointerleave",this._boundOnPointerLeave),this._boundOnPointerLeave=null))}};l2(lh,"_wasmModule",null);var rS=lh,sS=class{constructor(){if(typeof Worker>"u")throw new Error("Worker is not supported in this environment.");let i=new Blob([new Uint8Array([34,117,115,101,32,115,116,114,105,99,116,34,59,10,40,40,41,32,61,62,32,123,10,32,32,118,97,114,32,95,95,100,101,102,80,114,111,112,32,61,32,79,98,106,101,99,116,46,100,101,102,105,110,101,80,114,111,112,101,114,116,121,59,10,32,32,118,97,114,32,95,95,100,101,102,78,111,114,109,97,108,80,114,111,112,32,61,32,40,111,98,106,44,32,107,101,121,44,32,118,97,108,117,101,41,32,61,62,32,107,101,121,32,105,110,32,111,98,106,32,63,32,95,95,100,101,102,80,114,111,112,40,111,98,106,44,32,107,101,121,44,32,123,32,101,110,117,109,101,114,97,98,108,101,58,32,116,114,117,101,44,32,99,111,110,102,105,103,117,114,97,98,108,101,58,32,116,114,117,101,44,32,119,114,105,116,97,98,108,101,58,32,116,114,117,101,44,32,118,97,108,117,101,32,125,41,32,58,32,111,98,106,91,107,101,121,93,32,61,32,118,97,108,117,101,59,10,32,32,118,97,114,32,95,95,112,117,98,108,105,99,70,105,101,108,100,32,61,32,40,111,98,106,44,32,107,101,121,44,32,118,97,108,117,101,41,32,61,62,32,95,95,100,101,102,78,111,114,109,97,108,80,114,111,112,40,111,98,106,44,32,116,121,112,101,111,102,32,107,101,121,32,33,61,61,32,34,115,121,109,98,111,108,34,32,63,32,107,101,121,32,43,32,34,34,32,58,32,107,101,121,44,32,118,97,108,117,101,41,59,10,10,32,32,47,47,32,115,114,99,47,97,110,105,109,97,116,105,111,110,45,102,114,97,109,101,45,109,97,110,97,103,101,114,46,116,115,10,32,32,118,97,114,32,87,101,98,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,32,123,10,32,32,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,78,111,100,101,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,108,97,115,116,72,97,110,100,108,101,73,100,34,44,32,48,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,108,97,115,116,73,109,109,101,100,105,97,116,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,62,61,32,78,117,109,98,101,114,46,77,65,88,95,83,65,70,69,95,73,78,84,69,71,69,82,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,61,32,48,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,43,61,32,49,59,10,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,32,61,32,115,101,116,73,109,109,101,100,105,97,116,101,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,40,68,97,116,101,46,110,111,119,40,41,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,95,105,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,41,32,123,10,32,32,32,32,32,32,32,32,99,108,101,97,114,73,109,109,101,100,105,97,116,101,40,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,65,110,105,109,97,116,105,111,110,70,114,97,109,101,77,97,110,97,103,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,114,97,116,101,103,121,34,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,32,61,32,116,121,112,101,111,102,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,32,63,32,110,101,119,32,87,101,98,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,40,41,32,58,32,110,101,119,32,78,111,100,101,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,46,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,59,10,32,32,32,32,125,10,32,32,125,59,10,10,32,32,47,47,32,115,114,99,47,99,111,110,115,116,97,110,116,115,46,116,115,10,32,32,118,97,114,32,73,83,95,66,82,79,87,83,69,82,32,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,32,38,38,32,116,121,112,101,111,102,32,119,105,110,100,111,119,46,100,111,99,117,109,101,110,116,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,59,10,32,32,118,97,114,32,90,73,80,95,83,73,71,78,65,84,85,82,69,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,91,56,48,44,32,55,53,44,32,51,44,32,52,93,41,59,10,32,32,118,97,114,32,76,79,84,84,73,69,95,74,83,79,78,95,77,65,78,68,65,84,79,82,89,95,70,73,69,76,68,83,32,61,32,91,34,118,34,44,32,34,105,112,34,44,32,34,111,112,34,44,32,34,108,97,121,101,114,115,34,44,32,34,102,114,34,44,32,34,119,34,44,32,34,104,34,93,59,10,32,32,118,97,114,32,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,32,61,32,34,48,46,53,48,46,48,34,59,10,32,32,118,97,114,32,80,65,67,75,65,71,69,95,78,65,77,69,32,61,32,34,64,108,111,116,116,105,101,102,105,108,101,115,47,100,111,116,108,111,116,116,105,101,45,119,101,98,34,59,10,32,32,118,97,114,32,68,69,70,65,85,76,84,95,68,80,82,95,70,65,67,84,79,82,32,61,32,48,46,55,53,59,10,32,32,118,97,114,32,66,89,84,69,83,95,80,69,82,95,80,73,88,69,76,32,61,32,52,59,10,10,32,32,47,47,32,115,114,99,47,99,111,114,101,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,106,115,10,32,32,118,97,114,32,99,114,101,97,116,101,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,77,111,100,117,108,101,32,61,32,40,40,41,32,61,62,32,123,10,32,32,32,32,118,97,114,32,95,115,99,114,105,112,116,78,97,109,101,32,61,32,116,121,112,101,111,102,32,100,111,99,117,109,101,110,116,32,33,61,32,34,117,110,100,101,102,105,110,101,100,34,32,63,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,63,46,115,114,99,32,58,32,118,111,105,100,32,48,59,10,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,109,111,100,117,108,101,65,114,103,32,61,32,123,125,41,32,123,10,32,32,32,32,32,32,118,97,114,32,109,111,100,117,108,101,82,116,110,59,10,32,32,32,32,32,32,118,97,114,32,104,32,61,32,109,111,100,117,108,101,65,114,103,44,32,97,97,44,32,98,97,44,32,99,97,32,61,32,110,101,119,32,80,114,111,109,105,115,101,40,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,98,97,32,61,32,98,59,10,32,32,32,32,32,32,125,41,44,32,102,97,32,61,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,123,125,44,32,104,41,44,32,104,97,32,61,32,34,46,47,116,104,105,115,46,112,114,111,103,114,97,109,34,44,32,112,32,61,32,34,34,44,32,105,97,59,10,32,32,32,32,32,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,100,111,99,117,109,101,110,116,32,38,38,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,32,38,38,32,40,112,32,61,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,46,115,114,99,41,59,10,32,32,32,32,32,32,95,115,99,114,105,112,116,78,97,109,101,32,38,38,32,40,112,32,61,32,95,115,99,114,105,112,116,78,97,109,101,41,59,10,32,32,32,32,32,32,112,46,115,116,97,114,116,115,87,105,116,104,40,34,98,108,111,98,58,34,41,32,63,32,112,32,61,32,34,34,32,58,32,112,32,61,32,112,46,115,117,98,115,116,114,40,48,44,32,112,46,114,101,112,108,97,99,101,40,47,91,63,35,93,46,42,47,44,32,34,34,41,46,108,97,115,116,73,110,100,101,120,79,102,40,34,47,34,41,32,43,32,49,41,59,10,32,32,32,32,32,32,105,97,32,61,32,97,115,121,110,99,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,119,97,105,116,32,102,101,116,99,104,40,97,44,32,123,32,99,114,101,100,101,110,116,105,97,108,115,58,32,34,115,97,109,101,45,111,114,105,103,105,110,34,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,97,46,111,107,41,32,114,101,116,117,114,110,32,97,46,97,114,114,97,121,66,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,69,114,114,111,114,40,97,46,115,116,97,116,117,115,32,43,32,34,32,58,32,34,32,43,32,97,46,117,114,108,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,118,97,114,32,116,32,61,32,104,46,112,114,105,110,116,69,114,114,32,124,124,32,99,111,110,115,111,108,101,46,101,114,114,111,114,46,98,105,110,100,40,99,111,110,115,111,108,101,41,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,104,44,32,102,97,41,59,10,32,32,32,32,32,32,102,97,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,104,46,116,104,105,115,80,114,111,103,114,97,109,32,38,38,32,40,104,97,32,61,32,104,46,116,104,105,115,80,114,111,103,114,97,109,41,59,10,32,32,32,32,32,32,118,97,114,32,106,97,32,61,32,104,46,119,97,115,109,66,105,110,97,114,121,44,32,107,97,44,32,108,97,32,61,32,102,97,108,115,101,44,32,109,97,44,32,117,44,32,120,44,32,121,44,32,122,44,32,67,44,32,68,44,32,110,97,44,32,111,97,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,112,97,40,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,107,97,46,98,117,102,102,101,114,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,56,32,61,32,117,32,61,32,110,101,119,32,73,110,116,56,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,49,54,32,61,32,121,32,61,32,110,101,119,32,73,110,116,49,54,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,85,56,32,61,32,120,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,85,49,54,32,61,32,122,32,61,32,110,101,119,32,85,105,110,116,49,54,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,51,50,32,61,32,67,32,61,32,110,101,119,32,73,110,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,85,51,50,32,61,32,68,32,61,32,110,101,119,32,85,105,110,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,70,51,50,32,61,32,110,97,32,61,32,110,101,119,32,70,108,111,97,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,70,54,52,32,61,32,111,97,32,61,32,110,101,119,32,70,108,111,97,116,54,52,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,113,97,32,61,32,91,93,44,32,114,97,32,61,32,91,93,44,32,115,97,32,61,32,91,93,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,116,97,40,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,104,46,112,114,101,82,117,110,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,113,97,46,117,110,115,104,105,102,116,40,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,70,32,61,32,48,44,32,71,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,117,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,104,46,111,110,65,98,111,114,116,63,46,40,97,41,59,10,32,32,32,32,32,32,32,32,97,32,61,32,34,65,98,111,114,116,101,100,40,34,32,43,32,97,32,43,32,34,41,34,59,10,32,32,32,32,32,32,32,32,116,40,97,41,59,10,32,32,32,32,32,32,32,32,108,97,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,97,32,61,32,110,101,119,32,87,101,98,65,115,115,101,109,98,108,121,46,82,117,110,116,105,109,101,69,114,114,111,114,40,97,32,43,32,34,46,32,66,117,105,108,100,32,119,105,116,104,32,45,115,65,83,83,69,82,84,73,79,78,83,32,102,111,114,32,109,111,114,101,32,105,110,102,111,46,34,41,59,10,32,32,32,32,32,32,32,32,98,97,40,97,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,97,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,118,97,32,61,32,40,97,41,32,61,62,32,97,46,115,116,97,114,116,115,87,105,116,104,40,34,100,97,116,97,58,97,112,112,108,105,99,97,116,105,111,110,47,111,99,116,101,116,45,115,116,114,101,97,109,59,98,97,115,101,54,52,44,34,41,44,32,119,97,59,10,32,32,32,32,32,32,97,115,121,110,99,32,102,117,110,99,116,105,111,110,32,120,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,106,97,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,119,97,105,116,32,105,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,123,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,97,32,61,61,32,119,97,32,38,38,32,106,97,41,32,97,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,106,97,41,59,10,32,32,32,32,32,32,32,32,101,108,115,101,32,116,104,114,111,119,32,34,98,111,116,104,32,97,115,121,110,99,32,97,110,100,32,115,121,110,99,32,102,101,116,99,104,105,110,103,32,111,102,32,116,104,101,32,119,97,115,109,32,102,97,105,108,101,100,34,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,97,115,121,110,99,32,102,117,110,99,116,105,111,110,32,121,97,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,119,97,105,116,32,120,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,119,97,105,116,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,40,99,44,32,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,40,96,102,97,105,108,101,100,32,116,111,32,97,115,121,110,99,104,114,111,110,111,117,115,108,121,32,112,114,101,112,97,114,101,32,119,97,115,109,58,32,36,123,100,125,96,41,44,32,117,97,40,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,97,115,121,110,99,32,102,117,110,99,116,105,111,110,32,122,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,119,97,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,106,97,32,38,38,32,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,83,116,114,101,97,109,105,110,103,32,38,38,32,33,118,97,40,98,41,32,38,38,32,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,102,101,116,99,104,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,102,101,116,99,104,40,98,44,32,123,32,99,114,101,100,101,110,116,105,97,108,115,58,32,34,115,97,109,101,45,111,114,105,103,105,110,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,119,97,105,116,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,83,116,114,101,97,109,105,110,103,40,99,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,40,96,119,97,115,109,32,115,116,114,101,97,109,105,110,103,32,99,111,109,112,105,108,101,32,102,97,105,108,101,100,58,32,36,123,100,125,96,41,44,32,116,40,34,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,65,114,114,97,121,66,117,102,102,101,114,32,105,110,115,116,97,110,116,105,97,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,121,97,40,98,44,32,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,108,97,115,115,32,65,97,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,110,97,109,101,34,44,32,34,69,120,105,116,83,116,97,116,117,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,109,101,115,115,97,103,101,32,61,32,96,80,114,111,103,114,97,109,32,116,101,114,109,105,110,97,116,101,100,32,119,105,116,104,32,101,120,105,116,40,36,123,97,125,41,96,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,117,115,32,61,32,97,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,66,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,48,32,60,32,97,46,108,101,110,103,116,104,59,32,41,32,97,46,115,104,105,102,116,40,41,40,104,41,59,10,32,32,32,32,32,32,125,44,32,67,97,32,61,32,104,46,110,111,69,120,105,116,82,117,110,116,105,109,101,32,124,124,32,116,114,117,101,44,32,68,97,32,61,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,84,101,120,116,68,101,99,111,100,101,114,32,63,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,41,32,58,32,118,111,105,100,32,48,44,32,69,97,32,61,32,40,97,32,61,32,48,44,32,98,32,61,32,78,97,78,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,120,44,32,100,32,61,32,97,32,43,32,98,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,61,32,97,59,32,99,91,98,93,32,38,38,32,33,40,98,32,62,61,32,100,41,59,32,41,32,43,43,98,59,10,32,32,32,32,32,32,32,32,105,102,32,40,49,54,32,60,32,98,32,45,32,97,32,38,38,32,99,46,98,117,102,102,101,114,32,38,38,32,68,97,41,32,114,101,116,117,114,110,32,68,97,46,100,101,99,111,100,101,40,99,46,115,117,98,97,114,114,97,121,40,97,44,32,98,41,41,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,100,32,61,32,34,34,59,32,97,32,60,32,98,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,99,91,97,43,43,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,38,32,49,50,56,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,49,57,50,32,61,61,32,40,101,32,38,32,50,50,52,41,41,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,40,101,32,38,32,51,49,41,32,60,60,32,54,32,124,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,50,50,52,32,61,61,32,40,101,32,38,32,50,52,48,41,32,63,32,40,101,32,38,32,49,53,41,32,60,60,32,49,50,32,124,32,102,32,60,60,32,54,32,124,32,107,32,58,32,40,101,32,38,32,55,41,32,60,60,32,49,56,32,124,32,102,32,60,60,32,49,50,32,124,32,107,32,60,60,32,54,32,124,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,54,53,53,51,54,32,62,32,101,32,63,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,32,58,32,40,101,32,45,61,32,54,53,53,51,54,44,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,53,53,50,57,54,32,124,32,101,32,62,62,32,49,48,44,32,53,54,51,50,48,32,124,32,101,32,38,32,49,48,50,51,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,99,108,97,115,115,32,70,97,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,67,97,32,61,32,97,32,45,32,50,52,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,71,97,32,61,32,48,44,32,72,97,32,61,32,48,44,32,72,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,120,59,10,32,32,32,32,32,32,32,32,105,102,32,40,48,32,60,32,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,98,32,43,32,99,32,45,32,49,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,53,53,50,57,54,32,60,61,32,102,32,38,38,32,53,55,51,52,51,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,43,43,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,32,61,32,54,53,53,51,54,32,43,32,40,40,102,32,38,32,49,48,50,51,41,32,60,60,32,49,48,41,32,124,32,107,32,38,32,49,48,50,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,49,50,55,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,48,52,55,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,49,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,57,50,32,124,32,102,32,62,62,32,54,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,54,53,53,51,53,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,50,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,50,50,52,32,124,32,102,32,62,62,32,49,50,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,51,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,50,52,48,32,124,32,102,32,62,62,32,49,56,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,62,62,32,49,50,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,62,62,32,54,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,100,91,98,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,73,97,32,61,32,123,125,44,32,74,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,97,46,108,101,110,103,116,104,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,46,112,111,112,40,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,112,111,112,40,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,73,40,97,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,68,91,97,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,74,32,61,32,123,125,44,32,75,32,61,32,123,125,44,32,75,97,32,61,32,123,125,44,32,76,44,32,78,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,103,32,61,32,99,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,46,108,101,110,103,116,104,32,33,61,61,32,97,46,108,101,110,103,116,104,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,77,105,115,109,97,116,99,104,101,100,32,116,121,112,101,32,99,111,110,118,101,114,116,101,114,32,99,111,117,110,116,34,41,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,108,32,61,32,48,59,32,108,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,108,41,32,77,40,97,91,108,93,44,32,103,91,108,93,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,97,46,102,111,114,69,97,99,104,40,40,103,41,32,61,62,32,75,97,91,103,93,32,61,32,98,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,65,114,114,97,121,40,98,46,108,101,110,103,116,104,41,44,32,102,32,61,32,91,93,44,32,107,32,61,32,48,59,10,32,32,32,32,32,32,32,32,98,46,102,111,114,69,97,99,104,40,40,103,44,32,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,75,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,103,41,32,63,32,101,91,108,93,32,61,32,75,91,103,93,32,58,32,40,102,46,112,117,115,104,40,103,41,44,32,74,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,103,41,32,124,124,32,40,74,91,103,93,32,61,32,91,93,41,44,32,74,91,103,93,46,112,117,115,104,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,101,91,108,93,32,61,32,75,91,103,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,43,43,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,61,61,32,102,46,108,101,110,103,116,104,32,38,38,32,100,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,48,32,61,61,61,32,102,46,108,101,110,103,116,104,32,38,38,32,100,40,101,41,59,10,32,32,32,32,32,32,125,44,32,76,97,44,32,79,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,34,34,59,32,120,91,97,93,59,32,41,32,98,32,43,61,32,76,97,91,120,91,97,43,43,93,93,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,80,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,77,97,40,97,44,32,98,44,32,99,32,61,32,123,125,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,46,110,97,109,101,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,116,121,112,101,32,34,36,123,100,125,34,32,109,117,115,116,32,104,97,118,101,32,97,32,112,111,115,105,116,105,118,101,32,105,110,116,101,103,101,114,32,116,121,112,101,105,100,32,112,111,105,110,116,101,114,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,75,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,46,104,98,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,116,121,112,101,32,39,36,123,100,125,39,32,116,119,105,99,101,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,75,91,97,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,75,97,91,97,93,59,10,32,32,32,32,32,32,32,32,74,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,32,38,38,32,40,98,32,61,32,74,91,97,93,44,32,100,101,108,101,116,101,32,74,91,97,93,44,32,98,46,102,111,114,69,97,99,104,40,40,101,41,32,61,62,32,101,40,41,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,77,40,97,44,32,98,44,32,99,32,61,32,123,125,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,77,97,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,79,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,97,46,65,97,46,68,97,46,66,97,46,110,97,109,101,32,43,32,34,32,105,110,115,116,97,110,99,101,32,97,108,114,101,97,100,121,32,100,101,108,101,116,101,100,34,41,59,10,32,32,32,32,32,32,125,44,32,80,97,32,61,32,102,97,108,115,101,44,32,81,97,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,125,44,32,82,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,98,32,61,61,61,32,99,41,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,46,71,97,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,97,32,61,32,82,97,40,97,44,32,98,44,32,99,46,71,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,32,61,61,61,32,97,32,63,32,110,117,108,108,32,58,32,99,46,36,97,40,97,41,59,10,32,32,32,32,32,32,125,44,32,83,97,32,61,32,123,125,44,32,84,97,32,61,32,123,125,44,32,85,97,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,98,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,112,116,114,32,115,104,111,117,108,100,32,110,111,116,32,98,101,32,117,110,100,101,102,105,110,101,100,34,41,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,97,46,71,97,59,32,41,32,98,32,61,32,97,46,81,97,40,98,41,44,32,97,32,61,32,97,46,71,97,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,84,97,91,98,93,59,10,32,32,32,32,32,32,125,44,32,86,97,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,68,97,32,124,124,32,33,98,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,109,97,107,101,67,108,97,115,115,72,97,110,100,108,101,32,114,101,113,117,105,114,101,115,32,112,116,114,32,97,110,100,32,112,116,114,84,121,112,101,34,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,33,98,46,72,97,32,33,61,61,32,33,33,98,46,70,97,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,66,111,116,104,32,115,109,97,114,116,80,116,114,84,121,112,101,32,97,110,100,32,115,109,97,114,116,80,116,114,32,109,117,115,116,32,98,101,32,115,112,101,99,105,102,105,101,100,34,41,59,10,32,32,32,32,32,32,32,32,98,46,99,111,117,110,116,32,61,32,123,32,118,97,108,117,101,58,32,49,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,81,40,79,98,106,101,99,116,46,99,114,101,97,116,101,40,97,44,32,123,32,65,97,58,32,123,32,118,97,108,117,101,58,32,98,44,32,119,114,105,116,97,98,108,101,58,32,116,114,117,101,32,125,32,125,41,41,59,10,32,32,32,32,32,32,125,44,32,81,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,34,117,110,100,101,102,105,110,101,100,34,32,61,61,61,32,116,121,112,101,111,102,32,70,105,110,97,108,105,122,97,116,105,111,110,82,101,103,105,115,116,114,121,41,32,114,101,116,117,114,110,32,81,32,61,32,40,98,41,32,61,62,32,98,44,32,97,59,10,32,32,32,32,32,32,32,32,80,97,32,61,32,110,101,119,32,70,105,110,97,108,105,122,97,116,105,111,110,82,101,103,105,115,116,114,121,40,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,45,45,98,46,99,111,117,110,116,46,118,97,108,117,101,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,61,32,98,46,99,111,117,110,116,46,118,97,108,117,101,32,38,38,32,40,98,46,70,97,32,63,32,98,46,72,97,46,75,97,40,98,46,70,97,41,32,58,32,98,46,68,97,46,66,97,46,75,97,40,98,46,67,97,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,81,32,61,32,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,98,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,99,46,70,97,32,38,38,32,80,97,46,114,101,103,105,115,116,101,114,40,98,44,32,123,32,65,97,58,32,99,32,125,44,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,81,97,32,61,32,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,80,97,46,117,110,114,101,103,105,115,116,101,114,40,98,41,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,81,40,97,41,59,10,32,32,32,32,32,32,125,44,32,87,97,32,61,32,91,93,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,88,97,40,41,32,123,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,89,97,32,61,32,40,97,44,32,98,41,32,61,62,32,79,98,106,101,99,116,46,100,101,102,105,110,101,80,114,111,112,101,114,116,121,40,98,44,32,34,110,97,109,101,34,44,32,123,32,118,97,108,117,101,58,32,97,32,125,41,44,32,90,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,97,91,98,93,46,69,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,32,61,32,102,117,110,99,116,105,111,110,40,46,46,46,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,97,91,98,93,46,69,97,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,101,46,108,101,110,103,116,104,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,70,117,110,99,116,105,111,110,32,39,36,123,99,125,39,32,99,97,108,108,101,100,32,119,105,116,104,32,97,110,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,40,36,123,101,46,108,101,110,103,116,104,125,41,32,45,32,101,120,112,101,99,116,115,32,111,110,101,32,111,102,32,40,36,123,97,91,98,93,46,69,97,125,41,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,91,98,93,46,69,97,91,101,46,108,101,110,103,116,104,93,46,97,112,112,108,121,40,116,104,105,115,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,46,69,97,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,46,69,97,91,100,46,78,97,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,36,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,104,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,32,124,124,32,118,111,105,100,32,48,32,33,61,61,32,104,91,97,93,46,69,97,32,38,38,32,118,111,105,100,32,48,32,33,61,61,32,104,91,97,93,46,69,97,91,99,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,112,117,98,108,105,99,32,110,97,109,101,32,39,36,123,97,125,39,32,116,119,105,99,101,96,41,59,10,32,32,32,32,32,32,32,32,32,32,90,97,40,104,44,32,97,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,91,97,93,46,69,97,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,99,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,109,117,108,116,105,112,108,101,32,111,118,101,114,108,111,97,100,115,32,111,102,32,97,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,116,104,101,32,115,97,109,101,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,40,36,123,99,125,41,33,96,41,59,10,32,32,32,32,32,32,32,32,32,32,104,91,97,93,46,69,97,91,99,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,104,91,97,93,32,61,32,98,44,32,104,91,97,93,46,78,97,32,61,32,99,59,10,32,32,32,32,32,32,125,44,32,97,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,114,101,112,108,97,99,101,40,47,91,94,97,45,122,65,45,90,48,45,57,95,93,47,103,44,32,34,36,34,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,48,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,52,56,32,60,61,32,98,32,38,38,32,53,55,32,62,61,32,98,32,63,32,96,95,36,123,97,125,96,32,58,32,97,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,98,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,97,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,99,111,110,115,116,114,117,99,116,111,114,32,61,32,98,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,77,97,32,61,32,99,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,75,97,32,61,32,100,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,71,97,32,61,32,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,98,98,32,61,32,102,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,81,97,32,61,32,107,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,36,97,32,61,32,103,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,106,98,32,61,32,91,93,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,99,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,98,32,33,61,61,32,99,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,81,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,69,120,112,101,99,116,101,100,32,110,117,108,108,32,111,114,32,105,110,115,116,97,110,99,101,32,111,102,32,36,123,99,46,110,97,109,101,125,44,32,103,111,116,32,97,110,32,105,110,115,116,97,110,99,101,32,111,102,32,36,123,98,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,98,46,81,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,46,71,97,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,84,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,101,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,98,40,98,46,65,97,46,67,97,44,32,98,46,65,97,46,68,97,46,66,97,44,32,116,104,105,115,46,66,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,102,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,84,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,83,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,116,104,105,115,46,85,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,97,32,38,38,32,97,46,112,117,115,104,40,116,104,105,115,46,75,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,32,124,124,32,33,98,46,65,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,101,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,82,97,32,38,38,32,98,46,65,97,46,68,97,46,82,97,41,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,65,97,46,72,97,32,63,32,98,46,65,97,46,72,97,46,110,97,109,101,32,58,32,98,46,65,97,46,68,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,99,32,61,32,99,98,40,98,46,65,97,46,67,97,44,32,98,46,65,97,46,68,97,46,66,97,44,32,116,104,105,115,46,66,97,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,83,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,98,46,65,97,46,70,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,80,97,115,115,105,110,103,32,114,97,119,32,112,111,105,110,116,101,114,32,116,111,32,115,109,97,114,116,32,112,111,105,110,116,101,114,32,105,115,32,105,108,108,101,103,97,108,34,41,59,10,32,32,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,116,104,105,115,46,111,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,48,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,46,65,97,46,72,97,32,61,61,61,32,116,104,105,115,41,32,99,32,61,32,98,46,65,97,46,70,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,65,97,46,72,97,32,63,32,98,46,65,97,46,72,97,46,110,97,109,101,32,58,32,98,46,65,97,46,68,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,32,61,32,98,46,65,97,46,70,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,46,65,97,46,72,97,32,61,61,61,32,116,104,105,115,41,32,99,32,61,32,98,46,65,97,46,70,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,32,61,32,116,104,105,115,46,107,98,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,98,40,40,41,32,61,62,32,100,91,34,100,101,108,101,116,101,34,93,40,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,97,32,38,38,32,97,46,112,117,115,104,40,116,104,105,115,46,75,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,34,85,110,115,117,112,112,111,114,116,105,110,103,32,115,104,97,114,105,110,103,32,112,111,108,105,99,121,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,104,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,84,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,101,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,98,46,65,97,46,68,97,46,82,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,65,97,46,68,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,98,40,98,46,65,97,46,67,97,44,32,98,46,65,97,46,68,97,46,66,97,44,32,116,104,105,115,46,66,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,105,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,44,32,109,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,97,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,66,97,32,61,32,98,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,84,97,32,61,32,99,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,82,97,32,61,32,100,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,83,97,32,61,32,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,105,98,32,61,32,102,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,111,98,32,61,32,107,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,89,97,32,61,32,103,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,85,97,32,61,32,108,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,107,98,32,61,32,110,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,75,97,32,61,32,109,59,10,32,32,32,32,32,32,32,32,101,32,124,124,32,118,111,105,100,32,48,32,33,61,61,32,98,46,71,97,32,63,32,116,104,105,115,46,116,111,87,105,114,101,84,121,112,101,32,61,32,102,98,32,58,32,40,116,104,105,115,46,116,111,87,105,114,101,84,121,112,101,32,61,32,100,32,63,32,100,98,32,58,32,104,98,44,32,116,104,105,115,46,74,97,32,61,32,110,117,108,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,106,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,104,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,82,101,112,108,97,99,105,110,103,32,110,111,110,101,120,105,115,116,101,110,116,32,112,117,98,108,105,99,32,115,121,109,98,111,108,34,41,59,10,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,33,61,61,32,104,91,97,93,46,69,97,32,38,38,32,118,111,105,100,32,48,32,33,61,61,32,99,32,63,32,104,91,97,93,46,69,97,91,99,93,32,61,32,98,32,58,32,40,104,91,97,93,32,61,32,98,44,32,104,91,97,93,46,78,97,32,61,32,99,41,59,10,32,32,32,32,32,32,125,44,32,82,44,32,107,98,32,61,32,40,97,44,32,98,44,32,99,32,61,32,91,93,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,46,105,110,99,108,117,100,101,115,40,34,106,34,41,32,63,32,40,97,32,61,32,97,46,114,101,112,108,97,99,101,40,47,112,47,103,44,32,34,105,34,41,44,32,98,32,61,32,40,48,44,32,104,91,34,100,121,110,67,97,108,108,95,34,32,43,32,97,93,41,40,98,44,32,46,46,46,99,41,41,32,58,32,98,32,61,32,82,46,103,101,116,40,98,41,40,46,46,46,99,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,108,98,32,61,32,40,97,44,32,98,41,32,61,62,32,40,46,46,46,99,41,32,61,62,32,107,98,40,97,44,32,98,44,32,99,41,44,32,83,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,46,105,110,99,108,117,100,101,115,40,34,106,34,41,32,63,32,108,98,40,97,44,32,98,41,32,58,32,82,46,103,101,116,40,98,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,34,102,117,110,99,116,105,111,110,34,32,33,61,32,116,121,112,101,111,102,32,99,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,32,112,111,105,110,116,101,114,32,119,105,116,104,32,115,105,103,110,97,116,117,114,101,32,36,123,97,125,58,32,36,123,98,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,109,98,44,32,111,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,110,98,40,97,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,84,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,112,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,99,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,101,91,102,93,32,124,124,32,75,91,102,93,32,124,124,32,40,75,97,91,102,93,32,63,32,75,97,91,102,93,46,102,111,114,69,97,99,104,40,99,41,32,58,32,40,100,46,112,117,115,104,40,102,41,44,32,101,91,102,93,32,61,32,116,114,117,101,41,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,91,93,44,32,101,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,98,46,102,111,114,69,97,99,104,40,99,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,109,98,40,96,36,123,97,125,58,32,96,32,43,32,100,46,109,97,112,40,111,98,41,46,106,111,105,110,40,91,34,44,32,34,93,41,41,59,10,32,32,32,32,32,32,125,44,32,113,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,91,93,44,32,100,32,61,32,48,59,32,100,32,60,32,97,59,32,100,43,43,41,32,99,46,112,117,115,104,40,68,91,98,32,43,32,52,32,42,32,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,114,98,40,97,41,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,49,59,32,98,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,98,41,32,105,102,32,40,110,117,108,108,32,33,61,61,32,97,91,98,93,32,38,38,32,118,111,105,100,32,48,32,61,61,61,32,97,91,98,93,46,74,97,41,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,115,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,105,102,32,40,50,32,62,32,102,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,97,114,103,84,121,112,101,115,32,97,114,114,97,121,32,115,105,122,101,32,109,105,115,109,97,116,99,104,33,32,77,117,115,116,32,97,116,32,108,101,97,115,116,32,103,101,116,32,114,101,116,117,114,110,32,118,97,108,117,101,32,97,110,100,32,39,116,104,105,115,39,32,116,121,112,101,115,33,34,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,110,117,108,108,32,33,61,61,32,98,91,49,93,32,38,38,32,110,117,108,108,32,33,61,61,32,99,44,32,103,32,61,32,114,98,40,98,41,44,32,108,32,61,32,34,118,111,105,100,34,32,33,61,61,32,98,91,48,93,46,110,97,109,101,44,32,110,32,61,32,102,32,45,32,50,44,32,109,32,61,32,65,114,114,97,121,40,110,41,44,32,113,32,61,32,91,93,44,32,114,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,89,97,40,97,44,32,102,117,110,99,116,105,111,110,40,46,46,46,65,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,46,108,101,110,103,116,104,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,113,46,108,101,110,103,116,104,32,61,32,107,32,63,32,50,32,58,32,49,59,10,32,32,32,32,32,32,32,32,32,32,113,91,48,93,32,61,32,101,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,118,32,61,32,98,91,49,93,46,116,111,87,105,114,101,84,121,112,101,40,114,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,113,91,49,93,32,61,32,118,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,119,32,61,32,48,59,32,119,32,60,32,110,59,32,43,43,119,41,32,109,91,119,93,32,61,32,98,91,119,32,43,32,50,93,46,116,111,87,105,114,101,84,121,112,101,40,114,44,32,65,91,119,93,41,44,32,113,46,112,117,115,104,40,109,91,119,93,41,59,10,32,32,32,32,32,32,32,32,32,32,65,32,61,32,100,40,46,46,46,113,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,41,32,74,97,40,114,41,59,10,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,119,32,61,32,107,32,63,32,49,32,58,32,50,59,32,119,32,60,32,98,46,108,101,110,103,116,104,59,32,119,43,43,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,69,32,61,32,49,32,61,61,61,32,119,32,63,32,118,32,58,32,109,91,119,32,45,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,98,91,119,93,46,74,97,32,38,38,32,98,91,119,93,46,74,97,40,69,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,32,61,32,108,32,63,32,98,91,48,93,46,102,114,111,109,87,105,114,101,84,121,112,101,40,65,41,32,58,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,118,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,116,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,116,114,105,109,40,41,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,32,61,32,97,46,105,110,100,101,120,79,102,40,34,40,34,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,45,49,32,33,61,61,32,98,32,63,32,97,46,115,117,98,115,116,114,40,48,44,32,98,41,32,58,32,97,59,10,32,32,32,32,32,32,125,44,32,118,98,32,61,32,91,93,44,32,85,32,61,32,91,93,44,32,119,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,57,32,60,32,97,32,38,38,32,48,32,61,61,61,32,45,45,85,91,97,32,43,32,49,93,32,38,38,32,40,85,91,97,93,32,61,32,118,111,105,100,32,48,44,32,118,98,46,112,117,115,104,40,97,41,41,59,10,32,32,32,32,32,32,125,44,32,86,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,67,97,110,110,111,116,32,117,115,101,32,100,101,108,101,116,101,100,32,118,97,108,46,32,104,97,110,100,108,101,32,61,32,34,32,43,32,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,85,91,97,93,59,10,32,32,32,32,32,32,125,44,32,103,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,118,111,105,100,32,48,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,50,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,110,117,108,108,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,52,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,116,114,117,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,54,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,102,97,108,115,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,56,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,32,61,32,118,98,46,112,111,112,40,41,32,124,124,32,85,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,85,91,98,93,32,61,32,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,85,91,98,32,43,32,49,93,32,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,120,98,32,61,32,123,10,32,32,32,32,32,32,32,32,110,97,109,101,58,32,34,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,34,44,10,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,119,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,97,44,32,98,41,32,61,62,32,103,98,40,98,41,44,10,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,125,44,32,121,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,117,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,120,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,121,91,100,32,62,62,32,49,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,122,91,100,32,62,62,32,49,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,67,91,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,68,91,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,122,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,75,91,97,93,59,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,41,32,116,104,114,111,119,32,97,32,61,32,96,36,123,98,125,32,104,97,115,32,117,110,107,110,111,119,110,32,116,121,112,101,32,36,123,111,98,40,97,41,125,96,44,32,110,101,119,32,80,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,101,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,97,41,32,114,101,116,117,114,110,32,34,110,117,108,108,34,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,116,121,112,101,111,102,32,97,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,111,98,106,101,99,116,34,32,61,61,61,32,98,32,124,124,32,34,97,114,114,97,121,34,32,61,61,61,32,98,32,124,124,32,34,102,117,110,99,116,105,111,110,34,32,61,61,61,32,98,32,63,32,97,46,116,111,83,116,114,105,110,103,40,41,32,58,32,34,34,32,43,32,97,59,10,32,32,32,32,32,32,125,44,32,65,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,110,97,91,99,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,56,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,111,97,91,99,32,62,62,32,51,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,102,108,111,97,116,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,66,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,117,91,100,93,32,58,32,40,100,41,32,61,62,32,120,91,100,93,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,121,91,100,32,62,62,32,49,93,32,58,32,40,100,41,32,61,62,32,122,91,100,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,67,91,100,32,62,62,32,50,93,32,58,32,40,100,41,32,61,62,32,68,91,100,32,62,62,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,67,98,32,61,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,123,32,111,112,116,105,111,110,97,108,58,32,116,114,117,101,32,125,44,32,120,98,41,44,32,68,98,32,61,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,84,101,120,116,68,101,99,111,100,101,114,32,63,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,34,117,116,102,45,49,54,108,101,34,41,32,58,32,118,111,105,100,32,48,44,32,69,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,32,62,62,32,49,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,100,32,61,32,99,32,43,32,98,32,47,32,50,59,32,33,40,99,32,62,61,32,100,41,32,38,38,32,122,91,99,93,59,32,41,32,43,43,99,59,10,32,32,32,32,32,32,32,32,99,32,60,60,61,32,49,59,10,32,32,32,32,32,32,32,32,105,102,32,40,51,50,32,60,32,99,32,45,32,97,32,38,38,32,68,98,41,32,114,101,116,117,114,110,32,68,98,46,100,101,99,111,100,101,40,120,46,115,117,98,97,114,114,97,121,40,97,44,32,99,41,41,59,10,32,32,32,32,32,32,32,32,99,32,61,32,34,34,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,100,32,61,32,48,59,32,33,40,100,32,62,61,32,98,32,47,32,50,41,59,32,43,43,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,121,91,97,32,43,32,50,32,42,32,100,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,32,101,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,99,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,70,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,99,32,63,63,32,40,99,32,61,32,50,49,52,55,52,56,51,54,52,55,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,50,32,62,32,99,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,99,32,45,61,32,50,59,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,59,10,32,32,32,32,32,32,32,32,99,32,61,32,99,32,60,32,50,32,42,32,97,46,108,101,110,103,116,104,32,63,32,99,32,47,32,50,32,58,32,97,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,99,59,32,43,43,101,41,32,121,91,98,32,62,62,32,49,93,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,44,32,98,32,43,61,32,50,59,10,32,32,32,32,32,32,32,32,121,91,98,32,62,62,32,49,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,45,32,100,59,10,32,32,32,32,32,32,125,44,32,71,98,32,61,32,40,97,41,32,61,62,32,50,32,42,32,97,46,108,101,110,103,116,104,44,32,72,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,48,44,32,100,32,61,32,34,34,59,32,33,40,99,32,62,61,32,98,32,47,32,52,41,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,67,91,97,32,43,32,52,32,42,32,99,32,62,62,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,32,101,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,43,43,99,59,10,32,32,32,32,32,32,32,32,32,32,54,53,53,51,54,32,60,61,32,101,32,63,32,40,101,32,45,61,32,54,53,53,51,54,44,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,53,53,50,57,54,32,124,32,101,32,62,62,32,49,48,44,32,53,54,51,50,48,32,124,32,101,32,38,32,49,48,50,51,41,41,32,58,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,125,44,32,73,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,99,32,63,63,32,40,99,32,61,32,50,49,52,55,52,56,51,54,52,55,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,52,32,62,32,99,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,59,10,32,32,32,32,32,32,32,32,99,32,61,32,100,32,43,32,99,32,45,32,52,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,53,53,50,57,54,32,60,61,32,102,32,38,38,32,53,55,51,52,51,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,43,43,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,102,32,61,32,54,53,53,51,54,32,43,32,40,40,102,32,38,32,49,48,50,51,41,32,60,60,32,49,48,41,32,124,32,107,32,38,32,49,48,50,51,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,98,32,43,61,32,52,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,52,32,62,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,45,32,100,59,10,32,32,32,32,32,32,125,44,32,74,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,48,44,32,99,32,61,32,48,59,32,99,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,53,53,50,57,54,32,60,61,32,100,32,38,38,32,53,55,51,52,51,32,62,61,32,100,32,38,38,32,43,43,99,59,10,32,32,32,32,32,32,32,32,32,32,98,32,43,61,32,52,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,75,98,32,61,32,48,44,32,76,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,116,111,87,105,114,101,84,121,112,101,40,100,44,32,99,41,59,10,32,32,32,32,32,32,32,32,100,46,108,101,110,103,116,104,32,38,38,32,40,68,91,98,32,62,62,32,50,93,32,61,32,103,98,40,100,41,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,125,44,32,77,98,32,61,32,91,93,44,32,78,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,77,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,77,98,46,112,117,115,104,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,79,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,65,114,114,97,121,40,97,41,44,32,100,32,61,32,48,59,32,100,32,60,32,97,59,32,43,43,100,41,32,99,91,100,93,32,61,32,122,98,40,68,91,98,32,43,32,52,32,42,32,100,32,62,62,32,50,93,44,32,34,112,97,114,97,109,101,116,101,114,32,34,32,43,32,100,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,80,98,32,61,32,82,101,102,108,101,99,116,46,99,111,110,115,116,114,117,99,116,44,32,81,98,32,61,32,123,125,44,32,82,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,40,97,32,105,110,115,116,97,110,99,101,111,102,32,65,97,32,124,124,32,34,117,110,119,105,110,100,34,32,61,61,32,97,41,41,32,116,104,114,111,119,32,97,59,10,32,32,32,32,32,32,125,44,32,83,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,109,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,67,97,32,124,124,32,48,32,60,32,75,98,32,124,124,32,40,104,46,111,110,69,120,105,116,63,46,40,97,41,44,32,108,97,32,61,32,116,114,117,101,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,65,97,40,97,41,59,10,32,32,32,32,32,32,125,44,32,84,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,108,97,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,97,40,41,44,32,33,40,67,97,32,124,124,32,48,32,60,32,75,98,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,97,32,61,32,97,32,61,32,109,97,44,32,83,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,82,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,82,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,85,98,32,61,32,123,125,44,32,87,98,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,86,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,85,83,69,82,58,32,34,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,76,79,71,78,65,77,69,58,32,34,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,65,84,72,58,32,34,47,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,87,68,58,32,34,47,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,72,79,77,69,58,32,34,47,104,111,109,101,47,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,76,65,78,71,58,32,40,34,111,98,106,101,99,116,34,32,61,61,32,116,121,112,101,111,102,32,110,97,118,105,103,97,116,111,114,32,38,38,32,110,97,118,105,103,97,116,111,114,46,108,97,110,103,117,97,103,101,115,32,38,38,32,110,97,118,105,103,97,116,111,114,46,108,97,110,103,117,97,103,101,115,91,48,93,32,124,124,32,34,67,34,41,46,114,101,112,108,97,99,101,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,45,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,95,34,10,32,32,32,32,32,32,32,32,32,32,32,32,41,32,43,32,34,46,85,84,70,45,56,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,95,58,32,104,97,32,124,124,32,34,46,47,116,104,105,115,46,112,114,111,103,114,97,109,34,10,32,32,32,32,32,32,32,32,32,32,125,44,32,98,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,105,110,32,85,98,41,32,118,111,105,100,32,48,32,61,61,61,32,85,98,91,98,93,32,63,32,100,101,108,101,116,101,32,97,91,98,93,32,58,32,97,91,98,93,32,61,32,85,98,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,105,110,32,97,41,32,99,46,112,117,115,104,40,96,36,123,98,125,61,36,123,97,91,98,93,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,86,98,32,61,32,99,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,86,98,59,10,32,32,32,32,32,32,125,44,32,86,98,44,32,88,98,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,34,111,98,106,101,99,116,34,32,61,61,32,116,121,112,101,111,102,32,99,114,121,112,116,111,32,38,38,32,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,99,114,121,112,116,111,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,41,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,40,97,41,32,61,62,32,99,114,121,112,116,111,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,40,97,41,59,10,32,32,32,32,32,32,32,32,117,97,40,34,105,110,105,116,82,97,110,100,111,109,68,101,118,105,99,101,34,41,59,10,32,32,32,32,32,32,125,44,32,89,98,32,61,32,40,97,41,32,61,62,32,40,89,98,32,61,32,88,98,40,41,41,40,97,41,59,10,32,32,32,32,32,32,76,32,61,32,104,46,73,110,116,101,114,110,97,108,69,114,114,111,114,32,61,32,99,108,97,115,115,32,101,120,116,101,110,100,115,32,69,114,114,111,114,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,115,117,112,101,114,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,34,73,110,116,101,114,110,97,108,69,114,114,111,114,34,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,90,98,32,61,32,65,114,114,97,121,40,50,53,54,41,44,32,36,98,32,61,32,48,59,32,50,53,54,32,62,32,36,98,59,32,43,43,36,98,41,32,90,98,91,36,98,93,32,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,36,98,41,59,10,32,32,32,32,32,32,76,97,32,61,32,90,98,59,10,32,32,32,32,32,32,80,32,61,32,104,46,66,105,110,100,105,110,103,69,114,114,111,114,32,61,32,99,108,97,115,115,32,101,120,116,101,110,100,115,32,69,114,114,111,114,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,115,117,112,101,114,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,34,66,105,110,100,105,110,103,69,114,114,111,114,34,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,88,97,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,105,115,65,108,105,97,115,79,102,58,32,102,117,110,99,116,105,111,110,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,40,116,104,105,115,32,105,110,115,116,97,110,99,101,111,102,32,88,97,32,38,38,32,97,32,105,110,115,116,97,110,99,101,111,102,32,88,97,41,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,116,104,105,115,46,65,97,46,68,97,46,66,97,44,32,99,32,61,32,116,104,105,115,46,65,97,46,67,97,59,10,32,32,32,32,32,32,32,32,32,32,97,46,65,97,32,61,32,97,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,46,65,97,46,68,97,46,66,97,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,97,32,61,32,97,46,65,97,46,67,97,59,32,98,46,71,97,59,32,41,32,99,32,61,32,98,46,81,97,40,99,41,44,32,98,32,61,32,98,46,71,97,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,100,46,71,97,59,32,41,32,97,32,61,32,100,46,81,97,40,97,41,44,32,100,32,61,32,100,46,71,97,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,61,61,61,32,100,32,38,38,32,99,32,61,61,61,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,99,108,111,110,101,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,67,97,32,124,124,32,79,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,65,97,46,80,97,41,32,114,101,116,117,114,110,32,116,104,105,115,46,65,97,46,99,111,117,110,116,46,118,97,108,117,101,32,43,61,32,49,44,32,116,104,105,115,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,81,44,32,98,32,61,32,79,98,106,101,99,116,44,32,99,32,61,32,98,46,99,114,101,97,116,101,44,32,100,32,61,32,79,98,106,101,99,116,46,103,101,116,80,114,111,116,111,116,121,112,101,79,102,40,116,104,105,115,41,44,32,101,32,61,32,116,104,105,115,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,97,40,10,32,32,32,32,32,32,32,32,32,32,32,32,99,46,99,97,108,108,40,98,44,32,100,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,65,97,58,32,123,32,118,97,108,117,101,58,32,123,32,99,111,117,110,116,58,32,101,46,99,111,117,110,116,44,32,79,97,58,32,101,46,79,97,44,32,80,97,58,32,101,46,80,97,44,32,67,97,58,32,101,46,67,97,44,32,68,97,58,32,101,46,68,97,44,32,70,97,58,32,101,46,70,97,44,32,72,97,58,32,101,46,72,97,32,125,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,65,97,46,99,111,117,110,116,46,118,97,108,117,101,32,43,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,97,46,65,97,46,79,97,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,91,34,100,101,108,101,116,101,34,93,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,67,97,32,124,124,32,79,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,65,97,46,79,97,32,38,38,32,33,116,104,105,115,46,65,97,46,80,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,79,98,106,101,99,116,32,97,108,114,101,97,100,121,32,115,99,104,101,100,117,108,101,100,32,102,111,114,32,100,101,108,101,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,81,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,116,104,105,115,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,45,45,97,46,99,111,117,110,116,46,118,97,108,117,101,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,61,32,97,46,99,111,117,110,116,46,118,97,108,117,101,32,38,38,32,40,97,46,70,97,32,63,32,97,46,72,97,46,75,97,40,97,46,70,97,41,32,58,32,97,46,68,97,46,66,97,46,75,97,40,97,46,67,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,80,97,32,124,124,32,40,116,104,105,115,46,65,97,46,70,97,32,61,32,118,111,105,100,32,48,44,32,116,104,105,115,46,65,97,46,67,97,32,61,32,118,111,105,100,32,48,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,105,115,68,101,108,101,116,101,100,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,33,116,104,105,115,46,65,97,46,67,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,100,101,108,101,116,101,76,97,116,101,114,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,67,97,32,124,124,32,79,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,65,97,46,79,97,32,38,38,32,33,116,104,105,115,46,65,97,46,80,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,79,98,106,101,99,116,32,97,108,114,101,97,100,121,32,115,99,104,101,100,117,108,101,100,32,102,111,114,32,100,101,108,101,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,87,97,46,112,117,115,104,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,79,97,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,105,98,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,99,98,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,89,97,32,38,38,32,40,97,32,61,32,116,104,105,115,46,89,97,40,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,87,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,75,97,63,46,40,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,98,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,83,97,32,63,32,86,97,40,116,104,105,115,46,66,97,46,77,97,44,32,123,32,68,97,58,32,116,104,105,115,46,105,98,44,32,67,97,58,32,99,44,32,72,97,58,32,116,104,105,115,44,32,70,97,58,32,97,32,125,41,32,58,32,86,97,40,116,104,105,115,46,66,97,46,77,97,44,32,123,32,68,97,58,32,116,104,105,115,44,32,67,97,58,32,97,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,116,104,105,115,46,99,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,99,41,32,114,101,116,117,114,110,32,116,104,105,115,46,87,97,40,97,41,44,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,85,97,40,116,104,105,115,46,66,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,33,61,61,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,61,32,100,46,65,97,46,99,111,117,110,116,46,118,97,108,117,101,41,32,114,101,116,117,114,110,32,100,46,65,97,46,67,97,32,61,32,99,44,32,100,46,65,97,46,70,97,32,61,32,97,44,32,100,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,100,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,87,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,116,104,105,115,46,66,97,46,98,98,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,83,97,91,100,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,100,41,32,114,101,116,117,114,110,32,98,46,99,97,108,108,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,116,104,105,115,46,82,97,32,63,32,100,46,90,97,32,58,32,100,46,112,111,105,110,116,101,114,84,121,112,101,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,82,97,40,99,44,32,116,104,105,115,46,66,97,44,32,100,46,66,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,32,61,61,61,32,101,32,63,32,98,46,99,97,108,108,40,116,104,105,115,41,32,58,32,116,104,105,115,46,83,97,32,63,32,86,97,40,100,46,66,97,46,77,97,44,32,123,32,68,97,58,32,100,44,32,67,97,58,32,101,44,32,72,97,58,32,116,104,105,115,44,32,70,97,58,32,97,32,125,41,32,58,32,86,97,40,100,46,66,97,46,77,97,44,32,123,32,68,97,58,32,100,44,32,67,97,58,32,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,109,98,32,61,32,104,46,85,110,98,111,117,110,100,84,121,112,101,69,114,114,111,114,32,61,32,40,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,89,97,40,98,44,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,98,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,109,101,115,115,97,103,101,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,69,114,114,111,114,40,100,41,46,115,116,97,99,107,59,10,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,33,61,61,32,100,32,38,38,32,40,116,104,105,115,46,115,116,97,99,107,32,61,32,116,104,105,115,46,116,111,83,116,114,105,110,103,40,41,32,43,32,34,92,110,34,32,43,32,100,46,114,101,112,108,97,99,101,40,47,94,69,114,114,111,114,40,58,91,94,92,110,93,42,41,63,92,110,47,44,32,34,34,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,97,46,112,114,111,116,111,116,121,112,101,41,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,46,99,111,110,115,116,114,117,99,116,111,114,32,61,32,99,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,46,116,111,83,116,114,105,110,103,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,32,61,61,61,32,116,104,105,115,46,109,101,115,115,97,103,101,32,63,32,116,104,105,115,46,110,97,109,101,32,58,32,96,36,123,116,104,105,115,46,110,97,109,101,125,58,32,36,123,116,104,105,115,46,109,101,115,115,97,103,101,125,96,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,41,40,69,114,114,111,114,44,32,34,85,110,98,111,117,110,100,84,121,112,101,69,114,114,111,114,34,41,59,10,32,32,32,32,32,32,85,46,112,117,115,104,40,48,44,32,49,44,32,118,111,105,100,32,48,44,32,49,44,32,110,117,108,108,44,32,49,44,32,116,114,117,101,44,32,49,44,32,102,97,108,115,101,44,32,49,41,59,10,32,32,32,32,32,32,104,46,99,111,117,110,116,95,101,109,118,97,108,95,104,97,110,100,108,101,115,32,61,32,40,41,32,61,62,32,85,46,108,101,110,103,116,104,32,47,32,50,32,45,32,53,32,45,32,118,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,118,97,114,32,108,99,32,61,32,123,10,32,32,32,32,32,32,32,32,99,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,117,97,40,10,32,32,32,32,32,32,32,32,32,32,96,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,36,123,97,32,63,32,69,97,40,97,41,32,58,32,34,34,125,44,32,97,116,58,32,96,32,43,32,91,98,32,63,32,98,32,63,32,69,97,40,98,41,32,58,32,34,34,32,58,32,34,117,110,107,110,111,119,110,32,102,105,108,101,110,97,109,101,34,44,32,99,44,32,100,32,63,32,100,32,63,32,69,97,40,100,41,32,58,32,34,34,32,58,32,34,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,34,93,10,32,32,32,32,32,32,32,32,41,44,10,32,32,32,32,32,32,32,32,106,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,110,101,119,32,70,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,67,97,32,43,32,49,54,32,62,62,32,50,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,67,97,32,43,32,52,32,62,62,32,50,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,67,97,32,43,32,56,32,62,62,32,50,93,32,61,32,99,59,10,32,32,32,32,32,32,32,32,32,32,71,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,32,32,72,97,43,43,59,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,71,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,80,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,77,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,78,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,82,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,79,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,84,58,32,40,41,32,61,62,32,117,97,40,34,34,41,44,10,32,32,32,32,32,32,32,32,119,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,73,97,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,73,97,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,98,46,85,97,44,32,100,32,61,32,98,46,75,97,44,32,101,32,61,32,98,46,88,97,44,32,102,32,61,32,101,46,109,97,112,40,40,107,41,32,61,62,32,107,46,103,98,41,46,99,111,110,99,97,116,40,101,46,109,97,112,40,40,107,41,32,61,62,32,107,46,109,98,41,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,93,44,32,102,44,32,40,107,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,46,102,111,114,69,97,99,104,40,40,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,109,32,61,32,107,91,110,93,44,32,113,32,61,32,108,46,101,98,44,32,114,32,61,32,108,46,102,98,44,32,65,32,61,32,107,91,110,32,43,32,101,46,108,101,110,103,116,104,93,44,32,118,32,61,32,108,46,108,98,44,32,119,32,61,32,108,46,110,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,91,108,46,97,98,93,32,61,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,58,32,40,69,41,32,61,62,32,109,46,102,114,111,109,87,105,114,101,84,121,112,101,40,113,40,114,44,32,69,41,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,119,114,105,116,101,58,32,40,69,44,32,100,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,66,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,40,119,44,32,69,44,32,65,46,116,111,87,105,114,101,84,121,112,101,40,66,44,32,100,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,74,97,40,66,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,46,110,97,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,110,32,61,32,123,125,44,32,109,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,109,32,105,110,32,103,41,32,110,91,109,93,32,61,32,103,91,109,93,46,114,101,97,100,40,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,40,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,109,32,105,110,32,103,41,32,105,102,32,40,33,40,109,32,105,110,32,110,41,41,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,77,105,115,115,105,110,103,32,102,105,101,108,100,58,32,34,36,123,109,125,34,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,113,32,61,32,99,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,109,32,105,110,32,103,41,32,103,91,109,93,46,119,114,105,116,101,40,113,44,32,110,91,109,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,108,32,38,38,32,108,46,112,117,115,104,40,100,44,32,113,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,113,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,100,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,70,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,95,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,33,33,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,101,44,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,32,63,32,99,32,58,32,100,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,102,117,110,99,116,105,111,110,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,120,91,101,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,109,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,44,32,109,44,32,113,44,32,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,109,32,61,32,79,40,109,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,83,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,103,32,38,38,32,40,103,32,61,32,83,40,107,44,32,103,41,41,59,10,32,32,32,32,32,32,32,32,32,32,110,32,38,38,32,40,110,32,61,32,83,40,108,44,32,110,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,32,61,32,83,40,113,44,32,114,41,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,65,32,61,32,97,98,40,109,41,59,10,32,32,32,32,32,32,32,32,32,32,36,97,40,65,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,111,110,115,116,114,117,99,116,32,36,123,109,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,44,32,98,44,32,99,93,44,32,100,32,63,32,91,100,93,32,58,32,91,93,44,32,40,118,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,32,61,32,118,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,119,32,61,32,118,46,66,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,69,32,61,32,119,46,77,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,69,32,61,32,88,97,46,112,114,111,116,111,116,121,112,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,32,61,32,89,97,40,109,44,32,102,117,110,99,116,105,111,110,40,46,46,46,78,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,79,98,106,101,99,116,46,103,101,116,80,114,111,116,111,116,121,112,101,79,102,40,116,104,105,115,41,32,33,61,61,32,100,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,85,115,101,32,39,110,101,119,39,32,116,111,32,99,111,110,115,116,114,117,99,116,32,34,32,43,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,66,46,76,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,109,32,43,32,34,32,104,97,115,32,110,111,32,97,99,99,101,115,115,105,98,108,101,32,99,111,110,115,116,114,117,99,116,111,114,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,117,98,32,61,32,66,46,76,97,91,78,97,46,108,101,110,103,116,104,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,117,98,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,84,114,105,101,100,32,116,111,32,105,110,118,111,107,101,32,99,116,111,114,32,111,102,32,36,123,109,125,32,119,105,116,104,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,40,36,123,78,97,46,108,101,110,103,116,104,125,41,32,45,32,101,120,112,101,99,116,101,100,32,40,36,123,79,98,106,101,99,116,46,107,101,121,115,40,66,46,76,97,41,46,116,111,83,116,114,105,110,103,40,41,125,41,32,112,97,114,97,109,101,116,101,114,115,32,105,110,115,116,101,97,100,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,117,98,46,97,112,112,108,121,40,116,104,105,115,44,32,78,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,97,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,69,44,32,123,32,99,111,110,115,116,114,117,99,116,111,114,58,32,123,32,118,97,108,117,101,58,32,118,32,125,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,46,112,114,111,116,111,116,121,112,101,32,61,32,100,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,66,32,61,32,110,101,119,32,98,98,40,109,44,32,118,44,32,100,97,44,32,114,44,32,119,44,32,102,44,32,103,44,32,110,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,66,46,71,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,101,97,32,61,32,66,46,71,97,41,46,86,97,32,63,63,32,40,101,97,46,86,97,32,61,32,91,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,66,46,71,97,46,86,97,46,112,117,115,104,40,66,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,119,32,61,32,110,101,119,32,105,98,40,109,44,32,66,44,32,116,114,117,101,44,32,102,97,108,115,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,97,32,61,32,110,101,119,32,105,98,40,109,32,43,32,34,42,34,44,32,66,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,69,32,61,32,110,101,119,32,105,98,40,109,32,43,32,34,32,99,111,110,115,116,42,34,44,32,66,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,83,97,91,97,93,32,61,32,123,32,112,111,105,110,116,101,114,84,121,112,101,58,32,101,97,44,32,90,97,58,32,69,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,106,98,40,65,44,32,118,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,119,44,32,101,97,44,32,69,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,114,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,113,98,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,83,40,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,91,97,93,44,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,103,32,61,32,103,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,96,99,111,110,115,116,114,117,99,116,111,114,32,36,123,103,46,110,97,109,101,125,96,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,103,46,66,97,46,76,97,32,38,38,32,40,103,46,66,97,46,76,97,32,61,32,91,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,33,61,61,32,103,46,66,97,46,76,97,91,98,32,45,32,49,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,109,117,108,116,105,112,108,101,32,99,111,110,115,116,114,117,99,116,111,114,115,32,119,105,116,104,32,105,100,101,110,116,105,99,97,108,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,40,36,123,98,32,45,32,49,125,41,32,102,111,114,32,99,108,97,115,115,32,39,36,123,103,46,110,97,109,101,125,39,33,32,79,118,101,114,108,111,97,100,32,114,101,115,111,108,117,116,105,111,110,32,105,115,32,99,117,114,114,101,110,116,108,121,32,111,110,108,121,32,112,101,114,102,111,114,109,101,100,32,117,115,105,110,103,32,116,104,101,32,112,97,114,97,109,101,116,101,114,32,99,111,117,110,116,44,32,110,111,116,32,97,99,116,117,97,108,32,116,121,112,101,32,105,110,102,111,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,103,46,66,97,46,76,97,91,98,32,45,32,49,93,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,111,110,115,116,114,117,99,116,32,36,123,103,46,110,97,109,101,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,107,44,32,40,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,46,115,112,108,105,99,101,40,49,44,32,48,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,46,66,97,46,76,97,91,98,32,45,32,49,93,32,61,32,115,98,40,108,44,32,110,44,32,110,117,108,108,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,100,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,113,98,40,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,116,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,83,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,91,97,93,44,32,40,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,109,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,97,108,108,32,36,123,113,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,110,32,61,32,110,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,113,32,61,32,96,36,123,110,46,110,97,109,101,125,46,36,123,98,125,96,59,10,32,32,32,32,32,32,32,32,32,32,32,32,98,46,115,116,97,114,116,115,87,105,116,104,40,34,64,64,34,41,32,38,38,32,40,98,32,61,32,83,121,109,98,111,108,91,98,46,115,117,98,115,116,114,105,110,103,40,50,41,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,103,32,38,38,32,110,46,66,97,46,106,98,46,112,117,115,104,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,114,32,61,32,110,46,66,97,46,77,97,44,32,65,32,61,32,114,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,65,32,124,124,32,118,111,105,100,32,48,32,61,61,61,32,65,46,69,97,32,38,38,32,65,46,99,108,97,115,115,78,97,109,101,32,33,61,61,32,110,46,110,97,109,101,32,38,38,32,65,46,78,97,32,61,61,61,32,99,32,45,32,50,32,63,32,40,109,46,78,97,32,61,32,99,32,45,32,50,44,32,109,46,99,108,97,115,115,78,97,109,101,32,61,32,110,46,110,97,109,101,44,32,114,91,98,93,32,61,32,109,41,32,58,32,40,90,97,40,114,44,32,98,44,32,113,41,44,32,114,91,98,93,46,69,97,91,99,32,45,32,50,93,32,61,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,108,44,32,40,118,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,32,61,32,115,98,40,113,44,32,118,44,32,110,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,114,91,98,93,46,69,97,32,63,32,40,118,46,78,97,32,61,32,99,32,45,32,50,44,32,114,91,98,93,32,61,32,118,41,32,58,32,114,91,98,93,46,69,97,91,99,32,45,32,50,93,32,61,32,118,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,89,58,32,40,97,41,32,61,62,32,77,40,97,44,32,120,98,41,44,10,32,32,32,32,32,32,32,32,68,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,101,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,101,46,118,97,108,117,101,115,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,58,32,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,99,111,110,115,116,114,117,99,116,111,114,46,118,97,108,117,101,115,91,102,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,102,44,32,107,41,32,61,62,32,107,46,118,97,108,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,121,98,40,98,44,32,99,44,32,100,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,36,97,40,98,44,32,101,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,108,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,122,98,40,97,44,32,34,101,110,117,109,34,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,100,46,99,111,110,115,116,114,117,99,116,111,114,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,100,46,99,111,110,115,116,114,117,99,116,111,114,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,108,117,101,58,32,123,32,118,97,108,117,101,58,32,99,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,58,32,123,32,118,97,108,117,101,58,32,89,97,40,96,36,123,100,46,110,97,109,101,125,95,36,123,98,125,96,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,118,97,108,117,101,115,91,99,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,65,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,100,41,32,61,62,32,100,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,100,44,32,101,41,32,61,62,32,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,65,98,40,98,44,32,99,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,118,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,113,98,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,116,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,83,40,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,36,97,40,10,32,32,32,32,32,32,32,32,32,32,32,32,97,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,97,108,108,32,36,123,97,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,98,32,45,32,49,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,107,44,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,106,98,40,97,44,32,115,98,40,97,44,32,91,103,91,48,93,44,32,110,117,108,108,93,46,99,111,110,99,97,116,40,103,46,115,108,105,99,101,40,49,41,41,44,32,110,117,108,108,44,32,101,44,32,102,41,44,32,98,32,45,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,110,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,45,49,32,61,61,61,32,101,32,38,38,32,40,101,32,61,32,52,50,57,52,57,54,55,50,57,53,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,40,103,41,32,61,62,32,103,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,61,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,51,50,32,45,32,56,32,42,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,40,103,41,32,61,62,32,103,32,60,60,32,102,32,62,62,62,32,102,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,98,46,105,110,99,108,117,100,101,115,40,34,117,110,115,105,103,110,101,100,34,41,32,63,32,102,117,110,99,116,105,111,110,40,103,44,32,108,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,108,32,62,62,62,32,48,59,10,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,103,44,32,108,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,108,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,110,97,109,101,58,32,98,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,101,44,32,116,111,87,105,114,101,84,121,112,101,58,32,107,44,32,73,97,58,32,56,44,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,66,98,40,98,44,32,99,44,32,48,32,33,61,61,32,100,41,44,32,74,97,58,32,110,117,108,108,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,103,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,101,40,117,46,98,117,102,102,101,114,44,32,68,91,102,32,43,32,52,32,62,62,32,50,93,44,32,68,91,102,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,91,73,110,116,56,65,114,114,97,121,44,32,85,105,110,116,56,65,114,114,97,121,44,32,73,110,116,49,54,65,114,114,97,121,44,32,85,105,110,116,49,54,65,114,114,97,121,44,32,73,110,116,51,50,65,114,114,97,121,44,32,85,105,110,116,51,50,65,114,114,97,121,44,32,70,108,111,97,116,51,50,65,114,114,97,121,44,32,70,108,111,97,116,54,52,65,114,114,97,121,93,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,110,97,109,101,58,32,99,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,100,44,32,73,97,58,32,56,44,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,100,32,125,44,32,123,32,104,98,58,32,116,114,117,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,113,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,67,98,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,117,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,44,32,109,44,32,113,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,83,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,103,32,61,32,83,40,107,44,32,103,41,59,10,32,32,32,32,32,32,32,32,32,32,110,32,61,32,83,40,108,44,32,110,41,59,10,32,32,32,32,32,32,32,32,32,32,113,32,61,32,83,40,109,44,32,113,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,93,44,32,91,98,93,44,32,40,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,32,61,32,114,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,110,101,119,32,105,98,40,99,44,32,114,46,66,97,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,114,44,32,100,44,32,102,44,32,103,44,32,110,44,32,113,41,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,90,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,100,32,61,32,68,91,99,32,62,62,32,50,93,44,32,101,32,61,32,99,32,43,32,52,44,32,102,44,32,107,32,61,32,101,44,32,103,32,61,32,48,59,32,103,32,60,61,32,100,59,32,43,43,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,101,32,43,32,103,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,32,61,61,32,100,32,124,124,32,48,32,61,61,32,120,91,108,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,32,107,32,63,32,69,97,40,107,44,32,108,32,45,32,107,41,32,58,32,34,34,44,32,118,111,105,100,32,48,32,61,61,61,32,102,32,63,32,102,32,61,32,107,32,58,32,40,102,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,48,41,44,32,102,32,43,61,32,107,41,44,32,107,32,61,32,108,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,32,105,110,115,116,97,110,99,101,111,102,32,65,114,114,97,121,66,117,102,102,101,114,32,38,38,32,40,100,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,100,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,44,32,102,32,61,32,34,115,116,114,105,110,103,34,32,61,61,32,116,121,112,101,111,102,32,100,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,40,102,32,124,124,32,100,32,105,110,115,116,97,110,99,101,111,102,32,85,105,110,116,56,65,114,114,97,121,32,124,124,32,100,32,105,110,115,116,97,110,99,101,111,102,32,85,105,110,116,56,67,108,97,109,112,101,100,65,114,114,97,121,32,124,124,32,100,32,105,110,115,116,97,110,99,101,111,102,32,73,110,116,56,65,114,114,97,121,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,34,67,97,110,110,111,116,32,112,97,115,115,32,110,111,110,45,115,116,114,105,110,103,32,116,111,32,115,116,100,58,58,115,116,114,105,110,103,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,107,32,61,32,101,32,61,32,48,59,32,107,32,60,32,100,46,108,101,110,103,116,104,59,32,43,43,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,100,46,99,104,97,114,67,111,100,101,65,116,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,50,55,32,62,61,32,103,32,63,32,101,43,43,32,58,32,50,48,52,55,32,62,61,32,103,32,63,32,101,32,43,61,32,50,32,58,32,53,53,50,57,54,32,60,61,32,103,32,38,38,32,53,55,51,52,51,32,62,61,32,103,32,63,32,40,101,32,43,61,32,52,44,32,43,43,107,41,32,58,32,101,32,43,61,32,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,101,32,61,32,100,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,32,97,99,40,52,32,43,32,101,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,32,61,32,107,32,43,32,52,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,91,107,32,62,62,32,50,93,32,61,32,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,41,32,72,40,100,44,32,103,44,32,101,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,40,102,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,102,32,61,32,48,59,32,102,32,60,32,101,59,32,43,43,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,100,46,99,104,97,114,67,111,100,101,65,116,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,53,53,32,60,32,108,41,32,116,104,114,111,119,32,84,40,103,41,44,32,110,101,119,32,80,40,34,83,116,114,105,110,103,32,104,97,115,32,85,84,70,45,49,54,32,99,111,100,101,32,117,110,105,116,115,32,116,104,97,116,32,100,111,32,110,111,116,32,102,105,116,32,105,110,32,56,32,98,105,116,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,120,91,103,32,43,32,102,93,32,61,32,108,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,102,111,114,32,40,102,32,61,32,48,59,32,102,32,60,32,101,59,32,43,43,102,41,32,120,91,103,32,43,32,102,93,32,61,32,100,91,102,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,99,32,38,38,32,99,46,112,117,115,104,40,84,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,121,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,69,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,70,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,71,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,40,103,41,32,61,62,32,122,91,103,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,52,32,61,61,61,32,98,32,38,38,32,40,100,32,61,32,72,98,44,32,101,32,61,32,73,98,44,32,102,32,61,32,74,98,44,32,107,32,61,32,40,103,41,32,61,62,32,68,91,103,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,108,32,61,32,68,91,103,32,62,62,32,50,93,44,32,110,44,32,109,32,61,32,103,32,43,32,52,44,32,113,32,61,32,48,59,32,113,32,60,61,32,108,59,32,43,43,113,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,114,32,61,32,103,32,43,32,52,32,43,32,113,32,42,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,113,32,61,61,32,108,32,124,124,32,48,32,61,61,32,107,40,114,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,32,61,32,100,40,109,44,32,114,32,45,32,109,41,44,32,118,111,105,100,32,48,32,61,61,61,32,110,32,63,32,110,32,61,32,109,32,58,32,40,110,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,48,41,44,32,110,32,43,61,32,109,41,44,32,109,32,61,32,114,32,43,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,103,44,32,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,34,115,116,114,105,110,103,34,32,33,61,32,116,121,112,101,111,102,32,108,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,110,111,110,45,115,116,114,105,110,103,32,116,111,32,67,43,43,32,115,116,114,105,110,103,32,116,121,112,101,32,36,123,99,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,110,32,61,32,102,40,108,41,44,32,109,32,61,32,97,99,40,52,32,43,32,110,32,43,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,91,109,32,62,62,32,50,93,32,61,32,110,32,47,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,40,108,44,32,109,32,43,32,52,44,32,110,32,43,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,103,32,38,38,32,103,46,112,117,115,104,40,84,44,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,120,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,73,97,91,97,93,32,61,32,123,32,110,97,109,101,58,32,79,40,98,41,44,32,85,97,58,32,83,40,99,44,32,100,41,44,32,75,97,58,32,83,40,101,44,32,102,41,44,32,88,97,58,32,91,93,32,125,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,105,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,73,97,91,97,93,46,88,97,46,112,117,115,104,40,123,32,97,98,58,32,79,40,98,41,44,32,103,98,58,32,99,44,32,101,98,58,32,83,40,100,44,32,101,41,44,32,102,98,58,32,102,44,32,109,98,58,32,107,44,32,108,98,58,32,83,40,103,44,32,108,41,44,32,110,98,58,32,110,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,36,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,112,98,58,32,116,114,117,101,44,32,110,97,109,101,58,32,98,44,32,73,97,58,32,48,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,125,44,32,116,111,87,105,114,101,84,121,112,101,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,125,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,75,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,75,98,32,61,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,73,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,73,110,102,105,110,105,116,121,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,67,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,122,98,40,98,44,32,34,101,109,118,97,108,58,58,97,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,76,98,40,98,44,32,99,44,32,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,112,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,77,98,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,86,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,40,110,117,108,108,44,32,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,87,58,32,119,98,44,10,32,32,32,32,32,32,32,32,69,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,86,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,32,61,61,32,98,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,111,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,79,98,40,97,44,32,98,41,44,32,101,32,61,32,100,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,97,45,45,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,96,109,101,116,104,111,100,67,97,108,108,101,114,60,40,36,123,100,46,109,97,112,40,40,107,41,32,61,62,32,107,46,110,97,109,101,41,46,106,111,105,110,40,34,44,32,34,41,125,41,32,61,62,32,36,123,101,46,110,97,109,101,125,62,96,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,78,98,40,10,32,32,32,32,32,32,32,32,32,32,32,32,89,97,40,98,44,32,40,107,44,32,103,44,32,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,109,32,61,32,48,44,32,113,32,61,32,48,59,32,113,32,60,32,97,59,32,43,43,113,41,32,102,91,113,93,32,61,32,100,91,113,93,46,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,40,110,32,43,32,109,41,44,32,109,32,43,61,32,100,91,113,93,46,73,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,32,49,32,61,61,61,32,99,32,63,32,80,98,40,103,44,32,102,41,32,58,32,103,46,97,112,112,108,121,40,107,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,76,98,40,101,44,32,108,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,122,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,57,32,60,32,97,32,38,38,32,40,85,91,97,32,43,32,49,93,32,43,61,32,49,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,99,97,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,74,97,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,119,98,40,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,116,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,122,98,40,97,44,32,34,95,101,109,118,97,108,95,116,97,107,101,95,118,97,108,117,101,34,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,97,46,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,103,98,40,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,71,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,81,98,91,97,93,32,38,38,32,40,99,108,101,97,114,84,105,109,101,111,117,116,40,81,98,91,97,93,46,105,100,41,44,32,100,101,108,101,116,101,32,81,98,91,97,93,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,98,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,81,98,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,84,98,40,40,41,32,61,62,32,98,99,40,97,44,32,112,101,114,102,111,114,109,97,110,99,101,46,110,111,119,40,41,41,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,81,98,91,97,93,32,61,32,123,32,105,100,58,32,99,44,32,113,98,58,32,98,32,125,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,72,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,40,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,68,97,116,101,40,41,41,46,103,101,116,70,117,108,108,89,101,97,114,40,41,44,32,102,32,61,32,110,101,119,32,68,97,116,101,40,101,44,32,48,44,32,49,41,46,103,101,116,84,105,109,101,122,111,110,101,79,102,102,115,101,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,110,101,119,32,68,97,116,101,40,101,44,32,54,44,32,49,41,46,103,101,116,84,105,109,101,122,111,110,101,79,102,102,115,101,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,97,32,62,62,32,50,93,32,61,32,54,48,32,42,32,77,97,116,104,46,109,97,120,40,102,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,78,117,109,98,101,114,40,102,32,33,61,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,40,107,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,77,97,116,104,46,97,98,115,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,96,85,84,67,36,123,48,32,60,61,32,107,32,63,32,34,45,34,32,58,32,34,43,34,125,36,123,83,116,114,105,110,103,40,77,97,116,104,46,102,108,111,111,114,40,103,32,47,32,54,48,41,41,46,112,97,100,83,116,97,114,116,40,50,44,32,34,48,34,41,125,36,123,83,116,114,105,110,103,40,103,32,37,32,54,48,41,46,112,97,100,83,116,97,114,116,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,50,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,48,34,10,32,32,32,32,32,32,32,32,32,32,32,32,41,125,96,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,98,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,60,32,102,32,63,32,40,72,40,97,44,32,99,44,32,49,55,41,44,32,72,40,98,44,32,100,44,32,49,55,41,41,32,58,32,40,72,40,97,44,32,100,44,32,49,55,41,44,32,72,40,98,44,32,99,44,32,49,55,41,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,98,97,58,32,40,41,32,61,62,32,112,101,114,102,111,114,109,97,110,99,101,46,110,111,119,40,41,44,10,32,32,32,32,32,32,32,32,74,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,120,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,97,32,62,62,62,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,49,52,55,52,56,51,54,52,56,32,60,32,97,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,49,59,32,52,32,62,61,32,99,59,32,99,32,42,61,32,50,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,32,42,32,40,49,32,43,32,48,46,50,32,47,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,77,97,116,104,46,109,105,110,40,100,44,32,97,32,43,32,49,48,48,54,54,51,50,57,54,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,40,77,97,116,104,46,109,105,110,40,50,49,52,55,52,56,51,54,52,56,44,32,54,53,53,51,54,32,42,32,77,97,116,104,46,99,101,105,108,40,77,97,116,104,46,109,97,120,40,97,44,32,100,41,32,47,32,54,53,53,51,54,41,41,32,45,32,107,97,46,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,32,43,32,54,53,53,51,53,41,32,47,32,54,53,53,51,54,32,124,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,97,46,103,114,111,119,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,32,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,41,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,86,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,87,98,40,41,46,102,111,114,69,97,99,104,40,40,100,44,32,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,98,32,43,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,68,91,97,32,43,32,52,32,42,32,101,32,62,62,32,50,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,102,32,61,32,48,59,32,102,32,60,32,100,46,108,101,110,103,116,104,59,32,43,43,102,41,32,117,91,101,43,43,93,32,61,32,100,46,99,104,97,114,67,111,100,101,65,116,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,117,91,101,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,32,43,61,32,100,46,108,101,110,103,116,104,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,88,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,87,98,40,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,97,32,62,62,32,50,93,32,61,32,99,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,99,46,102,111,114,69,97,99,104,40,40,101,41,32,61,62,32,100,32,43,61,32,101,46,108,101,110,103,116,104,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,98,32,62,62,32,50,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,83,58,32,40,41,32,61,62,32,53,50,44,10,32,32,32,32,32,32,32,32,81,58,32,40,41,32,61,62,32,53,50,44,10,32,32,32,32,32,32,32,32,107,58,32,99,99,44,10,32,32,32,32,32,32,32,32,102,58,32,100,99,44,10,32,32,32,32,32,32,32,32,101,58,32,101,99,44,10,32,32,32,32,32,32,32,32,66,58,32,102,99,44,10,32,32,32,32,32,32,32,32,97,97,58,32,103,99,44,10,32,32,32,32,32,32,32,32,97,58,32,104,99,44,10,32,32,32,32,32,32,32,32,98,58,32,105,99,44,10,32,32,32,32,32,32,32,32,104,58,32,106,99,44,10,32,32,32,32,32,32,32,32,115,58,32,107,99,44,10,32,32,32,32,32,32,32,32,85,58,32,83,98,44,10,32,32,32,32,32,32,32,32,76,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,89,98,40,120,46,115,117,98,97,114,114,97,121,40,97,44,32,97,32,43,32,98,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,87,59,10,32,32,32,32,32,32,40,97,115,121,110,99,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,97,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,87,32,61,32,100,46,101,120,112,111,114,116,115,59,10,32,32,32,32,32,32,32,32,32,32,107,97,32,61,32,87,46,100,97,59,10,32,32,32,32,32,32,32,32,32,32,112,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,82,32,61,32,87,46,103,97,59,10,32,32,32,32,32,32,32,32,32,32,114,97,46,117,110,115,104,105,102,116,40,87,46,101,97,41,59,10,32,32,32,32,32,32,32,32,32,32,70,45,45,59,10,32,32,32,32,32,32,32,32,32,32,104,46,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,99,105,101,115,63,46,40,70,41,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,32,70,32,38,38,32,71,32,38,38,32,40,100,32,61,32,71,44,32,71,32,61,32,110,117,108,108,44,32,100,40,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,87,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,70,43,43,59,10,32,32,32,32,32,32,32,32,104,46,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,99,105,101,115,63,46,40,70,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,123,32,97,58,32,108,99,32,125,59,10,32,32,32,32,32,32,32,32,105,102,32,40,104,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,104,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,40,98,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,40,96,77,111,100,117,108,101,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,32,119,105,116,104,32,101,114,114,111,114,58,32,36,123,100,125,96,41,44,32,98,97,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,119,97,32,63,63,32,40,119,97,32,61,32,118,97,40,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,41,32,63,32,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,32,58,32,104,46,108,111,99,97,116,101,70,105,108,101,32,63,32,104,46,108,111,99,97,116,101,70,105,108,101,40,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,44,32,112,41,32,58,32,112,32,43,32,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,119,97,105,116,32,122,97,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,97,40,99,46,105,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,98,97,40,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,40,41,59,10,32,32,32,32,32,32,118,97,114,32,97,99,32,61,32,40,97,41,32,61,62,32,40,97,99,32,61,32,87,46,102,97,41,40,97,41,44,32,84,32,61,32,40,97,41,32,61,62,32,40,84,32,61,32,87,46,104,97,41,40,97,41,44,32,110,98,32,61,32,40,97,41,32,61,62,32,40,110,98,32,61,32,87,46,105,97,41,40,97,41,44,32,98,99,32,61,32,40,97,44,32,98,41,32,61,62,32,40,98,99,32,61,32,87,46,106,97,41,40,97,44,32,98,41,44,32,88,32,61,32,40,97,44,32,98,41,32,61,62,32,40,88,32,61,32,87,46,107,97,41,40,97,44,32,98,41,44,32,89,32,61,32,40,97,41,32,61,62,32,40,89,32,61,32,87,46,108,97,41,40,97,41,44,32,90,32,61,32,40,41,32,61,62,32,40,90,32,61,32,87,46,109,97,41,40,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,106,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,106,105,105,105,32,61,32,87,46,110,97,41,40,97,44,32,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,106,105,105,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,106,105,105,32,61,32,87,46,111,97,41,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,32,61,32,87,46,112,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,102,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,102,105,105,32,61,32,87,46,113,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,32,61,32,87,46,114,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,32,61,32,87,46,115,97,41,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,105,32,61,32,87,46,116,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,102,102,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,102,102,105,105,32,61,32,87,46,117,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,32,61,32,87,46,118,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,105,105,106,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,105,105,106,105,105,32,61,32,87,46,119,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,32,61,32,87,46,120,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,106,32,61,32,87,46,121,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,105,106,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,105,106,106,32,61,32,87,46,122,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,41,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,99,99,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,32,33,61,61,32,100,32,43,32,48,41,32,116,104,114,111,119,32,100,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,102,99,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,32,33,61,61,32,103,32,43,32,48,41,32,116,104,114,111,119,32,103,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,104,99,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,32,33,61,61,32,100,32,43,32,48,41,32,116,104,114,111,119,32,100,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,106,99,40,97,44,32,98,44,32,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,32,33,61,61,32,102,32,43,32,48,41,32,116,104,114,111,119,32,102,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,101,99,40,97,44,32,98,44,32,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,32,33,61,61,32,102,32,43,32,48,41,32,116,104,114,111,119,32,102,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,105,99,40,97,44,32,98,44,32,99,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,33,61,61,32,101,32,43,32,48,41,32,116,104,114,111,119,32,101,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,107,99,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,107,32,33,61,61,32,107,32,43,32,48,41,32,116,104,114,111,119,32,107,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,99,40,97,44,32,98,44,32,99,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,33,61,61,32,101,32,43,32,48,41,32,116,104,114,111,119,32,101,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,103,99,40,97,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,32,33,61,61,32,99,32,43,32,48,41,32,116,104,114,111,119,32,99,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,109,99,59,10,32,32,32,32,32,32,71,32,61,32,102,117,110,99,116,105,111,110,32,110,99,40,41,32,123,10,32,32,32,32,32,32,32,32,109,99,32,124,124,32,111,99,40,41,59,10,32,32,32,32,32,32,32,32,109,99,32,124,124,32,40,71,32,61,32,110,99,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,111,99,40,41,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,97,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,109,99,32,38,38,32,40,109,99,32,61,32,116,114,117,101,44,32,104,46,99,97,108,108,101,100,82,117,110,32,61,32,116,114,117,101,44,32,33,108,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,40,114,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,97,40,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,104,46,111,110,82,117,110,116,105,109,101,73,110,105,116,105,97,108,105,122,101,100,63,46,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,46,112,111,115,116,82,117,110,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,104,46,112,111,115,116,82,117,110,32,38,38,32,40,104,46,112,111,115,116,82,117,110,32,61,32,91,104,46,112,111,115,116,82,117,110,93,41,59,32,104,46,112,111,115,116,82,117,110,46,108,101,110,103,116,104,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,104,46,112,111,115,116,82,117,110,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,97,46,117,110,115,104,105,102,116,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,40,115,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,40,48,32,60,32,70,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,46,112,114,101,82,117,110,41,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,104,46,112,114,101,82,117,110,32,38,38,32,40,104,46,112,114,101,82,117,110,32,61,32,91,104,46,112,114,101,82,117,110,93,41,59,32,104,46,112,114,101,82,117,110,46,108,101,110,103,116,104,59,32,41,32,116,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,66,97,40,113,97,41,59,10,32,32,32,32,32,32,32,32,32,32,48,32,60,32,70,32,124,124,32,40,104,46,115,101,116,83,116,97,116,117,115,32,63,32,40,104,46,115,101,116,83,116,97,116,117,115,40,34,82,117,110,110,105,110,103,46,46,46,34,41,44,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,104,46,115,101,116,83,116,97,116,117,115,40,34,34,41,44,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,49,41,41,32,58,32,97,40,41,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,104,46,112,114,101,73,110,105,116,41,10,32,32,32,32,32,32,32,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,104,46,112,114,101,73,110,105,116,32,38,38,32,40,104,46,112,114,101,73,110,105,116,32,61,32,91,104,46,112,114,101,73,110,105,116,93,41,59,32,48,32,60,32,104,46,112,114,101,73,110,105,116,46,108,101,110,103,116,104,59,32,41,32,104,46,112,114,101,73,110,105,116,46,112,111,112,40,41,40,41,59,10,32,32,32,32,32,32,111,99,40,41,59,10,32,32,32,32,32,32,109,111,100,117,108,101,82,116,110,32,61,32,99,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,82,116,110,59,10,32,32,32,32,125,59,10,32,32,125,41,40,41,59,10,32,32,118,97,114,32,100,111,116,108,111,116,116,105,101,95,112,108,97,121,101,114,95,100,101,102,97,117,108,116,32,61,32,99,114,101,97,116,101,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,77,111,100,117,108,101,59,10,10,32,32,47,47,32,115,114,99,47,99,111,114,101,47,100,111,116,108,111,116,116,105,101,45,119,97,115,109,45,108,111,97,100,101,114,46,116,115,10,32,32,118,97,114,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,34,82,101,110,100,101,114,101,114,76,111,97,100,101,114,32,105,115,32,97,32,115,116,97,116,105,99,32,99,108,97,115,115,32,97,110,100,32,99,97,110,110,111,116,32,98,101,32,105,110,115,116,97,110,116,105,97,116,101,100,46,34,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,97,115,121,110,99,32,95,116,114,121,76,111,97,100,40,117,114,108,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,117,108,101,32,61,32,97,119,97,105,116,32,100,111,116,108,111,116,116,105,101,95,112,108,97,121,101,114,95,100,101,102,97,117,108,116,40,123,32,108,111,99,97,116,101,70,105,108,101,58,32,40,41,32,61,62,32,117,114,108,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,84,114,105,101,115,32,116,111,32,108,111,97,100,32,116,104,101,32,87,65,83,77,32,109,111,100,117,108,101,32,102,114,111,109,32,116,104,101,32,112,114,105,109,97,114,121,32,85,82,76,44,32,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,97,32,98,97,99,107,117,112,32,85,82,76,32,105,102,32,110,101,99,101,115,115,97,114,121,46,10,32,32,32,32,32,42,32,84,104,114,111,119,115,32,97,110,32,101,114,114,111,114,32,105,102,32,98,111,116,104,32,85,82,76,115,32,102,97,105,108,32,116,111,32,108,111,97,100,32,116,104,101,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,80,114,111,109,105,115,101,60,77,111,100,117,108,101,62,32,45,32,65,32,112,114,111,109,105,115,101,32,116,104,97,116,32,114,101,115,111,108,118,101,115,32,116,111,32,116,104,101,32,108,111,97,100,101,100,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,97,115,121,110,99,32,95,108,111,97,100,87,105,116,104,66,97,99,107,117,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,32,61,32,116,104,105,115,46,95,116,114,121,76,111,97,100,40,116,104,105,115,46,95,119,97,115,109,85,82,76,41,46,99,97,116,99,104,40,97,115,121,110,99,32,40,105,110,105,116,105,97,108,69,114,114,111,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,97,99,107,117,112,85,114,108,32,61,32,96,104,116,116,112,115,58,47,47,117,110,112,107,103,46,99,111,109,47,36,123,80,65,67,75,65,71,69,95,78,65,77,69,125,64,36,123,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,125,47,100,105,115,116,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,119,97,115,109,96,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,80,114,105,109,97,114,121,32,87,65,83,77,32,108,111,97,100,32,102,97,105,108,101,100,32,102,114,111,109,32,36,123,116,104,105,115,46,95,119,97,115,109,85,82,76,125,46,32,69,114,114,111,114,58,32,36,123,105,110,105,116,105,97,108,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,65,116,116,101,109,112,116,105,110,103,32,116,111,32,108,111,97,100,32,87,65,83,77,32,102,114,111,109,32,98,97,99,107,117,112,32,85,82,76,58,32,36,123,98,97,99,107,117,112,85,114,108,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,119,97,105,116,32,116,104,105,115,46,95,116,114,121,76,111,97,100,40,98,97,99,107,117,112,85,114,108,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,97,99,107,117,112,69,114,114,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,96,80,114,105,109,97,114,121,32,87,65,83,77,32,85,82,76,32,102,97,105,108,101,100,58,32,36,123,105,110,105,116,105,97,108,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,96,66,97,99,107,117,112,32,87,65,83,77,32,85,82,76,32,102,97,105,108,101,100,58,32,36,123,98,97,99,107,117,112,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,34,87,65,83,77,32,108,111,97,100,105,110,103,32,102,97,105,108,101,100,32,102,114,111,109,32,97,108,108,32,115,111,117,114,99,101,115,46,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,80,117,98,108,105,99,32,109,101,116,104,111,100,32,116,111,32,108,111,97,100,32,116,104,101,32,87,101,98,65,115,115,101,109,98,108,121,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,32,85,116,105,108,105,122,101,115,32,97,32,112,114,105,109,97,114,121,32,97,110,100,32,98,97,99,107,117,112,32,85,82,76,32,102,111,114,32,114,111,98,117,115,116,110,101,115,115,46,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,80,114,111,109,105,115,101,60,77,111,100,117,108,101,62,32,45,32,65,32,112,114,111,109,105,115,101,32,116,104,97,116,32,114,101,115,111,108,118,101,115,32,116,111,32,116,104,101,32,108,111,97,100,101,100,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,97,115,121,110,99,32,108,111,97,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,108,111,97,100,87,105,116,104,66,97,99,107,117,112,40,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,83,101,116,115,32,97,32,110,101,119,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,32,97,110,100,32,105,110,118,97,108,105,100,97,116,101,115,32,116,104,101,32,99,117,114,114,101,110,116,32,109,111,100,117,108,101,32,112,114,111,109,105,115,101,46,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,114,105,110,103,32,45,32,32,84,104,101,32,110,101,119,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,32,123,10,32,32,32,32,32,32,105,102,32,40,117,114,108,32,61,61,61,32,116,104,105,115,46,95,119,97,115,109,85,82,76,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,119,97,115,109,85,82,76,32,61,32,117,114,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,32,61,32,110,117,108,108,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,47,47,32,101,115,108,105,110,116,45,100,105,115,97,98,108,101,45,110,101,120,116,45,108,105,110,101,32,64,116,121,112,101,115,99,114,105,112,116,45,101,115,108,105,110,116,47,110,97,109,105,110,103,45,99,111,110,118,101,110,116,105,111,110,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,44,32,34,95,77,111,100,117,108,101,80,114,111,109,105,115,101,34,44,32,110,117,108,108,41,59,10,32,32,47,47,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,44,32,99,111,110,115,116,114,117,99,116,101,100,32,117,115,105,110,103,32,112,97,99,107,97,103,101,32,105,110,102,111,114,109,97,116,105,111,110,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,44,32,34,95,119,97,115,109,85,82,76,34,44,32,96,104,116,116,112,115,58,47,47,99,100,110,46,106,115,100,101,108,105,118,114,46,110,101,116,47,110,112,109,47,36,123,80,65,67,75,65,71,69,95,78,65,77,69,125,64,36,123,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,125,47,100,105,115,116,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,119,97,115,109,96,41,59,10,10,32,32,47,47,32,115,114,99,47,101,118,101,110,116,45,109,97,110,97,103,101,114,46,116,115,10,32,32,118,97,114,32,69,118,101,110,116,77,97,110,97,103,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,32,32,32,32,125,10,32,32,32,32,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,108,101,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,116,121,112,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,108,105,115,116,101,110,101,114,115,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,32,61,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,83,101,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,115,101,116,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,115,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,97,100,100,40,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,116,121,112,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,108,105,115,116,101,110,101,114,115,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,115,105,122,101,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,116,121,112,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,116,121,112,101,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,100,105,115,112,97,116,99,104,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,101,118,101,110,116,46,116,121,112,101,41,59,10,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,63,46,102,111,114,69,97,99,104,40,40,108,105,115,116,101,110,101,114,41,32,61,62,32,108,105,115,116,101,110,101,114,40,101,118,101,110,116,41,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,65,108,108,69,118,101,110,116,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,99,108,101,97,114,40,41,59,10,32,32,32,32,125,10,32,32,125,59,10,10,32,32,47,47,32,115,114,99,47,111,102,102,115,99,114,101,101,110,45,111,98,115,101,114,118,101,114,46,116,115,10,32,32,118,97,114,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,115,116,97,116,105,99,32,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,67,97,108,108,98,97,99,107,32,61,32,40,101,110,116,114,105,101,115,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,101,110,116,114,105,101,115,46,102,111,114,69,97,99,104,40,40,101,110,116,114,121,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,110,116,114,121,46,105,115,73,110,116,101,114,115,101,99,116,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,101,119,32,73,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,40,105,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,67,97,108,108,98,97,99,107,44,32,123,10,32,32,32,32,32,32,32,32,116,104,114,101,115,104,111,108,100,58,32,48,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,111,98,115,101,114,118,101,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,104,97,115,40,99,97,110,118,97,115,41,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,100,101,108,101,116,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,105,122,101,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,100,105,115,99,111,110,110,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,10,32,32,47,47,32,115,114,99,47,114,101,115,105,122,101,45,111,98,115,101,114,118,101,114,46,116,115,10,32,32,118,97,114,32,82,69,83,73,90,69,95,68,69,66,79,85,78,67,69,95,84,73,77,69,32,61,32,49,48,48,59,10,32,32,118,97,114,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,115,116,97,116,105,99,32,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,105,122,101,72,97,110,100,108,101,114,32,61,32,40,101,110,116,114,105,101,115,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,101,110,116,114,105,101,115,46,102,111,114,69,97,99,104,40,40,101,110,116,114,121,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,101,108,101,109,101,110,116,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,101,108,101,109,101,110,116,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,116,105,109,101,111,117,116,93,32,61,32,101,108,101,109,101,110,116,59,10,32,32,32,32,32,32,32,32,32,32,99,108,101,97,114,84,105,109,101,111,117,116,40,116,105,109,101,111,117,116,41,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,110,101,119,84,105,109,101,111,117,116,32,61,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,82,69,83,73,90,69,95,68,69,66,79,85,78,67,69,95,84,73,77,69,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,44,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,110,101,119,84,105,109,101,111,117,116,93,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,101,119,32,82,101,115,105,122,101,79,98,115,101,114,118,101,114,40,114,101,115,105,122,101,72,97,110,100,108,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,111,98,115,101,114,118,101,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,104,97,115,40,99,97,110,118,97,115,41,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,99,97,110,118,97,115,44,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,48,93,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,101,108,101,109,101,110,116,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,101,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,116,105,109,101,111,117,116,73,100,32,61,32,101,108,101,109,101,110,116,91,49,93,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,105,109,101,111,117,116,73,100,41,32,99,108,101,97,114,84,105,109,101,111,117,116,40,116,105,109,101,111,117,116,73,100,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,100,101,108,101,116,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,105,122,101,32,38,38,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,46,100,105,115,99,111,110,110,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,10,32,32,47,47,32,115,114,99,47,117,116,105,108,115,46,116,115,10,32,32,102,117,110,99,116,105,111,110,32,105,115,72,101,120,67,111,108,111,114,40,99,111,108,111,114,41,32,123,10,32,32,32,32,114,101,116,117,114,110,32,47,94,35,40,91,92,100,97,45,102,93,123,54,125,124,91,92,100,97,45,102,93,123,56,125,41,36,47,105,117,46,116,101,115,116,40,99,111,108,111,114,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,104,101,120,83,116,114,105,110,103,84,111,82,71,66,65,73,110,116,40,99,111,108,111,114,72,101,120,41,32,123,10,32,32,32,32,105,102,32,40,33,105,115,72,101,120,67,111,108,111,114,40,99,111,108,111,114,72,101,120,41,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,125,10,32,32,32,32,108,101,116,32,104,101,120,32,61,32,99,111,108,111,114,72,101,120,46,114,101,112,108,97,99,101,40,34,35,34,44,32,34,34,41,59,10,32,32,32,32,104,101,120,32,61,32,104,101,120,46,108,101,110,103,116,104,32,61,61,61,32,54,32,63,32,96,36,123,104,101,120,125,102,102,96,32,58,32,104,101,120,59,10,32,32,32,32,114,101,116,117,114,110,32,112,97,114,115,101,73,110,116,40,104,101,120,44,32,49,54,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,68,111,116,76,111,116,116,105,101,40,102,105,108,101,68,97,116,97,41,32,123,10,32,32,32,32,105,102,32,40,102,105,108,101,68,97,116,97,46,98,121,116,101,76,101,110,103,116,104,32,60,32,52,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,99,111,110,115,116,32,102,105,108,101,83,105,103,110,97,116,117,114,101,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,102,105,108,101,68,97,116,97,46,115,108,105,99,101,40,48,44,32,90,73,80,95,83,73,71,78,65,84,85,82,69,46,98,121,116,101,76,101,110,103,116,104,41,41,59,10,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,90,73,80,95,83,73,71,78,65,84,85,82,69,46,108,101,110,103,116,104,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,105,102,32,40,90,73,80,95,83,73,71,78,65,84,85,82,69,91,105,93,32,33,61,61,32,102,105,108,101,83,105,103,110,97,116,117,114,101,91,105,93,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,106,115,111,110,41,32,123,10,32,32,32,32,114,101,116,117,114,110,32,76,79,84,84,73,69,95,74,83,79,78,95,77,65,78,68,65,84,79,82,89,95,70,73,69,76,68,83,46,101,118,101,114,121,40,40,102,105,101,108,100,41,32,61,62,32,79,98,106,101,99,116,46,112,114,111,116,111,116,121,112,101,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,46,99,97,108,108,40,106,115,111,110,44,32,102,105,101,108,100,41,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,76,111,116,116,105,101,40,102,105,108,101,68,97,116,97,41,32,123,10,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,102,105,108,101,68,97,116,97,32,61,61,61,32,34,115,116,114,105,110,103,34,41,32,123,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,74,83,79,78,46,112,97,114,115,101,40,102,105,108,101,68,97,116,97,41,41,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,95,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,102,105,108,101,68,97,116,97,41,59,10,32,32,32,32,125,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,32,123,10,32,32,32,32,99,111,110,115,116,32,100,112,114,32,61,32,73,83,95,66,82,79,87,83,69,82,32,63,32,119,105,110,100,111,119,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,58,32,49,59,10,32,32,32,32,114,101,116,117,114,110,32,49,32,43,32,40,100,112,114,32,45,32,49,41,32,42,32,68,69,70,65,85,76,84,95,68,80,82,95,70,65,67,84,79,82,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,101,108,101,109,101,110,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,99,116,32,61,32,101,108,101,109,101,110,116,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,99,111,110,115,116,32,118,105,101,119,112,111,114,116,72,101,105,103,104,116,32,61,32,119,105,110,100,111,119,46,105,110,110,101,114,72,101,105,103,104,116,32,124,124,32,100,111,99,117,109,101,110,116,46,100,111,99,117,109,101,110,116,69,108,101,109,101,110,116,46,99,108,105,101,110,116,72,101,105,103,104,116,59,10,32,32,32,32,99,111,110,115,116,32,118,105,101,119,112,111,114,116,87,105,100,116,104,32,61,32,119,105,110,100,111,119,46,105,110,110,101,114,87,105,100,116,104,32,124,124,32,100,111,99,117,109,101,110,116,46,100,111,99,117,109,101,110,116,69,108,101,109,101,110,116,46,99,108,105,101,110,116,87,105,100,116,104,59,10,32,32,32,32,114,101,116,117,114,110,32,33,40,114,101,99,116,46,98,111,116,116,111,109,32,60,32,48,32,124,124,32,114,101,99,116,46,116,111,112,32,62,32,118,105,101,119,112,111,114,116,72,101,105,103,104,116,32,124,124,32,114,101,99,116,46,114,105,103,104,116,32,60,32,48,32,124,124,32,114,101,99,116,46,108,101,102,116,32,62,32,118,105,101,119,112,111,114,116,87,105,100,116,104,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,99,97,110,118,97,115,32,61,32,101,118,101,110,116,46,116,97,114,103,101,116,59,10,32,32,32,32,105,102,32,40,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,99,116,32,61,32,99,97,110,118,97,115,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,32,32,105,102,32,40,114,101,99,116,46,119,105,100,116,104,32,61,61,61,32,48,32,124,124,32,114,101,99,116,46,104,101,105,103,104,116,32,61,61,61,32,48,32,124,124,32,99,97,110,118,97,115,46,119,105,100,116,104,32,61,61,61,32,48,32,124,124,32,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,115,99,97,108,101,88,32,61,32,99,97,110,118,97,115,46,119,105,100,116,104,32,47,32,114,101,99,116,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,99,97,108,101,89,32,61,32,99,97,110,118,97,115,46,104,101,105,103,104,116,32,47,32,114,101,99,116,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,40,101,118,101,110,116,46,99,108,105,101,110,116,88,32,45,32,114,101,99,116,46,108,101,102,116,41,32,42,32,115,99,97,108,101,88,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,40,101,118,101,110,116,46,99,108,105,101,110,116,89,32,45,32,114,101,99,116,46,116,111,112,41,32,42,32,115,99,97,108,101,89,59,10,32,32,32,32,32,32,105,102,32,40,33,78,117,109,98,101,114,46,105,115,70,105,110,105,116,101,40,120,41,32,124,124,32,33,78,117,109,98,101,114,46,105,115,70,105,110,105,116,101,40,121,41,32,124,124,32,78,117,109,98,101,114,46,105,115,78,97,78,40,120,41,32,124,124,32,78,117,109,98,101,114,46,105,115,78,97,78,40,121,41,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,32,120,44,32,121,32,125,59,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,104,97,110,100,108,101,79,112,101,110,85,114,108,40,109,101,115,115,97,103,101,41,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,110,116,101,110,116,32,61,32,109,101,115,115,97,103,101,46,114,101,112,108,97,99,101,40,34,79,112,101,110,85,114,108,58,32,34,44,32,34,34,41,59,10,32,32,32,32,99,111,110,115,116,32,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,32,61,32,99,111,110,116,101,110,116,46,105,110,100,101,120,79,102,40,34,32,124,32,84,97,114,103,101,116,58,32,34,41,59,10,32,32,32,32,108,101,116,32,117,114,108,84,111,79,112,101,110,59,10,32,32,32,32,108,101,116,32,116,97,114,103,101,116,59,10,32,32,32,32,105,102,32,40,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,32,61,61,61,32,45,49,41,32,123,10,32,32,32,32,32,32,117,114,108,84,111,79,112,101,110,32,61,32,99,111,110,116,101,110,116,59,10,32,32,32,32,32,32,116,97,114,103,101,116,32,61,32,34,95,98,108,97,110,107,34,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,117,114,108,84,111,79,112,101,110,32,61,32,99,111,110,116,101,110,116,46,115,117,98,115,116,114,105,110,103,40,48,44,32,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,41,59,10,32,32,32,32,32,32,116,97,114,103,101,116,32,61,32,99,111,110,116,101,110,116,46,115,117,98,115,116,114,105,110,103,40,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,32,43,32,34,32,124,32,84,97,114,103,101,116,58,32,34,46,108,101,110,103,116,104,41,59,10,32,32,32,32,125,10,32,32,32,32,119,105,110,100,111,119,46,111,112,101,110,40,117,114,108,84,111,79,112,101,110,44,32,116,97,114,103,101,116,41,59,10,32,32,125,10,10,32,32,47,47,32,115,114,99,47,100,111,116,108,111,116,116,105,101,46,116,115,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,32,61,32,40,109,111,100,101,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,114,101,118,101,114,115,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,82,101,118,101,114,115,101,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,98,111,117,110,99,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,66,111,117,110,99,101,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,114,101,118,101,114,115,101,45,98,111,117,110,99,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,82,101,118,101,114,115,101,66,111,117,110,99,101,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,70,111,114,119,97,114,100,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,70,105,116,32,61,32,40,102,105,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,102,105,116,32,61,61,61,32,34,99,111,110,116,97,105,110,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,67,111,110,116,97,105,110,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,99,111,118,101,114,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,67,111,118,101,114,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,108,108,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,108,108,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,116,45,104,101,105,103,104,116,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,116,72,101,105,103,104,116,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,116,45,119,105,100,116,104,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,116,87,105,100,116,104,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,78,111,110,101,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,65,108,105,103,110,32,61,32,40,97,108,105,103,110,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,114,101,65,108,105,103,110,32,61,32,110,101,119,32,109,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,99,111,114,101,65,108,105,103,110,46,112,117,115,104,95,98,97,99,107,40,97,108,105,103,110,91,48,93,41,59,10,32,32,32,32,99,111,114,101,65,108,105,103,110,46,112,117,115,104,95,98,97,99,107,40,97,108,105,103,110,91,49,93,41,59,10,32,32,32,32,114,101,116,117,114,110,32,99,111,114,101,65,108,105,103,110,59,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,32,61,32,40,115,101,103,109,101,110,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,114,101,115,101,103,109,101,110,116,32,61,32,110,101,119,32,109,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,105,102,32,40,115,101,103,109,101,110,116,46,108,101,110,103,116,104,32,33,61,61,32,50,41,32,114,101,116,117,114,110,32,99,111,114,101,115,101,103,109,101,110,116,59,10,32,32,32,32,99,111,114,101,115,101,103,109,101,110,116,46,112,117,115,104,95,98,97,99,107,40,115,101,103,109,101,110,116,91,48,93,41,59,10,32,32,32,32,99,111,114,101,115,101,103,109,101,110,116,46,112,117,115,104,95,98,97,99,107,40,115,101,103,109,101,110,116,91,49,93,41,59,10,32,32,32,32,114,101,116,117,114,110,32,99,111,114,101,115,101,103,109,101,110,116,59,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,32,61,32,40,108,97,121,111,117,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,33,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,99,114,101,97,116,101,68,101,102,97,117,108,116,76,97,121,111,117,116,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,97,108,105,103,110,58,32,99,114,101,97,116,101,67,111,114,101,65,108,105,103,110,40,108,97,121,111,117,116,46,97,108,105,103,110,32,63,63,32,91,48,46,53,44,32,48,46,53,93,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,102,105,116,58,32,99,114,101,97,116,101,67,111,114,101,70,105,116,40,108,97,121,111,117,116,46,102,105,116,32,63,63,32,34,99,111,110,116,97,105,110,34,44,32,109,111,100,117,108,101,41,10,32,32,32,32,125,59,10,32,32,125,59,10,32,32,118,97,114,32,95,68,111,116,76,111,116,116,105,101,32,61,32,99,108,97,115,115,32,95,68,111,116,76,111,116,116,105,101,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,99,97,110,118,97,115,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,99,111,110,116,101,120,116,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,101,118,101,110,116,77,97,110,97,103,101,114,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,102,114,97,109,101,77,97,110,97,103,101,114,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,100,111,116,76,111,116,116,105,101,67,111,114,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,34,44,32,34,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,34,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,114,101,110,100,101,114,67,111,110,102,105,103,34,44,32,123,125,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,105,115,70,114,111,122,101,110,34,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,47,47,32,66,111,117,110,100,32,101,118,101,110,116,32,108,105,115,116,101,110,101,114,115,32,102,111,114,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,67,108,105,99,107,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,32,61,32,99,111,110,102,105,103,46,99,97,110,118,97,115,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,32,61,32,110,101,119,32,69,118,101,110,116,77,97,110,97,103,101,114,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,32,61,32,110,101,119,32,65,110,105,109,97,116,105,111,110,70,114,97,109,101,77,97,110,97,103,101,114,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,123,10,32,32,32,32,32,32,32,32,46,46,46,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,58,32,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,63,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,44,10,32,32,32,32,32,32,32,32,47,47,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,105,115,32,116,114,117,101,32,98,121,32,100,101,102,97,117,108,116,32,116,111,32,112,114,101,118,101,110,116,32,117,110,110,101,99,101,115,115,97,114,121,32,114,101,110,100,101,114,105,110,103,32,119,104,101,110,32,116,104,101,32,99,97,110,118,97,115,32,105,115,32,111,102,102,115,99,114,101,101,110,10,32,32,32,32,32,32,32,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,58,32,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,63,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,63,63,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,46,108,111,97,100,40,41,46,116,104,101,110,40,40,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,32,109,111,100,117,108,101,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,32,61,32,110,101,119,32,109,111,100,117,108,101,46,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,76,111,97,100,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,76,111,97,100,69,114,114,111,114,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,34,102,97,105,108,101,100,32,116,111,32,108,111,97,100,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,80,108,97,121,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,112,108,97,121,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,80,97,117,115,101,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,112,97,117,115,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,111,112,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,115,116,111,112,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,76,111,111,112,40,40,108,111,111,112,67,111,117,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,111,112,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,67,111,109,112,108,101,116,101,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,99,111,109,112,108,101,116,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,70,114,97,109,101,40,40,99,117,114,114,101,110,116,70,114,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,82,101,110,100,101,114,40,40,99,117,114,114,101,110,116,70,114,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,114,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,32,110,101,119,32,109,111,100,117,108,101,46,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,40,123,10,32,32,32,32,32,32,32,32,32,32,97,110,105,109,97,116,105,111,110,73,100,58,32,99,111,110,102,105,103,46,97,110,105,109,97,116,105,111,110,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,116,104,101,109,101,73,100,58,32,99,111,110,102,105,103,46,116,104,101,109,101,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,47,47,32,70,73,88,77,69,58,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,105,100,32,105,115,32,110,111,116,32,117,115,101,102,117,108,44,32,115,105,110,99,101,32,116,104,101,32,108,111,97,100,32,97,110,100,32,115,116,97,114,116,32,111,102,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,114,101,113,117,105,114,101,32,116,111,32,98,101,32,99,111,110,116,114,111,108,108,101,100,32,98,121,32,116,104,101,32,102,114,97,109,101,119,111,114,107,10,32,32,32,32,32,32,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,99,111,110,102,105,103,46,97,117,116,111,112,108,97,121,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,48,44,10,32,32,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,99,111,110,102,105,103,46,108,111,111,112,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,99,111,110,102,105,103,46,109,111,100,101,32,63,63,32,34,102,111,114,119,97,114,100,34,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,99,111,110,102,105,103,46,115,101,103,109,101,110,116,32,63,63,32,91,93,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,99,111,110,102,105,103,46,115,112,101,101,100,32,63,63,32,49,44,10,32,32,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,99,111,110,102,105,103,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,63,63,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,99,111,110,102,105,103,46,109,97,114,107,101,114,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,99,111,110,102,105,103,46,108,97,121,111,117,116,44,32,109,111,100,117,108,101,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,61,32,99,111,110,102,105,103,46,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,63,63,32,34,34,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,32,61,32,99,111,110,102,105,103,46,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,32,63,63,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,117,98,115,99,114,105,98,101,40,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,114,101,97,100,121,34,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,100,97,116,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,99,111,110,102,105,103,46,100,97,116,97,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,99,111,110,102,105,103,46,115,114,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,83,114,99,40,99,111,110,102,105,103,46,115,114,99,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,46,99,97,116,99,104,40,40,101,114,114,111,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,119,97,115,109,32,109,111,100,117,108,101,58,32,36,123,101,114,114,111,114,125,96,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,109,101,115,115,97,103,101,41,32,123,10,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,109,101,115,115,97,103,101,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,109,101,115,115,97,103,101,41,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,97,115,121,110,99,32,95,102,101,116,99,104,68,97,116,97,40,115,114,99,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,97,119,97,105,116,32,102,101,116,99,104,40,115,114,99,41,59,10,32,32,32,32,32,32,105,102,32,40,33,114,101,115,112,111,110,115,101,46,111,107,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,102,101,116,99,104,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,32,102,114,111,109,32,85,82,76,58,32,36,123,115,114,99,125,46,32,36,123,114,101,115,112,111,110,115,101,46,115,116,97,116,117,115,125,58,32,36,123,114,101,115,112,111,110,115,101,46,115,116,97,116,117,115,84,101,120,116,125,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,100,97,116,97,32,61,32,97,119,97,105,116,32,114,101,115,112,111,110,115,101,46,97,114,114,97,121,66,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,105,115,68,111,116,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,97,116,97,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,41,46,100,101,99,111,100,101,40,100,97,116,97,41,59,10,32,32,32,32,125,10,32,32,32,32,95,108,111,97,100,70,114,111,109,68,97,116,97,40,100,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,108,101,116,32,108,111,97,100,101,100,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,100,97,116,97,32,61,61,61,32,34,115,116,114,105,110,103,34,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,76,111,116,116,105,101,32,74,83,79,78,32,115,116,114,105,110,103,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,115,116,114,105,110,103,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,76,111,116,116,105,101,32,74,83,79,78,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,68,97,116,97,40,100,97,116,97,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,100,97,116,97,32,105,110,115,116,97,110,99,101,111,102,32,65,114,114,97,121,66,117,102,102,101,114,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,68,111,116,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,100,111,116,76,111,116,116,105,101,32,65,114,114,97,121,66,117,102,102,101,114,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,65,114,114,97,121,66,117,102,102,101,114,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,100,111,116,76,111,116,116,105,101,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,68,111,116,76,111,116,116,105,101,68,97,116,97,40,100,97,116,97,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,116,121,112,101,111,102,32,100,97,116,97,32,61,61,61,32,34,111,98,106,101,99,116,34,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,76,111,116,116,105,101,32,74,83,79,78,32,111,98,106,101,99,116,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,111,98,106,101,99,116,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,76,111,116,116,105,101,32,74,83,79,78,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,68,97,116,97,40,74,83,79,78,46,115,116,114,105,110,103,105,102,121,40,100,97,116,97,41,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,96,85,110,115,117,112,112,111,114,116,101,100,32,100,97,116,97,32,116,121,112,101,32,102,111,114,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,46,32,69,120,112,101,99,116,101,100,58,32,10,32,32,32,32,32,32,32,32,32,32,45,32,115,116,114,105,110,103,32,40,76,111,116,116,105,101,32,74,83,79,78,41,44,10,32,32,32,32,32,32,32,32,32,32,45,32,65,114,114,97,121,66,117,102,102,101,114,32,40,100,111,116,76,111,116,116,105,101,41,44,10,32,32,32,32,32,32,32,32,32,32,45,32,111,98,106,101,99,116,32,40,76,111,116,116,105,101,32,74,83,79,78,41,46,32,10,32,32,32,32,32,32,32,32,32,32,82,101,99,101,105,118,101,100,58,32,36,123,116,121,112,101,111,102,32,100,97,116,97,125,96,10,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,115,109,76,111,97,100,101,100,32,61,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,115,109,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,115,109,83,116,97,114,116,101,100,32,61,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,115,109,83,116,97,114,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,116,104,105,115,46,95,99,97,110,118,97,115,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,97,117,116,111,82,101,115,105,122,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,108,111,97,100,70,114,111,109,83,114,99,40,115,114,99,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,102,101,116,99,104,68,97,116,97,40,115,114,99,41,46,116,104,101,110,40,40,100,97,116,97,41,32,61,62,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,100,97,116,97,41,41,46,99,97,116,99,104,40,40,101,114,114,111,114,41,32,61,62,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,32,102,114,111,109,32,85,82,76,58,32,36,123,115,114,99,125,46,32,36,123,101,114,114,111,114,125,96,41,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,98,117,102,102,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,98,117,102,102,101,114,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,99,116,105,118,101,84,104,101,109,101,73,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,99,116,105,118,101,84,104,101,109,101,73,100,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,97,121,111,117,116,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,97,121,111,117,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,108,97,121,111,117,116,59,10,32,32,32,32,32,32,105,102,32,40,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,32,32,97,108,105,103,110,58,32,91,108,97,121,111,117,116,46,97,108,105,103,110,46,103,101,116,40,48,41,44,32,108,97,121,111,117,116,46,97,108,105,103,110,46,103,101,116,40,49,41,93,44,10,32,32,32,32,32,32,32,32,32,32,102,105,116,58,32,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,108,97,121,111,117,116,46,102,105,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,67,111,110,116,97,105,110,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,110,116,97,105,110,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,67,111,118,101,114,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,118,101,114,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,70,105,108,108,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,108,108,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,70,105,116,72,101,105,103,104,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,116,45,104,101,105,103,104,116,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,70,105,116,87,105,100,116,104,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,116,45,119,105,100,116,104,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,78,111,110,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,110,111,110,101,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,110,116,97,105,110,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,40,41,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,97,114,107,101,114,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,97,114,107,101,114,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,97,110,105,102,101,115,116,40,41,32,123,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,110,105,102,101,115,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,109,97,110,105,102,101,115,116,83,116,114,105,110,103,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,33,109,97,110,105,102,101,115,116,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,110,105,102,101,115,116,74,115,111,110,32,61,32,74,83,79,78,46,112,97,114,115,101,40,109,97,110,105,102,101,115,116,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,79,98,106,101,99,116,46,107,101,121,115,40,109,97,110,105,102,101,115,116,74,115,111,110,41,46,108,101,110,103,116,104,32,61,61,61,32,48,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,97,110,105,102,101,115,116,74,115,111,110,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,95,101,114,114,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,114,101,110,100,101,114,67,111,110,102,105,103,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,101,103,109,101,110,116,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,101,103,109,101,110,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,115,101,103,109,101,110,116,59,10,32,32,32,32,32,32,105,102,32,40,115,101,103,109,101,110,116,32,38,38,32,115,101,103,109,101,110,116,46,115,105,122,101,40,41,32,61,61,61,32,50,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,115,101,103,109,101,110,116,46,103,101,116,40,48,41,44,32,115,101,103,109,101,110,116,46,103,101,116,40,49,41,93,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,111,111,112,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,108,111,111,112,65,110,105,109,97,116,105,111,110,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,111,100,101,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,101,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,109,111,100,101,59,10,32,32,32,32,32,32,105,102,32,40,109,111,100,101,32,61,61,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,77,111,100,101,46,82,101,118,101,114,115,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,114,101,118,101,114,115,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,77,111,100,101,46,66,111,117,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,98,111,117,110,99,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,77,111,100,101,46,82,101,118,101,114,115,101,66,111,117,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,114,101,118,101,114,115,101,45,98,111,117,110,99,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,111,114,119,97,114,100,34,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,70,114,111,122,101,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,117,116,111,112,108,97,121,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,97,117,116,111,112,108,97,121,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,112,101,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,115,112,101,101,100,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,82,101,97,100,121,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,33,61,61,32,110,117,108,108,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,76,111,97,100,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,76,111,97,100,101,100,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,80,108,97,121,105,110,103,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,80,108,97,121,105,110,103,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,80,97,117,115,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,80,97,117,115,101,100,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,83,116,111,112,112,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,83,116,111,112,112,101,100,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,99,117,114,114,101,110,116,70,114,97,109,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,77,97,116,104,46,114,111,117,110,100,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,117,114,114,101,110,116,70,114,97,109,101,40,41,32,42,32,49,48,48,41,32,47,32,49,48,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,111,111,112,67,111,117,110,116,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,108,111,111,112,67,111,117,110,116,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,116,111,116,97,108,70,114,97,109,101,115,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,116,111,116,97,108,70,114,97,109,101,115,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,100,117,114,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,100,117,114,97,116,105,111,110,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,99,97,110,118,97,115,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,99,97,110,118,97,115,59,10,32,32,32,32,125,10,32,32,32,32,108,111,97,100,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,97,110,105,109,97,116,105,111,110,73,100,58,32,99,111,110,102,105,103,46,97,110,105,109,97,116,105,111,110,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,116,104,101,109,101,73,100,58,32,99,111,110,102,105,103,46,116,104,101,109,101,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,99,111,110,102,105,103,46,97,117,116,111,112,108,97,121,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,48,44,10,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,99,111,110,102,105,103,46,108,111,111,112,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,99,111,110,102,105,103,46,109,111,100,101,32,63,63,32,34,102,111,114,119,97,114,100,34,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,99,111,110,102,105,103,46,115,101,103,109,101,110,116,32,63,63,32,91,93,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,99,111,110,102,105,103,46,115,112,101,101,100,32,63,63,32,49,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,99,111,110,102,105,103,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,63,63,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,99,111,110,102,105,103,46,109,97,114,107,101,114,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,99,111,110,102,105,103,46,108,97,121,111,117,116,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,100,97,116,97,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,99,111,110,102,105,103,46,100,97,116,97,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,99,111,110,102,105,103,46,115,114,99,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,83,114,99,40,99,111,110,102,105,103,46,115,114,99,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,63,63,32,34,34,41,59,10,32,32,32,32,125,10,32,32,32,32,95,100,114,97,119,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,99,111,110,116,101,120,116,32,38,38,32,34,103,101,116,67,111,110,116,101,120,116,34,32,105,110,32,116,104,105,115,46,95,99,97,110,118,97,115,32,38,38,32,116,121,112,101,111,102,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,67,111,110,116,101,120,116,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,67,111,110,116,101,120,116,40,34,50,100,34,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,99,111,110,116,101,120,116,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,117,102,102,101,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,98,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,101,120,112,101,99,116,101,100,76,101,110,103,116,104,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,32,42,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,32,42,32,66,89,84,69,83,95,80,69,82,95,80,73,88,69,76,59,10,32,32,32,32,32,32,32,32,105,102,32,40,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,32,33,61,61,32,101,120,112,101,99,116,101,100,76,101,110,103,116,104,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,66,117,102,102,101,114,32,115,105,122,101,32,109,105,115,109,97,116,99,104,58,32,103,111,116,32,36,123,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,125,44,32,101,120,112,101,99,116,101,100,32,36,123,101,120,112,101,99,116,101,100,76,101,110,103,116,104,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,101,116,32,105,109,97,103,101,68,97,116,97,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,99,108,97,109,112,101,100,66,117,102,102,101,114,32,61,32,110,101,119,32,85,105,110,116,56,67,108,97,109,112,101,100,65,114,114,97,121,40,98,117,102,102,101,114,44,32,48,44,32,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,73,109,97,103,101,68,97,116,97,32,61,61,61,32,34,117,110,100,101,102,105,110,101,100,34,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,32,61,32,116,104,105,115,46,95,99,111,110,116,101,120,116,46,99,114,101,97,116,101,73,109,97,103,101,68,97,116,97,40,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,46,100,97,116,97,46,115,101,116,40,99,108,97,109,112,101,100,66,117,102,102,101,114,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,32,61,32,110,101,119,32,73,109,97,103,101,68,97,116,97,40,99,108,97,109,112,101,100,66,117,102,102,101,114,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,46,112,117,116,73,109,97,103,101,68,97,116,97,40,105,109,97,103,101,68,97,116,97,44,32,48,44,32,48,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,33,61,61,32,110,117,108,108,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,61,61,32,110,117,108,108,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,38,38,32,33,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,38,38,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,32,124,124,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,76,111,111,112,46,98,105,110,100,40,116,104,105,115,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,97,110,105,109,97,116,105,111,110,76,111,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,32,38,38,32,33,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,97,100,118,97,110,99,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,116,105,99,107,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,97,100,118,97,110,99,101,100,32,124,124,32,47,47,32,70,73,88,77,69,58,32,84,104,105,115,32,105,115,32,97,32,119,111,114,107,97,114,111,117,110,100,32,116,111,32,102,105,120,32,116,104,101,32,83,101,116,70,114,97,109,101,32,97,99,116,105,111,110,32,105,110,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,76,111,111,112,46,98,105,110,100,40,116,104,105,115,41,41,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,114,114,111,114,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,34,69,114,114,111,114,32,105,110,32,97,110,105,109,97,116,105,111,110,32,102,114,97,109,101,58,34,44,32,101,114,114,111,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,114,101,110,100,101,114,69,114,114,111,114,34,44,32,101,114,114,111,114,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,101,114,114,111,114,32,105,110,115,116,97,110,99,101,111,102,32,87,101,98,65,115,115,101,109,98,108,121,46,82,117,110,116,105,109,101,69,114,114,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,100,101,115,116,114,111,121,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,112,108,97,121,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,33,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,112,108,97,121,105,110,103,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,112,108,97,121,40,41,59,10,32,32,32,32,32,32,105,102,32,40,112,108,97,121,105,110,103,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,32,38,38,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,38,38,32,33,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,116,104,105,115,46,95,99,97,110,118,97,115,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,112,97,117,115,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,112,97,117,115,101,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,111,107,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,111,112,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,105,102,32,40,111,107,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,70,114,97,109,101,40,102,114,97,109,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,85,112,100,97,116,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,101,107,40,102,114,97,109,101,41,59,10,32,32,32,32,32,32,105,102,32,40,102,114,97,109,101,85,112,100,97,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,114,101,110,100,101,114,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,112,101,101,100,40,115,112,101,101,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,108,111,114,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,115,116,121,108,101,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,99,111,108,111,114,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,104,101,120,83,116,114,105,110,103,84,111,82,71,66,65,73,110,116,40,99,111,108,111,114,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,99,111,108,111,114,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,76,111,111,112,40,108,111,111,112,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,108,111,111,112,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,100,101,115,116,114,111,121,40,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,117,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,100,101,115,116,114,111,121,34,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,114,101,109,111,118,101,65,108,108,69,118,101,110,116,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,125,10,32,32,32,32,102,114,101,101,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,102,114,101,101,122,101,34,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,117,110,102,114,101,101,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,33,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,117,110,102,114,101,101,122,101,34,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,115,105,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,100,112,114,32,61,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,119,105,110,100,111,119,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,49,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,123,32,104,101,105,103,104,116,58,32,99,108,105,101,110,116,72,101,105,103,104,116,44,32,119,105,100,116,104,58,32,99,108,105,101,110,116,87,105,100,116,104,32,125,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,99,108,105,101,110,116,72,101,105,103,104,116,32,33,61,61,32,48,32,38,38,32,99,108,105,101,110,116,87,105,100,116,104,32,33,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,99,108,105,101,110,116,87,105,100,116,104,32,42,32,100,112,114,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,99,108,105,101,110,116,72,101,105,103,104,116,32,42,32,100,112,114,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,105,122,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,115,105,122,101,40,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,105,102,32,40,114,101,115,105,122,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,101,103,109,101,110,116,40,115,116,97,114,116,70,114,97,109,101,44,32,101,110,100,70,114,97,109,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,91,115,116,97,114,116,70,114,97,109,101,44,32,101,110,100,70,114,97,109,101,93,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,77,111,100,101,40,109,111,100,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,109,111,100,101,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,44,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,44,32,46,46,46,114,101,115,116,67,111,110,102,105,103,32,125,32,61,32,99,111,110,102,105,103,59,10,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,46,46,46,114,101,115,116,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,47,47,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,105,115,32,97,32,115,112,101,99,105,97,108,32,99,97,115,101,44,32,105,116,32,115,104,111,117,108,100,32,98,101,32,115,101,116,32,116,111,32,116,104,101,32,100,101,102,97,117,108,116,32,118,97,108,117,101,32,105,102,32,105,116,39,115,32,110,111,116,32,112,114,111,118,105,100,101,100,10,32,32,32,32,32,32,32,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,58,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,44,10,32,32,32,32,32,32,32,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,58,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,63,63,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,97,117,116,111,82,101,115,105,122,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,116,104,105,115,46,95,99,97,110,118,97,115,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,105,115,70,114,111,122,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,32,61,61,61,32,97,110,105,109,97,116,105,111,110,73,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,77,97,114,107,101,114,40,109,97,114,107,101,114,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,109,97,114,107,101,114,115,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,115,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,109,97,114,107,101,114,115,40,41,59,10,32,32,32,32,32,32,105,102,32,40,109,97,114,107,101,114,115,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,109,97,114,107,101,114,115,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,109,97,114,107,101,114,115,46,103,101,116,40,105,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,115,117,108,116,46,112,117,115,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,109,97,114,107,101,114,46,110,97,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,105,109,101,58,32,109,97,114,107,101,114,46,116,105,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,100,117,114,97,116,105,111,110,58,32,109,97,114,107,101,114,46,100,117,114,97,116,105,111,110,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,115,117,108,116,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,76,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,101,109,101,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,101,109,101,76,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,114,101,115,101,116,84,104,101,109,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,82,101,115,101,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,115,101,116,84,104,101,109,101,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,101,109,101,82,101,115,101,116,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,101,109,101,82,101,115,101,116,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,76,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,101,109,101,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,101,109,101,76,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,108,111,116,115,40,115,108,111,116,115,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,83,108,111,116,115,40,115,108,111,116,115,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,76,97,121,111,117,116,40,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,108,97,121,111,117,116,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,32,123,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,46,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,97,114,116,32,97,32,116,119,101,101,110,32,97,110,105,109,97,116,105,111,110,32,98,101,116,119,101,101,110,32,116,119,111,32,102,114,97,109,101,32,118,97,108,117,101,115,32,119,105,116,104,32,99,117,115,116,111,109,32,101,97,115,105,110,103,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,102,114,97,109,101,32,45,32,83,116,97,114,116,105,110,103,32,102,114,97,109,101,32,118,97,108,117,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,100,117,114,97,116,105,111,110,32,45,32,68,117,114,97,116,105,111,110,32,111,102,32,116,104,101,32,116,119,101,101,110,32,105,110,32,115,101,99,111,110,100,115,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,119,101,101,110,32,119,97,115,32,115,116,97,114,116,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,116,119,101,101,110,40,102,114,97,109,101,44,32,100,117,114,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,32,61,32,91,48,44,32,48,44,32,49,44,32,49,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,86,101,99,116,111,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,118,97,108,32,111,102,32,101,97,115,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,101,97,115,105,110,103,86,101,99,116,111,114,46,112,117,115,104,95,98,97,99,107,40,118,97,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,116,119,101,101,110,40,102,114,97,109,101,44,32,100,117,114,97,116,105,111,110,44,32,101,97,115,105,110,103,86,101,99,116,111,114,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,97,114,116,32,97,32,116,119,101,101,110,32,97,110,105,109,97,116,105,111,110,32,116,111,32,97,32,115,112,101,99,105,102,105,99,32,109,97,114,107,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,109,97,114,107,101,114,32,45,32,84,104,101,32,109,97,114,107,101,114,32,110,97,109,101,32,116,111,32,116,119,101,101,110,32,116,111,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,119,101,101,110,32,119,97,115,32,115,116,97,114,116,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,116,119,101,101,110,84,111,77,97,114,107,101,114,40,109,97,114,107,101,114,44,32,100,117,114,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,32,61,32,91,48,44,32,48,44,32,49,44,32,49,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,86,101,99,116,111,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,118,97,108,32,111,102,32,101,97,115,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,101,97,115,105,110,103,86,101,99,116,111,114,46,112,117,115,104,95,98,97,99,107,40,118,97,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,116,119,101,101,110,84,111,77,97,114,107,101,114,40,109,97,114,107,101,114,44,32,100,117,114,97,116,105,111,110,44,32,101,97,115,105,110,103,86,101,99,116,111,114,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,46,103,101,116,40,48,41,32,63,63,32,48,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,46,103,101,116,40,49,41,32,63,63,32,48,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,119,105,100,116,104,44,10,32,32,32,32,32,32,32,32,104,101,105,103,104,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,79,114,105,101,110,116,101,100,32,66,111,117,110,100,105,110,103,32,66,111,120,32,40,79,66,66,41,32,112,111,105,110,116,115,32,111,102,32,97,32,108,97,121,101,114,32,98,121,32,105,116,115,32,110,97,109,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,108,97,121,101,114,78,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,108,97,121,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,65,110,32,97,114,114,97,121,32,111,102,32,56,32,110,117,109,98,101,114,115,32,114,101,112,114,101,115,101,110,116,105,110,103,32,52,32,112,111,105,110,116,115,32,40,120,44,121,41,32,111,102,32,116,104,101,32,79,66,66,32,105,110,32,99,108,111,99,107,119,105,115,101,32,111,114,100,101,114,32,115,116,97,114,116,105,110,103,32,102,114,111,109,32,116,111,112,45,108,101,102,116,10,32,32,32,32,32,42,32,32,32,32,32,32,32,32,32,32,91,120,48,44,32,121,48,44,32,120,49,44,32,121,49,44,32,120,50,44,32,121,50,44,32,120,51,44,32,121,51,93,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,64,101,120,97,109,112,108,101,10,32,32,32,32,32,42,32,96,96,96,116,121,112,101,115,99,114,105,112,116,10,32,32,32,32,32,42,32,47,47,32,68,114,97,119,32,97,32,112,111,108,121,103,111,110,32,97,114,111,117,110,100,32,116,104,101,32,108,97,121,101,114,32,39,76,97,121,101,114,32,49,39,10,32,32,32,32,32,42,32,100,111,116,76,111,116,116,105,101,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,39,114,101,110,100,101,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,32,42,32,32,32,99,111,110,115,116,32,111,98,98,80,111,105,110,116,115,32,61,32,100,111,116,76,111,116,116,105,101,46,103,101,116,76,97,121,101,114,66,111,117,110,100,105,110,103,66,111,120,40,39,76,97,121,101,114,32,49,39,41,59,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,32,32,105,102,32,40,111,98,98,80,111,105,110,116,115,41,32,123,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,98,101,103,105,110,80,97,116,104,40,41,59,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,109,111,118,101,84,111,40,111,98,98,80,111,105,110,116,115,91,48,93,44,32,111,98,98,80,111,105,110,116,115,91,49,93,41,59,32,47,47,32,70,105,114,115,116,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,108,105,110,101,84,111,40,111,98,98,80,111,105,110,116,115,91,50,93,44,32,111,98,98,80,111,105,110,116,115,91,51,93,41,59,32,47,47,32,83,101,99,111,110,100,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,108,105,110,101,84,111,40,111,98,98,80,111,105,110,116,115,91,52,93,44,32,111,98,98,80,111,105,110,116,115,91,53,93,41,59,32,47,47,32,84,104,105,114,100,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,108,105,110,101,84,111,40,111,98,98,80,111,105,110,116,115,91,54,93,44,32,111,98,98,80,111,105,110,116,115,91,55,93,41,59,32,47,47,32,70,111,117,114,116,104,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,99,108,111,115,101,80,97,116,104,40,41,59,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,115,116,114,111,107,101,40,41,59,10,32,32,32,32,32,42,32,32,32,125,10,32,32,32,32,32,42,32,125,41,59,10,32,32,32,32,32,42,32,96,96,96,10,32,32,32,32,32,42,47,10,32,32,32,32,103,101,116,76,97,121,101,114,66,111,117,110,100,105,110,103,66,111,120,40,108,97,121,101,114,78,97,109,101,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,98,111,117,110,100,115,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,103,101,116,76,97,121,101,114,66,111,117,110,100,115,40,108,97,121,101,114,78,97,109,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,98,111,117,110,100,115,41,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,105,102,32,40,98,111,117,110,100,115,46,115,105,122,101,40,41,32,33,61,61,32,56,41,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,105,110,116,115,32,61,32,91,93,59,10,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,56,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,112,111,105,110,116,115,46,112,117,115,104,40,98,111,117,110,100,115,46,103,101,116,40,105,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,112,111,105,110,116,115,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,116,114,97,110,115,102,111,114,109,84,104,101,109,101,84,111,76,111,116,116,105,101,83,108,111,116,115,40,116,104,101,109,101,44,32,115,108,111,116,115,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,116,114,97,110,115,102,111,114,109,84,104,101,109,101,84,111,76,111,116,116,105,101,83,108,111,116,115,40,116,104,101,109,101,44,32,115,108,111,116,115,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,47,32,35,114,101,103,105,111,110,32,83,116,97,116,101,32,77,97,99,104,105,110,101,10,32,32,32,32,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,67,97,108,108,98,97,99,107,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,97,114,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,111,112,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,67,117,115,116,111,109,69,118,101,110,116,40,40,101,118,101,110,116,78,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,34,44,32,101,118,101,110,116,78,97,109,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,40,40,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,32,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,40,40,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,32,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,40,40,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,32,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,73,110,112,117,116,70,105,114,101,100,40,40,105,110,112,117,116,78,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,34,44,32,105,110,112,117,116,78,97,109,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,84,114,97,110,115,105,116,105,111,110,40,40,102,114,111,109,83,116,97,116,101,44,32,116,111,83,116,97,116,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,34,44,32,102,114,111,109,83,116,97,116,101,44,32,116,111,83,116,97,116,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,97,116,101,69,110,116,101,114,101,100,40,40,115,116,97,116,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,34,44,32,115,116,97,116,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,97,116,101,69,120,105,116,40,40,115,116,97,116,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,34,44,32,115,116,97,116,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,69,114,114,111,114,40,40,101,114,114,111,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,34,44,32,101,114,114,111,114,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,109,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,67,97,108,108,98,97,99,107,83,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,115,109,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,46,115,101,116,79,110,77,101,115,115,97,103,101,40,40,109,101,115,115,97,103,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,109,101,115,115,97,103,101,46,115,116,97,114,116,115,87,105,116,104,40,34,79,112,101,110,85,114,108,58,32,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,104,97,110,100,108,101,79,112,101,110,85,114,108,40,109,101,115,115,97,103,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,34,44,32,109,101,115,115,97,103,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,117,98,115,99,114,105,98,101,40,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,83,117,98,115,99,114,105,98,101,40,115,109,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,76,111,97,100,32,97,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,98,121,32,73,68,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,45,32,84,104,101,32,73,68,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,116,111,32,108,111,97,100,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,108,111,97,100,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,76,111,97,100,32,97,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,102,114,111,109,32,100,97,116,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,32,45,32,84,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,100,97,116,97,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,108,111,97,100,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,59,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,99,111,110,102,105,103,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,99,111,110,102,105,103,32,45,32,84,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,99,111,110,102,105,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,67,111,110,102,105,103,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,32,61,32,99,111,110,102,105,103,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,97,114,116,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,115,116,97,114,116,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,114,101,79,112,101,110,85,114,108,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,99,114,101,97,116,101,68,101,102,97,117,108,116,79,112,101,110,85,114,108,80,111,108,105,99,121,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,111,112,101,110,85,114,108,80,111,108,105,99,121,32,61,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,46,111,112,101,110,85,114,108,80,111,108,105,99,121,59,10,32,32,32,32,32,32,32,32,105,102,32,40,111,112,101,110,85,114,108,80,111,108,105,99,121,32,38,38,32,116,121,112,101,111,102,32,111,112,101,110,85,114,108,80,111,108,105,99,121,46,114,101,113,117,105,114,101,85,115,101,114,73,110,116,101,114,97,99,116,105,111,110,32,61,61,61,32,34,98,111,111,108,101,97,110,34,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,114,101,79,112,101,110,85,114,108,46,114,101,113,117,105,114,101,85,115,101,114,73,110,116,101,114,97,99,116,105,111,110,32,61,32,111,112,101,110,85,114,108,80,111,108,105,99,121,46,114,101,113,117,105,114,101,85,115,101,114,73,110,116,101,114,97,99,116,105,111,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,111,112,101,110,85,114,108,80,111,108,105,99,121,63,46,119,104,105,116,101,108,105,115,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,114,101,79,112,101,110,85,114,108,46,119,104,105,116,101,108,105,115,116,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,83,116,114,105,110,103,40,41,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,117,114,108,32,111,102,32,111,112,101,110,85,114,108,80,111,108,105,99,121,46,119,104,105,116,101,108,105,115,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,114,101,79,112,101,110,85,114,108,46,119,104,105,116,101,108,105,115,116,46,112,117,115,104,95,98,97,99,107,40,117,114,108,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,114,116,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,99,111,114,101,79,112,101,110,85,114,108,41,59,10,32,32,32,32,32,32,105,102,32,40,115,116,97,114,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,115,116,97,114,116,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,111,112,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,115,116,111,112,112,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,111,112,112,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,41,59,10,32,32,32,32,32,32,105,102,32,40,115,116,111,112,112,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,115,116,111,112,112,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,117,115,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,117,115,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,97,116,117,115,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,117,115,40,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,101,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,101,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,67,117,114,114,101,110,116,83,116,97,116,101,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,67,117,114,114,101,110,116,83,116,97,116,101,40,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,97,99,116,105,118,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,73,68,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,97,99,116,105,118,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,73,68,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,65,99,116,105,118,101,73,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,99,116,105,118,101,83,116,97,116,101,77,97,99,104,105,110,101,73,100,40,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,79,118,101,114,114,105,100,101,32,116,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,101,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,32,45,32,84,104,101,32,115,116,97,116,101,32,116,111,32,111,118,101,114,114,105,100,101,32,116,111,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,105,109,109,101,100,105,97,116,101,32,45,32,87,104,101,116,104,101,114,32,116,111,32,105,109,109,101,100,105,97,116,101,108,121,32,116,114,97,110,115,105,116,105,111,110,32,116,111,32,116,104,101,32,115,116,97,116,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,111,118,101,114,114,105,100,101,32,119,97,115,32,115,117,99,99,101,115,115,102,117,108,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,83,116,97,116,101,40,115,116,97,116,101,44,32,105,109,109,101,100,105,97,116,101,32,61,32,102,97,108,115,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,67,117,114,114,101,110,116,83,116,97,116,101,40,115,116,97,116,101,44,32,105,109,109,101,100,105,97,116,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,115,112,101,99,105,102,105,99,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,98,121,32,73,68,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,45,32,84,104,101,32,73,68,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,116,111,32,103,101,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,100,97,116,97,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,103,101,116,83,116,97,116,101,77,97,99,104,105,110,101,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,108,105,115,116,32,111,102,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,108,105,115,116,101,110,101,114,115,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,65,114,114,97,121,32,111,102,32,108,105,115,116,101,110,101,114,32,110,97,109,101,115,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,70,114,97,109,101,119,111,114,107,83,101,116,117,112,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,91,93,59,10,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,112,117,115,104,40,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,46,103,101,116,40,105,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,105,115,116,101,110,101,114,115,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,97,32,98,111,111,108,101,97,110,32,105,110,112,117,116,32,118,97,108,117,101,32,102,111,114,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,98,111,111,108,101,97,110,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,118,97,108,117,101,32,45,32,84,104,101,32,98,111,111,108,101,97,110,32,118,97,108,117,101,32,116,111,32,115,101,116,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,97,32,110,117,109,101,114,105,99,32,105,110,112,117,116,32,118,97,108,117,101,32,102,111,114,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,110,117,109,101,114,105,99,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,118,97,108,117,101,32,45,32,84,104,101,32,110,117,109,101,114,105,99,32,118,97,108,117,101,32,116,111,32,115,101,116,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,97,32,115,116,114,105,110,103,32,105,110,112,117,116,32,118,97,108,117,101,32,102,111,114,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,118,97,108,117,101,32,45,32,84,104,101,32,115,116,114,105,110,103,32,118,97,108,117,101,32,116,111,32,115,101,116,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,98,111,111,108,101,97,110,32,105,110,112,117,116,32,118,97,108,117,101,32,102,114,111,109,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,98,111,111,108,101,97,110,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,98,111,111,108,101,97,110,32,118,97,108,117,101,32,111,114,32,117,110,100,101,102,105,110,101,100,32,105,102,32,110,111,116,32,102,111,117,110,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,110,117,109,101,114,105,99,32,105,110,112,117,116,32,118,97,108,117,101,32,102,114,111,109,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,110,117,109,101,114,105,99,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,110,117,109,101,114,105,99,32,118,97,108,117,101,32,111,114,32,117,110,100,101,102,105,110,101,100,32,105,102,32,110,111,116,32,102,111,117,110,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,115,116,114,105,110,103,32,105,110,112,117,116,32,118,97,108,117,101,32,102,114,111,109,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,115,116,114,105,110,103,32,118,97,108,117,101,32,111,114,32,117,110,100,101,102,105,110,101,100,32,105,102,32,110,111,116,32,102,111,117,110,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,70,105,114,101,32,97,110,32,101,118,101,110,116,32,105,110,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,101,118,101,110,116,32,116,111,32,102,105,114,101,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,99,108,105,99,107,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,99,108,105,99,107,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,99,108,105,99,107,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,117,112,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,100,111,119,110,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,109,111,118,101,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,101,110,116,101,114,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,101,120,105,116,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,95,111,110,67,108,105,99,107,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,85,112,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,68,111,119,110,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,77,111,118,101,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,69,110,116,101,114,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,76,101,97,118,101,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,33,61,61,32,110,117,108,108,32,38,38,32,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,67,108,105,99,107,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,32,61,32,116,104,105,115,46,95,111,110,67,108,105,99,107,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,99,108,105,99,107,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,85,112,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,85,112,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,117,112,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,68,111,119,110,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,68,111,119,110,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,100,111,119,110,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,77,111,118,101,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,77,111,118,101,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,109,111,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,69,110,116,101,114,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,69,110,116,101,114,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,101,110,116,101,114,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,69,120,105,116,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,76,101,97,118,101,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,108,101,97,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,99,108,105,99,107,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,117,112,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,100,111,119,110,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,109,111,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,101,110,116,101,114,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,108,101,97,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,47,47,32,35,101,110,100,114,101,103,105,111,110,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,95,68,111,116,76,111,116,116,105,101,44,32,34,95,119,97,115,109,77,111,100,117,108,101,34,44,32,110,117,108,108,41,59,10,32,32,118,97,114,32,68,111,116,76,111,116,116,105,101,32,61,32,95,68,111,116,76,111,116,116,105,101,59,10,10,32,32,47,47,32,115,114,99,47,119,111,114,107,101,114,47,100,111,116,108,111,116,116,105,101,46,119,111,114,107,101,114,46,116,115,10,32,32,118,97,114,32,105,110,115,116,97,110,99,101,115,77,97,112,32,61,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,59,10,32,32,118,97,114,32,101,118,101,110,116,72,97,110,100,108,101,114,77,97,112,32,61,32,123,10,32,32,32,32,114,101,97,100,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,97,100,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,99,111,109,112,108,101,116,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,67,111,109,112,108,101,116,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,97,100,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,97,100,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,69,114,114,111,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,69,114,114,111,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,97,100,69,114,114,111,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,110,100,101,114,69,114,114,111,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,69,114,114,111,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,110,100,101,114,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,114,101,110,100,101,114,69,114,114,111,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,108,97,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,108,97,121,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,80,108,97,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,112,108,97,121,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,97,117,115,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,97,117,115,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,80,97,117,115,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,112,97,117,115,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,97,109,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,70,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,102,114,97,109,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,110,100,101,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,114,101,110,100,101,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,101,101,122,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,101,101,122,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,70,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,102,114,101,101,122,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,117,110,102,114,101,101,122,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,117,110,102,114,101,101,122,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,85,110,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,117,110,102,114,101,101,122,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,100,101,115,116,114,111,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,100,101,115,116,114,111,121,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,68,101,115,116,114,111,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,100,101,115,116,114,111,121,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,47,47,32,101,115,108,105,110,116,45,100,105,115,97,98,108,101,45,110,101,120,116,45,108,105,110,101,32,110,111,45,115,101,99,114,101,116,115,47,110,111,45,115,101,99,114,101,116,115,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,111,109,109,97,110,100,115,32,61,32,123,10,32,32,32,32,103,101,116,68,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,83,116,97,116,101,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,32,61,32,123,10,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,58,32,105,110,115,116,97,110,99,101,46,108,111,111,112,67,111,117,110,116,44,10,32,32,32,32,32,32,32,32,105,115,76,111,97,100,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,76,111,97,100,101,100,44,10,32,32,32,32,32,32,32,32,105,115,80,97,117,115,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,80,97,117,115,101,100,44,10,32,32,32,32,32,32,32,32,105,115,80,108,97,121,105,110,103,58,32,105,110,115,116,97,110,99,101,46,105,115,80,108,97,121,105,110,103,44,10,32,32,32,32,32,32,32,32,105,115,83,116,111,112,112,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,83,116,111,112,112,101,100,44,10,32,32,32,32,32,32,32,32,105,115,70,114,111,122,101,110,58,32,105,110,115,116,97,110,99,101,46,105,115,70,114,111,122,101,110,44,10,32,32,32,32,32,32,32,32,108,111,111,112,58,32,105,110,115,116,97,110,99,101,46,108,111,111,112,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,105,110,115,116,97,110,99,101,46,109,111,100,101,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,105,110,115,116,97,110,99,101,46,115,112,101,101,100,44,10,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,105,110,115,116,97,110,99,101,46,99,117,114,114,101,110,116,70,114,97,109,101,44,10,32,32,32,32,32,32,32,32,116,111,116,97,108,70,114,97,109,101,115,58,32,105,110,115,116,97,110,99,101,46,116,111,116,97,108,70,114,97,109,101,115,44,10,32,32,32,32,32,32,32,32,100,117,114,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,100,117,114,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,114,101,110,100,101,114,67,111,110,102,105,103,58,32,105,110,115,116,97,110,99,101,46,114,101,110,100,101,114,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,105,110,115,116,97,110,99,101,46,109,97,114,107,101,114,44,10,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,105,110,115,116,97,110,99,101,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,115,58,32,105,110,115,116,97,110,99,101,46,109,97,114,107,101,114,115,40,41,44,10,32,32,32,32,32,32,32,32,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,58,32,105,110,115,116,97,110,99,101,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,44,10,32,32,32,32,32,32,32,32,97,99,116,105,118,101,84,104,101,109,101,73,100,58,32,105,110,115,116,97,110,99,101,46,97,99,116,105,118,101,84,104,101,109,101,73,100,44,10,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,105,110,115,116,97,110,99,101,46,97,117,116,111,112,108,97,121,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,105,110,115,116,97,110,99,101,46,115,101,103,109,101,110,116,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,105,110,115,116,97,110,99,101,46,108,97,121,111,117,116,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,105,115,82,101,97,100,121,58,32,105,110,115,116,97,110,99,101,46,105,115,82,101,97,100,121,44,10,32,32,32,32,32,32,32,32,109,97,110,105,102,101,115,116,58,32,105,110,115,116,97,110,99,101,46,109,97,110,105,102,101,115,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,116,97,116,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,76,97,121,111,117,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,97,121,111,117,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,108,97,121,111,117,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,76,97,121,111,117,116,40,108,97,121,111,117,116,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,118,97,108,117,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,118,97,108,117,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,118,97,108,117,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,118,97,108,117,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,67,111,110,102,105,103,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,67,111,110,102,105,103,40,99,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,118,97,108,117,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,118,97,108,117,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,97,116,117,115,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,97,116,117,115,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,67,117,114,114,101,110,116,83,116,97,116,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,67,117,114,114,101,110,116,83,116,97,116,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,65,99,116,105,118,101,73,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,65,99,116,105,118,101,73,100,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,83,116,97,116,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,109,109,101,100,105,97,116,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,109,109,101,100,105,97,116,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,83,116,97,116,101,40,115,116,97,116,101,44,32,105,109,109,101,100,105,97,116,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,99,114,101,97,116,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,102,32,40,105,110,115,116,97,110,99,101,115,77,97,112,46,104,97,115,40,105,110,115,116,97,110,99,101,73,100,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,97,108,114,101,97,100,121,32,101,120,105,115,116,115,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,110,101,119,32,68,111,116,76,111,116,116,105,101,40,99,111,110,102,105,103,41,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,119,105,100,116,104,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,115,77,97,112,46,115,101,116,40,105,110,115,116,97,110,99,101,73,100,44,32,105,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,115,32,61,32,91,10,32,32,32,32,32,32,32,32,34,99,111,109,112,108,101,116,101,34,44,10,32,32,32,32,32,32,32,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,34,108,111,97,100,34,44,10,32,32,32,32,32,32,32,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,34,114,101,110,100,101,114,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,34,108,111,111,112,34,44,10,32,32,32,32,32,32,32,32,34,112,97,117,115,101,34,44,10,32,32,32,32,32,32,32,32,34,112,108,97,121,34,44,10,32,32,32,32,32,32,32,32,34,115,116,111,112,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,116,114,111,121,34,44,10,32,32,32,32,32,32,32,32,34,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,34,117,110,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,34,114,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,34,114,101,97,100,121,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,34,10,32,32,32,32,32,32,93,59,10,32,32,32,32,32,32,101,118,101,110,116,115,46,102,111,114,69,97,99,104,40,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,101,118,101,110,116,44,32,101,118,101,110,116,72,97,110,100,108,101,114,77,97,112,91,101,118,101,110,116,93,40,105,110,115,116,97,110,99,101,73,100,41,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,100,101,115,116,114,111,121,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,100,101,115,116,114,111,121,40,41,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,115,77,97,112,46,100,101,108,101,116,101,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,101,101,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,108,111,97,100,40,99,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,65,110,105,109,97,116,105,111,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,97,110,105,109,97,116,105,111,110,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,97,110,105,109,97,116,105,111,110,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,84,104,101,109,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,116,104,101,109,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,84,104,101,109,101,68,97,116,97,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,68,97,116,97,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,116,104,101,109,101,68,97,116,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,97,117,115,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,97,117,115,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,108,97,121,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,108,97,121,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,115,105,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,119,105,100,116,104,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,70,114,97,109,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,102,114,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,70,114,97,109,101,40,102,114,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,77,111,100,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,111,100,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,77,111,100,101,40,109,111,100,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,114,101,110,100,101,114,67,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,40,114,101,110,100,101,114,67,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,83,101,103,109,101,110,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,101,103,109,101,110,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,101,103,109,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,83,101,103,109,101,110,116,40,115,101,103,109,101,110,116,91,48,93,44,32,115,101,103,109,101,110,116,91,49,93,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,83,112,101,101,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,112,101,101,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,112,101,101,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,83,112,101,101,100,40,115,112,101,101,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,87,97,115,109,85,114,108,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,46,115,101,116,87,97,115,109,85,114,108,40,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,117,114,108,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,111,112,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,116,111,112,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,117,110,102,114,101,101,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,116,119,101,101,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,102,114,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,100,117,114,97,116,105,111,110,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,100,117,114,97,116,105,111,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,116,119,101,101,110,40,102,114,97,109,101,44,32,100,117,114,97,116,105,111,110,41,59,10,32,32,32,32,125,44,10,32,32,32,32,116,119,101,101,110,84,111,77,97,114,107,101,114,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,100,117,114,97,116,105,111,110,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,100,117,114,97,116,105,111,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,116,119,101,101,110,84,111,77,97,114,107,101,114,40,109,97,114,107,101,114,44,32,100,117,114,97,116,105,111,110,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,86,105,101,119,112,111,114,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,125,44,10,32,32,32,32,97,110,105,109,97,116,105,111,110,83,105,122,101,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,104,101,105,103,104,116,44,32,119,105,100,116,104,32,125,32,61,32,105,110,115,116,97,110,99,101,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,104,101,105,103,104,116,44,10,32,32,32,32,32,32,32,32,119,105,100,116,104,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,77,97,114,107,101,114,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,77,97,114,107,101,114,40,109,97,114,107,101,114,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,76,111,111,112,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,111,112,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,108,111,111,112,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,76,111,111,112,40,108,111,111,112,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,102,117,110,99,116,105,111,110,32,101,120,101,99,117,116,101,67,111,109,109,97,110,100,40,114,112,99,82,101,113,117,101,115,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,109,101,116,104,111,100,32,61,32,114,112,99,82,101,113,117,101,115,116,46,109,101,116,104,111,100,59,10,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,99,111,109,109,97,110,100,115,91,109,101,116,104,111,100,93,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,99,111,109,109,97,110,100,115,91,109,101,116,104,111,100,93,40,114,112,99,82,101,113,117,101,115,116,41,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,77,101,116,104,111,100,32,36,123,109,101,116,104,111,100,125,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,99,111,109,109,97,110,100,115,46,96,41,59,10,32,32,32,32,125,10,32,32,125,10,32,32,115,101,108,102,46,111,110,109,101,115,115,97,103,101,32,61,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,101,120,101,99,117,116,101,67,111,109,109,97,110,100,40,101,118,101,110,116,46,100,97,116,97,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,101,118,101,110,116,46,100,97,116,97,46,105,100,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,101,118,101,110,116,46,100,97,116,97,46,109,101,116,104,111,100,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,32,99,97,116,99,104,32,40,101,114,114,111,114,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,101,114,114,111,114,82,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,101,118,101,110,116,46,100,97,116,97,46,105,100,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,101,118,101,110,116,46,100,97,116,97,46,109,101,116,104,111,100,44,10,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,101,114,114,111,114,46,109,101,115,115,97,103,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,101,114,114,111,114,82,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,100,117,109,109,121,32,61,32,34,34,59,10,32,32,118,97,114,32,100,111,116,108,111,116,116,105,101,95,119,111,114,107,101,114,95,100,101,102,97,117,108,116,32,61,32,100,117,109,109,121,59,10,125,41,40,41,59,10])],{type:"application/javascript"}),e=URL.createObjectURL(i),t=new Worker(e);return URL.revokeObjectURL(e),t}},aS=sS,oS=class{constructor(){l2(this,"_workers",new Map),l2(this,"_animationWorkerMap",new Map)}getWorker(i){return this._workers.has(i)||this._workers.set(i,new aS),this._workers.get(i)}assignAnimationToWorker(i,e){this._animationWorkerMap.set(i,e)}unassignAnimationFromWorker(i){this._animationWorkerMap.delete(i)}sendMessage(i,e,t){this.getWorker(i).postMessage(e,t||[])}terminateWorker(i){let e=this._workers.get(i);e&&(e.terminate(),this._workers.delete(i))}};function Hu(i,e){if(i instanceof HTMLCanvasElement){let{height:t,width:n}=i.getBoundingClientRect();if(t!==0&&n!==0)return{width:n*e,height:t*e}}return{width:i.width,height:i.height}}function Vu(){return Date.now().toString(36)+Math.random().toString(36).substr(2,9)}var Gu=class nn{constructor(e){l2(this,"_eventManager",new ah),l2(this,"_id"),l2(this,"_worker"),l2(this,"_canvas"),l2(this,"_dotLottieInstanceState",{loopCount:0,markers:[],autoplay:!1,backgroundColor:"",currentFrame:0,duration:0,loop:!1,mode:"forward",segment:[0,0],segmentDuration:0,speed:1,totalFrames:0,isLoaded:!1,isPlaying:!1,isPaused:!1,isStopped:!0,isFrozen:!1,useFrameInterpolation:!1,renderConfig:{devicePixelRatio:an()},activeAnimationId:"",activeThemeId:"",layout:void 0,marker:void 0,isReady:!1,manifest:null}),l2(this,"_created",!1),l2(this,"_boundOnClick",null),l2(this,"_boundOnPointerUp",null),l2(this,"_boundOnPointerDown",null),l2(this,"_boundOnPointerMove",null),l2(this,"_boundOnPointerEnter",null),l2(this,"_boundOnPointerLeave",null),this._canvas=e.canvas,this._id=`dotlottie-${Vu()}`;let t=e.workerId||"defaultWorker";this._worker=nn._workerManager.getWorker(t),nn._workerManager.assignAnimationToWorker(this._id,t),nn._wasmUrl&&this._sendMessage("setWasmUrl",{url:nn._wasmUrl}),this._create({...e,renderConfig:{...e.renderConfig,devicePixelRatio:e.renderConfig?.devicePixelRatio||an(),freezeOnOffscreen:e.renderConfig?.freezeOnOffscreen??!0}}),this._worker.addEventListener("message",this._handleWorkerEvent.bind(this))}async _handleWorkerEvent(e){let t=e.data;if(!t.id&&(t.method==="onLoad"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event),De&&this._canvas instanceof HTMLCanvasElement&&(this._dotLottieInstanceState.renderConfig.freezeOnOffscreen&&(o3.observe(this._canvas,this),mi(this._canvas)||await this.freeze()),this._dotLottieInstanceState.renderConfig.autoResize&&l3.observe(this._canvas,this))),t.method==="onComplete"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onDestroy"&&t.result.instanceId===this._id&&this._eventManager.dispatch(t.result.event),t.method==="onUnfreeze"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._dotLottieInstanceState.isFrozen=!1,this._eventManager.dispatch(t.result.event)),t.method==="onFrame"&&t.result.instanceId===this._id&&(this._dotLottieInstanceState.currentFrame=t.result.event.currentFrame,this._eventManager.dispatch(t.result.event)),t.method==="onRender"&&t.result.instanceId===this._id&&this._eventManager.dispatch(t.result.event),t.method==="onFreeze"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onPause"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onPlay"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStop"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onLoadError"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onRenderError"&&t.result.instanceId===this._id&&this._eventManager.dispatch(t.result.event),t.method==="onReady"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onLoop"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStart"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._setupStateMachineListeners(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStop"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._cleanupStateMachineListeners(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineTransition"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStateEntered"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStateExit"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineCustomEvent"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineError"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineBooleanInputValueChange"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineNumericInputValueChange"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStringInputValueChange"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineInputFired"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineInternalMessage"&&t.result.instanceId===this._id)){await this._updateDotLottieInstanceState();let n=t.result.event;n.message.startsWith("OpenUrl: ")&&oh(n.message)}}async _create(e){let t;this._canvas instanceof HTMLCanvasElement?t=this._canvas.transferControlToOffscreen():t=this._canvas;let{instanceId:n}=await this._sendMessage("create",{instanceId:this._id,config:{...e,canvas:t},...Hu(this._canvas,e.renderConfig?.devicePixelRatio||an())},[t]);if(n!==this._id)throw new Error("Instance ID mismatch");this._created=!0,await this._updateDotLottieInstanceState()}get loopCount(){return this._dotLottieInstanceState.loopCount}get isLoaded(){return this._dotLottieInstanceState.isLoaded}get isPlaying(){return this._dotLottieInstanceState.isPlaying}get isPaused(){return this._dotLottieInstanceState.isPaused}get isStopped(){return this._dotLottieInstanceState.isStopped}get currentFrame(){return this._dotLottieInstanceState.currentFrame}get isFrozen(){return this._dotLottieInstanceState.isFrozen}get segmentDuration(){return this._dotLottieInstanceState.segmentDuration}get totalFrames(){return this._dotLottieInstanceState.totalFrames}get segment(){return this._dotLottieInstanceState.segment}get speed(){return this._dotLottieInstanceState.speed}get duration(){return this._dotLottieInstanceState.duration}get isReady(){return this._dotLottieInstanceState.isReady}get mode(){return this._dotLottieInstanceState.mode}get canvas(){return this._canvas}get autoplay(){return this._dotLottieInstanceState.autoplay}get backgroundColor(){return this._dotLottieInstanceState.backgroundColor}get loop(){return this._dotLottieInstanceState.loop}get useFrameInterpolation(){return this._dotLottieInstanceState.useFrameInterpolation}get renderConfig(){return this._dotLottieInstanceState.renderConfig}get manifest(){return this._dotLottieInstanceState.manifest}get activeAnimationId(){return this._dotLottieInstanceState.activeAnimationId}get marker(){return this._dotLottieInstanceState.marker}get activeThemeId(){return this._dotLottieInstanceState.activeThemeId}get layout(){return this._dotLottieInstanceState.layout}async play(){this._created&&(await this._sendMessage("play",{instanceId:this._id}),await this._updateDotLottieInstanceState(),De&&this._canvas instanceof HTMLCanvasElement&&this._dotLottieInstanceState.renderConfig.freezeOnOffscreen&&!mi(this._canvas)&&await this.freeze())}async pause(){this._created&&(await this._sendMessage("pause",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async stop(){this._created&&(await this._sendMessage("stop",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async setSpeed(e){this._created&&(await this._sendMessage("setSpeed",{instanceId:this._id,speed:e}),await this._updateDotLottieInstanceState())}async setMode(e){this._created&&(await this._sendMessage("setMode",{instanceId:this._id,mode:e}),await this._updateDotLottieInstanceState())}async setFrame(e){this._created&&(await this._sendMessage("setFrame",{frame:e,instanceId:this._id}),await this._updateDotLottieInstanceState())}async setSegment(e,t){this._created&&(await this._sendMessage("setSegment",{instanceId:this._id,segment:[e,t]}),await this._updateDotLottieInstanceState())}async setRenderConfig(e){if(!this._created)return;let{devicePixelRatio:t,freezeOnOffscreen:n,...r}=e;await this._sendMessage("setRenderConfig",{instanceId:this._id,renderConfig:{...this._dotLottieInstanceState.renderConfig,...r,devicePixelRatio:t||an(),freezeOnOffscreen:n??!0}}),await this._updateDotLottieInstanceState(),De&&this._canvas instanceof HTMLCanvasElement&&(this._dotLottieInstanceState.renderConfig.autoResize?l3.observe(this._canvas,this):l3.unobserve(this._canvas),this._dotLottieInstanceState.renderConfig.freezeOnOffscreen?(o3.observe(this._canvas,this),mi(this._canvas)||await this.freeze()):(o3.unobserve(this._canvas),this._dotLottieInstanceState.isFrozen&&await this.unfreeze()))}async setUseFrameInterpolation(e){this._created&&(await this._sendMessage("setUseFrameInterpolation",{instanceId:this._id,useFrameInterpolation:e}),await this._updateDotLottieInstanceState())}async setTheme(e){if(!this._created)return!1;let t=this._sendMessage("setTheme",{instanceId:this._id,themeId:e});return await this._updateDotLottieInstanceState(),t}async load(e){this._created&&(await this._sendMessage("load",{config:e,instanceId:this._id}),await this._updateDotLottieInstanceState())}async setLoop(e){this._created&&(await this._sendMessage("setLoop",{instanceId:this._id,loop:e}),await this._updateDotLottieInstanceState())}async resize(){if(!this._created)return;let{height:e,width:t}=Hu(this._canvas,this._dotLottieInstanceState.renderConfig.devicePixelRatio||an());await this._sendMessage("resize",{height:e,instanceId:this._id,width:t}),await this._updateDotLottieInstanceState()}async destroy(){this._created&&(this._created=!1,await this._sendMessage("destroy",{instanceId:this._id}),this._cleanupStateMachineListeners(),nn._workerManager.unassignAnimationFromWorker(this._id),this._eventManager.removeAllEventListeners(),De&&this._canvas instanceof HTMLCanvasElement&&(o3.unobserve(this._canvas),l3.unobserve(this._canvas)))}async freeze(){this._created&&(await this._sendMessage("freeze",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async unfreeze(){this._created&&(await this._sendMessage("unfreeze",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async setBackgroundColor(e){this._created&&(await this._sendMessage("setBackgroundColor",{instanceId:this._id,backgroundColor:e}),await this._updateDotLottieInstanceState())}async loadAnimation(e){this._created&&(await this._sendMessage("loadAnimation",{animationId:e,instanceId:this._id}),await this._updateDotLottieInstanceState())}async setLayout(e){this._created&&(await this._sendMessage("setLayout",{instanceId:this._id,layout:e}),await this._updateDotLottieInstanceState())}async _updateDotLottieInstanceState(){if(!this._created)return;let e=await this._sendMessage("getDotLottieInstanceState",{instanceId:this._id});this._dotLottieInstanceState=e.state}markers(){return this._dotLottieInstanceState.markers}async setMarker(e){this._created&&(await this._sendMessage("setMarker",{instanceId:this._id,marker:e}),await this._updateDotLottieInstanceState())}async setThemeData(e){if(!this._created)return!1;let t=await this._sendMessage("setThemeData",{instanceId:this._id,themeData:e});return await this._updateDotLottieInstanceState(),t}async setViewport(e,t,n,r){return this._created?this._sendMessage("setViewport",{x:e,y:t,width:n,height:r,instanceId:this._id}):!1}async animationSize(){return this._created?this._sendMessage("animationSize",{instanceId:this._id}):{height:0,width:0}}async tween(e,t){return this._created?this._sendMessage("tween",{instanceId:this._id,frame:e,duration:t}):!1}async tweenToMarker(e,t){return this._created?this._sendMessage("tweenToMarker",{instanceId:this._id,marker:e,duration:t}):!1}async _sendMessage(e,t,n){let r={id:`dotlottie-request-${Vu()}`,method:e,params:t};return this._worker.postMessage(r,n||[]),new Promise((s,a)=>{let o=l=>{let c=l.data;c.id===r.id&&(this._worker.removeEventListener("message",o),c.error?a(new Error(`Failed to execute method ${e}: ${c.error}`)):s(c.result))};this._worker.addEventListener("message",o)})}addEventListener(e,t){this._eventManager.addEventListener(e,t)}removeEventListener(e,t){this._eventManager.removeEventListener(e,t)}static setWasmUrl(e){nn._wasmUrl=e}async stateMachineLoad(e){if(!this._created)return!1;let t=await this._sendMessage("stateMachineLoad",{instanceId:this._id,stateMachineId:e});return await this._updateDotLottieInstanceState(),t}async stateMachineLoadData(e){if(!this._created)return!1;let t=await this._sendMessage("stateMachineLoadData",{instanceId:this._id,stateMachineData:e});return await this._updateDotLottieInstanceState(),t}async stateMachineStart(){if(!this._created)return!1;let e=await this._sendMessage("stateMachineStart",{instanceId:this._id});return e&&(this._setupStateMachineListeners(),await this._updateDotLottieInstanceState()),e}async stateMachineStop(){return this._created?(this._cleanupStateMachineListeners(),this._sendMessage("stateMachineStop",{instanceId:this._id})):!1}async stateMachineSetNumericInput(e,t){return this._created?this._sendMessage("stateMachineSetNumericInput",{instanceId:this._id,name:e,value:t}):!1}async stateMachineSetBooleanInput(e,t){return this._created?this._sendMessage("stateMachineSetBooleanInput",{instanceId:this._id,name:e,value:t}):!1}async stateMachineSetConfig(e){this._created&&this._sendMessage("stateMachineSetConfig",{instanceId:this._id,config:e})}async stateMachineSetStringInput(e,t){return this._created?this._sendMessage("stateMachineSetStringInput",{instanceId:this._id,name:e,value:t}):!1}async stateMachineGetNumericInput(e){if(this._created)return this._sendMessage("stateMachineGetNumericInput",{instanceId:this._id,name:e})}async stateMachineGetBooleanInput(e){if(this._created)return this._sendMessage("stateMachineGetBooleanInput",{instanceId:this._id,name:e})}async stateMachineGetStringInput(e){if(this._created)return this._sendMessage("stateMachineGetStringInput",{instanceId:this._id,name:e})}async stateMachineFireEvent(e){this._created&&this._sendMessage("stateMachineFireEvent",{instanceId:this._id,name:e})}async stateMachineGetStatus(){return this._created?this._sendMessage("stateMachineGetStatus",{instanceId:this._id}):""}async stateMachineGetCurrentState(){return this._created?this._sendMessage("stateMachineGetCurrentState",{instanceId:this._id}):""}async stateMachineGetActiveId(){return this._created?this._sendMessage("stateMachineGetActiveId",{instanceId:this._id}):""}async stateMachineOverrideState(e,t=!1){return this._created?this._sendMessage("stateMachineOverrideState",{instanceId:this._id,state:e,immediate:t}):!1}async stateMachineGet(e){return this._created?this._sendMessage("stateMachineGet",{instanceId:this._id,stateMachineId:e}):""}async stateMachineGetListeners(){return this._created?this._sendMessage("stateMachineGetListeners",{instanceId:this._id}):[]}async stateMachinePostClickEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostClickEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerUpEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerUpEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerDownEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerDownEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerMoveEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerMoveEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerEnterEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerEnterEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerExitEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerExitEvent",{instanceId:this._id,x:e,y:t})}_onClick(e){let t=$t(e);t&&this._sendMessage("stateMachinePostClickEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerUp(e){let t=$t(e);t&&this._sendMessage("stateMachinePostPointerUpEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerDown(e){let t=$t(e);t&&this._sendMessage("stateMachinePostPointerDownEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerMove(e){let t=$t(e);t&&this._sendMessage("stateMachinePostPointerMoveEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerEnter(e){let t=$t(e);t&&this._sendMessage("stateMachinePostPointerEnterEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerLeave(e){let t=$t(e);t&&this._sendMessage("stateMachinePostPointerExitEvent",{instanceId:this._id,x:t.x,y:t.y})}async _setupStateMachineListeners(){if(De&&this._canvas instanceof HTMLCanvasElement&&this.isLoaded){let e=await this._sendMessage("stateMachineGetListeners",{instanceId:this._id});if(e.length===0)return;this._cleanupStateMachineListeners(),e.includes("Click")&&(this._boundOnClick=this._onClick.bind(this),this._canvas.addEventListener("click",this._boundOnClick)),e.includes("PointerUp")&&(this._boundOnPointerUp=this._onPointerUp.bind(this),this._canvas.addEventListener("pointerup",this._boundOnPointerUp)),e.includes("PointerDown")&&(this._boundOnPointerDown=this._onPointerDown.bind(this),this._canvas.addEventListener("pointerdown",this._boundOnPointerDown)),e.includes("PointerMove")&&(this._boundOnPointerMove=this._onPointerMove.bind(this),this._canvas.addEventListener("pointermove",this._boundOnPointerMove)),e.includes("PointerEnter")&&(this._boundOnPointerEnter=this._onPointerEnter.bind(this),this._canvas.addEventListener("pointerenter",this._boundOnPointerEnter)),e.includes("PointerExit")&&(this._boundOnPointerLeave=this._onPointerLeave.bind(this),this._canvas.addEventListener("pointerleave",this._boundOnPointerLeave))}}_cleanupStateMachineListeners(){De&&this._canvas instanceof HTMLCanvasElement&&(this._boundOnClick&&(this._canvas.removeEventListener("click",this._boundOnClick),this._boundOnClick=null),this._boundOnPointerUp&&(this._canvas.removeEventListener("pointerup",this._boundOnPointerUp),this._boundOnPointerUp=null),this._boundOnPointerDown&&(this._canvas.removeEventListener("pointerdown",this._boundOnPointerDown),this._boundOnPointerDown=null),this._boundOnPointerMove&&(this._canvas.removeEventListener("pointermove",this._boundOnPointerMove),this._boundOnPointerMove=null),this._boundOnPointerEnter&&(this._canvas.removeEventListener("pointerenter",this._boundOnPointerEnter),this._boundOnPointerEnter=null),this._boundOnPointerLeave&&(this._canvas.removeEventListener("pointerleave",this._boundOnPointerLeave),this._boundOnPointerLeave=null))}};l2(Gu,"_workerManager",new oS),l2(Gu,"_wasmUrl","");var lS=_d({props:{animationId:{type:String,required:!1},autoplay:{type:Boolean,required:!1},backgroundColor:{type:String,required:!1},data:{type:[String,ArrayBuffer],required:!1},loop:{type:Boolean,required:!1},mode:{type:String,required:!1},renderConfig:{type:Object,required:!1},segment:{type:Array,required:!1},speed:{type:Number,required:!1},src:{type:String,required:!1},useFrameInterpolation:{type:Boolean,required:!1},marker:{type:String,required:!1},playOnHover:{type:Boolean,required:!1},themeData:{type:String,required:!1},themeId:{type:String,required:!1},layout:{type:Object,required:!1}},setup(i,{attrs:e,expose:t}){const n=Be(void 0),{animationId:r,backgroundColor:s,data:a,layout:o,loop:l,marker:c,mode:u,playOnHover:f,renderConfig:h,segment:d,speed:g,src:_,themeId:m,useFrameInterpolation:p}=nd(i);let b=null;const w=$9(()=>{let A=i.autoplay;return typeof f?.value<"u"&&f.value&&(A=!1),A}),y=(A={})=>{b!==null&&b.load({animationId:r?.value,backgroundColor:s?.value,data:a?.value,layout:o?.value,loop:l?.value,marker:c?.value,mode:u?.value,autoplay:w.value,renderConfig:h?.value,segment:d?.value,speed:g?.value,src:_?.value,themeId:m?.value,useFrameInterpolation:p?.value,...A})};Se(()=>s?.value,A=>{b&&typeof A<"u"&&b.setBackgroundColor(A)}),Se(()=>c?.value,A=>{b&&typeof A<"u"&&b.setMarker(A)}),Se(()=>l?.value,A=>{b&&typeof A<"u"&&b.setLoop(A)}),Se(()=>u?.value,A=>{b&&typeof A<"u"&&b.setMode(A)}),Se(()=>d?.value,A=>{if(!b)return;const L=A?.[0],N=A?.[1];typeof L=="number"&&typeof N=="number"&&b.setSegment(L,N)}),Se(()=>g?.value,A=>{b&&typeof A<"u"&&b.setSpeed(A)}),Se(()=>p?.value,A=>{b&&typeof A<"u"&&b.setUseFrameInterpolation(A)}),Se(()=>r?.value,A=>{b&&b.isLoaded&&typeof A<"u"&&A!==b.activeAnimationId&&b.loadAnimation(A)}),Se(()=>i.themeData,A=>{b&&typeof A<"u"&&b.setTheme(A)}),Se(()=>m?.value,A=>{b&&typeof A<"u"&&b.setTheme(A)});function C(A){A.type==="mouseenter"?b?.play():b?.pause()}return Se(()=>f?.value,A=>{b&&typeof A<"u"&&A?(n.value?.addEventListener("mouseenter",C),n.value?.addEventListener("mouseleave",C)):(n.value?.removeEventListener("mouseenter",C),n.value?.removeEventListener("mouseleave",C))}),Se(()=>o?.value,A=>{b&&typeof A<"u"&&b.setLayout(A)},{deep:!0}),Se(()=>h?.value,A=>{b&&typeof A<"u"&&b.setRenderConfig(A)},{deep:!0}),Se(()=>a?.value,A=>{b&&(typeof A=="object"||typeof A=="string")&&y({data:A})},{deep:!0}),Se(()=>_?.value,A=>{b&&typeof A<"u"&&y({src:A})}),r0(()=>{n.value&&(b=new rS({canvas:n.value,...i,autoplay:w.value}),f?.value&&(n.value.addEventListener("mouseenter",C),n.value.addEventListener("mouseleave",C)))}),S6(()=>{n.value?.addEventListener("mouseenter",C),n.value?.addEventListener("mouseleave",C),b?.destroy()}),t({getDotLottieInstance:()=>b}),()=>$l("div",{...e},$l("canvas",{style:"height: 100%; width: 100%",ref:n}))}});const cS="/assets/2-CAXS8-ZC.lottie",uS={__name:"Astronot",setup(i){const e=Be(null);function t(){const n=window.innerWidth,r=window.innerHeight;return{startX:-.2*n,startY:.8*r,endX:.6*n,endY:.2*r,returnX:-.2*n,returnY:.8*r,finalX:.1*n,finalY:.7*r}}return r0(async()=>{await Oa();const n=e.value.$el,r=t();Q2.fromTo(n,{x:r.startX,y:r.startY,scale:2,opacity:1},{x:r.endX,y:r.endY,scale:.5,opacity:0,duration:5,ease:"power1.inOut",onComplete:()=>{Q2.fromTo(n,{x:r.returnX,y:r.returnY,scale:.7,opacity:0},{x:r.finalX,y:r.finalY,scale:.7,opacity:1,duration:1,ease:"power1.out"})}})}),(n,r)=>(ne(),V6(ra(lS),{ref_key:"astronautRef",ref:e,src:ra(cS),autoplay:"",loop:"",class:"astronaut"},null,8,["src"]))}},fS=Rl(uS,[["__scopeId","data-v-2198888a"]]),hS={__name:"App",setup(i){return(e,t)=>(ne(),ce(ke,null,[fe(mM),fe(bM),fe(fS),fe(Am),fe(zm),fe(GM),fe(t_)],64))}};B7(hS).mount("#app");
